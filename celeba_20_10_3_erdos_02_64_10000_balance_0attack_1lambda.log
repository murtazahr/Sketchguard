Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6627 ± 0.0514 | min=0.5197 max=0.7231
         : test loss mean=0.6810 ± 0.0036
         : individual accs = ['0.703509', '0.674439', '0.621118', '0.716753', '0.565256', '0.648908', '0.642795', '0.635315', '0.634683', '0.682624', '0.657343', '0.714667', '0.678819', '0.700862', '0.669039', '0.723144', '0.706239', '0.638373', '0.719965', '0.519720']
         : correct/total = [(802, 1140), (781, 1158), (700, 1127), (830, 1158), (641, 1134), (743, 1145), (736, 1145), (716, 1127), (721, 1136), (770, 1128), (752, 1144), (804, 1125), (782, 1152), (813, 1160), (752, 1124), (828, 1145), (815, 1154), (722, 1131), (833, 1157), (593, 1141)]
Round 002: test acc mean=0.6613 ± 0.0470 | min=0.5415 max=0.7289
         : test loss mean=0.6671 ± 0.0120
         : individual accs = ['0.662281', '0.676166', '0.676131', '0.671848', '0.571429', '0.541485', '0.640175', '0.632653', '0.728873', '0.700355', '0.702797', '0.696000', '0.707465', '0.626724', '0.620996', '0.689956', '0.683709', '0.623342', '0.717373', '0.656442']
         : correct/total = [(755, 1140), (783, 1158), (762, 1127), (778, 1158), (648, 1134), (620, 1145), (733, 1145), (713, 1127), (828, 1136), (790, 1128), (804, 1144), (783, 1125), (815, 1152), (727, 1160), (698, 1124), (790, 1145), (789, 1154), (705, 1131), (830, 1157), (749, 1141)]
Round 003: test acc mean=0.6887 ± 0.0547 | min=0.5750 max=0.7808
         : test loss mean=0.6381 ± 0.0287
         : individual accs = ['0.673684', '0.678756', '0.710736', '0.737478', '0.574956', '0.641048', '0.712664', '0.622893', '0.780810', '0.737589', '0.723776', '0.728889', '0.663194', '0.731034', '0.614769', '0.709170', '0.692374', '0.590628', '0.758859', '0.689746']
         : correct/total = [(768, 1140), (786, 1158), (801, 1127), (854, 1158), (652, 1134), (734, 1145), (816, 1145), (702, 1127), (887, 1136), (832, 1128), (828, 1144), (820, 1125), (764, 1152), (848, 1160), (691, 1124), (812, 1145), (799, 1154), (668, 1131), (878, 1157), (787, 1141)]
Round 004: test acc mean=0.7414 ± 0.0460 | min=0.6451 max=0.8310
         : test loss mean=0.5827 ± 0.0463
         : individual accs = ['0.709649', '0.718480', '0.731145', '0.794473', '0.692240', '0.720524', '0.725764', '0.645075', '0.830986', '0.801418', '0.774476', '0.774222', '0.708333', '0.760345', '0.726868', '0.751965', '0.737435', '0.663130', '0.798617', '0.763365']
         : correct/total = [(809, 1140), (832, 1158), (824, 1127), (920, 1158), (785, 1134), (825, 1145), (831, 1145), (727, 1127), (944, 1136), (904, 1128), (886, 1144), (871, 1125), (816, 1152), (882, 1160), (817, 1124), (861, 1145), (851, 1154), (750, 1131), (924, 1157), (871, 1141)]
Round 005: test acc mean=0.7842 ± 0.0378 | min=0.6744 max=0.8504
         : test loss mean=0.5079 ± 0.0482
         : individual accs = ['0.782456', '0.764249', '0.674357', '0.830743', '0.778660', '0.769432', '0.772052', '0.771074', '0.850352', '0.847518', '0.812063', '0.804444', '0.750000', '0.776724', '0.783808', '0.792140', '0.746101', '0.784262', '0.816768', '0.776512']
         : correct/total = [(892, 1140), (885, 1158), (760, 1127), (962, 1158), (883, 1134), (881, 1145), (884, 1145), (869, 1127), (966, 1136), (956, 1128), (929, 1144), (905, 1125), (864, 1152), (901, 1160), (881, 1124), (907, 1145), (861, 1154), (887, 1131), (945, 1157), (886, 1141)]
Round 006: test acc mean=0.8184 ± 0.0228 | min=0.7737 max=0.8636
         : test loss mean=0.4339 ± 0.0323
         : individual accs = ['0.787719', '0.819516', '0.773736', '0.847150', '0.819224', '0.843668', '0.820961', '0.817214', '0.863556', '0.824468', '0.849650', '0.828444', '0.816840', '0.822414', '0.779359', '0.808734', '0.828423', '0.789567', '0.823682', '0.803681']
         : correct/total = [(898, 1140), (949, 1158), (872, 1127), (981, 1158), (929, 1134), (966, 1145), (940, 1145), (921, 1127), (981, 1136), (930, 1128), (972, 1144), (932, 1125), (941, 1152), (954, 1160), (876, 1124), (926, 1145), (956, 1154), (893, 1131), (953, 1157), (917, 1141)]
Round 007: test acc mean=0.8466 ± 0.0170 | min=0.8210 max=0.8759
         : test loss mean=0.3710 ± 0.0257
         : individual accs = ['0.832456', '0.860967', '0.824312', '0.873921', '0.839506', '0.867249', '0.852402', '0.831411', '0.859155', '0.875887', '0.835664', '0.870222', '0.828993', '0.859483', '0.839858', '0.820961', '0.824957', '0.847922', '0.845290', '0.840491']
         : correct/total = [(949, 1140), (997, 1158), (929, 1127), (1012, 1158), (952, 1134), (993, 1145), (976, 1145), (937, 1127), (976, 1136), (988, 1128), (956, 1144), (979, 1125), (955, 1152), (997, 1160), (944, 1124), (940, 1145), (952, 1154), (959, 1131), (978, 1157), (959, 1141)]
Round 008: test acc mean=0.8653 ± 0.0088 | min=0.8515 max=0.8847
         : test loss mean=0.3273 ± 0.0123
         : individual accs = ['0.860526', '0.878238', '0.859805', '0.862694', '0.858907', '0.884716', '0.875109', '0.866016', '0.875000', '0.856383', '0.859266', '0.871111', '0.861979', '0.868103', '0.877224', '0.852402', '0.865685', '0.851459', '0.860847', '0.860649']
         : correct/total = [(981, 1140), (1017, 1158), (969, 1127), (999, 1158), (974, 1134), (1013, 1145), (1002, 1145), (976, 1127), (994, 1136), (966, 1128), (983, 1144), (980, 1125), (993, 1152), (1007, 1160), (986, 1124), (976, 1145), (999, 1154), (963, 1131), (996, 1157), (982, 1141)]
Round 009: test acc mean=0.8720 ± 0.0137 | min=0.8421 max=0.8926
         : test loss mean=0.3072 ± 0.0214
         : individual accs = ['0.882456', '0.889465', '0.842059', '0.884283', '0.865079', '0.892576', '0.882096', '0.868678', '0.883803', '0.884752', '0.871503', '0.877333', '0.864583', '0.878448', '0.866548', '0.856769', '0.876083', '0.860301', '0.842697', '0.870289']
         : correct/total = [(1006, 1140), (1030, 1158), (949, 1127), (1024, 1158), (981, 1134), (1022, 1145), (1010, 1145), (979, 1127), (1004, 1136), (998, 1128), (997, 1144), (987, 1125), (996, 1152), (1019, 1160), (974, 1124), (981, 1145), (1011, 1154), (973, 1131), (975, 1157), (993, 1141)]
Round 010: test acc mean=0.8819 ± 0.0102 | min=0.8598 max=0.8963
         : test loss mean=0.2872 ± 0.0134
         : individual accs = ['0.891228', '0.892919', '0.859805', '0.887737', '0.882716', '0.891703', '0.881223', '0.874889', '0.889965', '0.896277', '0.873252', '0.889778', '0.875000', '0.887069', '0.886121', '0.862009', '0.887348', '0.885057', '0.865169', '0.879053']
         : correct/total = [(1016, 1140), (1034, 1158), (969, 1127), (1028, 1158), (1001, 1134), (1021, 1145), (1009, 1145), (986, 1127), (1011, 1136), (1011, 1128), (999, 1144), (1001, 1125), (1008, 1152), (1029, 1160), (996, 1124), (987, 1145), (1024, 1154), (1001, 1131), (1001, 1157), (1003, 1141)]

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Overall test accuracy: mean=0.8819 ± 0.0102

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.028s (72.3%)
    - Aggregation: 0.011s (27.7%)
  TOTALS:
    - Total computation: 0.039s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.039s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.014s
  - Aggregation: 0.005s
  - Model transfer: 0.000s
  - Total per node: 0.019s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.273s
  - Total aggregation: 0.098s
  - Total model transfer: 0.000s
  - Grand total: 0.371s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
