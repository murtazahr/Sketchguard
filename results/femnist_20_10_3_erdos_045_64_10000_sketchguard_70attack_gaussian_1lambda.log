Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4144 ± 0.0631 | min=0.2755 max=0.5106
         : test loss mean=3.7678 ± 0.0516
         : individual accs = ['0.495397', '0.449441', '0.441068', '0.450265', '0.441701', '0.456263', '0.341283', '0.406530', '0.413982', '0.399579', '0.292542', '0.497257', '0.348400', '0.347868', '0.431885', '0.448002', '0.444739', '0.510638', '0.275465', '0.396560']
         : correct/total = [(2045, 4128), (1889, 4203), (1800, 4081), (1951, 4333), (1807, 4091), (1956, 4287), (1431, 4193), (1768, 4349), (1735, 4191), (1709, 4277), (1212, 4143), (2085, 4193), (1426, 4093), (1460, 4197), (1750, 4052), (1805, 4029), (1847, 4153), (2136, 4183), (1125, 4084), (1637, 4128)]
         : compromised: 0.4149, honest: 0.4134
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 002: test acc mean=0.6701 ± 0.0355 | min=0.5698 max=0.7279
         : test loss mean=2.8992 ± 0.6529
         : individual accs = ['0.695252', '0.687366', '0.631218', '0.689130', '0.664141', '0.712853', '0.616027', '0.651414', '0.698163', '0.697685', '0.650978', '0.700215', '0.677254', '0.727901', '0.686821', '0.647059', '0.671563', '0.656467', '0.671401', '0.569767']
         : correct/total = [(2870, 4128), (2889, 4203), (2576, 4081), (2986, 4333), (2717, 4091), (3056, 4287), (2583, 4193), (2833, 4349), (2926, 4191), (2984, 4277), (2697, 4143), (2936, 4193), (2772, 4093), (3055, 4197), (2783, 4052), (2607, 4029), (2789, 4153), (2746, 4183), (2742, 4084), (2352, 4128)]
         : compromised: 0.6694, honest: 0.6718
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 003: test acc mean=0.6948 ± 0.0459 | min=0.6141 max=0.7801
         : test loss mean=1.9993 ± 0.5636
         : individual accs = ['0.727229', '0.642636', '0.614065', '0.742211', '0.712540', '0.708654', '0.662294', '0.726374', '0.779289', '0.726444', '0.691045', '0.633198', '0.669191', '0.780081', '0.682873', '0.652271', '0.738021', '0.666268', '0.696621', '0.643895']
         : correct/total = [(3002, 4128), (2701, 4203), (2506, 4081), (3216, 4333), (2915, 4091), (3038, 4287), (2777, 4193), (3159, 4349), (3266, 4191), (3107, 4277), (2863, 4143), (2655, 4193), (2739, 4093), (3274, 4197), (2767, 4052), (2628, 4029), (3065, 4153), (2787, 4183), (2845, 4084), (2658, 4128)]
         : compromised: 0.6838, honest: 0.7203
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 004: test acc mean=0.7678 ± 0.0225 | min=0.7204 max=0.8046
         : test loss mean=1.0710 ± 0.2386
         : individual accs = ['0.779070', '0.740661', '0.766724', '0.772444', '0.777316', '0.762305', '0.765323', '0.791676', '0.802672', '0.785597', '0.752353', '0.745767', '0.723186', '0.804622', '0.767769', '0.776868', '0.791958', '0.760220', '0.769833', '0.720446']
         : correct/total = [(3216, 4128), (3113, 4203), (3129, 4081), (3347, 4333), (3180, 4091), (3268, 4287), (3209, 4193), (3443, 4349), (3364, 4191), (3360, 4277), (3117, 4143), (3127, 4193), (2960, 4093), (3377, 4197), (3111, 4052), (3130, 4029), (3289, 4153), (3180, 4183), (3144, 4084), (2974, 4128)]
         : compromised: 0.7628, honest: 0.7797
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 005: test acc mean=0.8038 ± 0.0096 | min=0.7868 max=0.8223
         : test loss mean=0.6915 ± 0.0598
         : individual accs = ['0.801357', '0.795384', '0.804460', '0.802908', '0.793693', '0.807091', '0.800620', '0.810991', '0.821522', '0.812953', '0.788559', '0.792511', '0.796237', '0.822254', '0.808243', '0.808141', '0.810739', '0.786756', '0.811214', '0.801357']
         : correct/total = [(3308, 4128), (3343, 4203), (3283, 4081), (3479, 4333), (3247, 4091), (3460, 4287), (3357, 4193), (3527, 4349), (3443, 4191), (3477, 4277), (3267, 4143), (3323, 4193), (3259, 4093), (3451, 4197), (3275, 4052), (3256, 4029), (3367, 4153), (3291, 4183), (3313, 4084), (3308, 4128)]
         : compromised: 0.8042, honest: 0.8030
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 006: test acc mean=0.8219 ± 0.0059 | min=0.8098 max=0.8326
         : test loss mean=0.5717 ± 0.0219
         : individual accs = ['0.814196', '0.823459', '0.817202', '0.824371', '0.813982', '0.818055', '0.819223', '0.832605', '0.823670', '0.823942', '0.809800', '0.822323', '0.816760', '0.831070', '0.830948', '0.825515', '0.827113', '0.823093', '0.823947', '0.817587']
         : correct/total = [(3361, 4128), (3461, 4203), (3335, 4081), (3572, 4333), (3330, 4091), (3507, 4287), (3435, 4193), (3621, 4349), (3452, 4191), (3524, 4277), (3355, 4143), (3448, 4193), (3343, 4093), (3488, 4197), (3367, 4052), (3326, 4029), (3435, 4153), (3443, 4183), (3365, 4084), (3375, 4128)]
         : compromised: 0.8227, honest: 0.8203
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 007: test acc mean=0.8335 ± 0.0055 | min=0.8222 max=0.8444
         : test loss mean=0.5193 ± 0.0202
         : individual accs = ['0.827519', '0.844397', '0.835334', '0.837526', '0.827670', '0.830651', '0.838063', '0.838814', '0.827726', '0.838204', '0.824765', '0.836394', '0.830931', '0.831308', '0.838845', '0.834202', '0.837948', '0.831461', '0.836680', '0.822190']
         : correct/total = [(3416, 4128), (3549, 4203), (3409, 4081), (3629, 4333), (3386, 4091), (3561, 4287), (3514, 4193), (3648, 4349), (3469, 4191), (3585, 4277), (3417, 4143), (3507, 4193), (3401, 4093), (3489, 4197), (3399, 4052), (3361, 4029), (3480, 4153), (3478, 4183), (3417, 4084), (3394, 4128)]
         : compromised: 0.8340, honest: 0.8325
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 008: test acc mean=0.8366 ± 0.0068 | min=0.8166 max=0.8445
         : test loss mean=0.4949 ± 0.0210
         : individual accs = ['0.829700', '0.839876', '0.832394', '0.841449', '0.835493', '0.842314', '0.844503', '0.844332', '0.838225', '0.843114', '0.825972', '0.841164', '0.830198', '0.837026', '0.843287', '0.838670', '0.835781', '0.834808', '0.836435', '0.816618']
         : correct/total = [(3425, 4128), (3530, 4203), (3397, 4081), (3646, 4333), (3418, 4091), (3611, 4287), (3541, 4193), (3672, 4349), (3513, 4191), (3606, 4277), (3422, 4143), (3527, 4193), (3398, 4093), (3513, 4197), (3417, 4052), (3379, 4029), (3471, 4153), (3492, 4183), (3416, 4084), (3371, 4128)]
         : compromised: 0.8369, honest: 0.8357
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 009: test acc mean=0.8445 ± 0.0062 | min=0.8326 max=0.8529
         : test loss mean=0.4722 ± 0.0179
         : individual accs = ['0.835029', '0.850583', '0.840725', '0.851373', '0.832559', '0.842780', '0.852373', '0.849851', '0.851825', '0.852934', '0.837557', '0.842118', '0.840459', '0.842983', '0.849951', '0.849839', '0.835300', '0.846522', '0.843291', '0.841328']
         : correct/total = [(3447, 4128), (3575, 4203), (3431, 4081), (3689, 4333), (3406, 4091), (3613, 4287), (3574, 4193), (3696, 4349), (3570, 4191), (3648, 4277), (3470, 4143), (3531, 4193), (3440, 4093), (3538, 4197), (3444, 4052), (3424, 4029), (3469, 4153), (3541, 4183), (3444, 4084), (3473, 4128)]
         : compromised: 0.8462, honest: 0.8405
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...
Round 010: test acc mean=0.8493 ± 0.0055 | min=0.8395 max=0.8601
         : test loss mean=0.4588 ± 0.0190
         : individual accs = ['0.843023', '0.860100', '0.845381', '0.854604', '0.840137', '0.845113', '0.857143', '0.849391', '0.853973', '0.852233', '0.839488', '0.845695', '0.845834', '0.852275', '0.851185', '0.855795', '0.848062', '0.852737', '0.850392', '0.843750']
         : correct/total = [(3480, 4128), (3615, 4203), (3450, 4081), (3703, 4333), (3437, 4091), (3623, 4287), (3594, 4193), (3694, 4349), (3579, 4191), (3645, 4277), (3478, 4143), (3546, 4193), (3462, 4093), (3577, 4197), (3449, 4052), (3448, 4029), (3522, 4153), (3567, 4183), (3473, 4084), (3483, 4128)]
         : compromised: 0.8510, honest: 0.8454
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.375']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: sketchguard
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.8510, Honest: 0.8454
Overall test accuracy: mean=0.8493 ± 0.0055

=== COARSE SUMMARY ===
Node 0: acceptance=0.333
Node 1: acceptance=0.400
Node 2: acceptance=0.375
Node 3: acceptance=0.429
Node 4: acceptance=0.333
Node 5: acceptance=0.200
Node 6: acceptance=0.250
Node 7: acceptance=0.273
Node 8: acceptance=0.143
Node 9: acceptance=0.364
Node 10: acceptance=0.250
Node 11: acceptance=0.250
Node 12: acceptance=0.333
Node 13: acceptance=0.111
Node 14: acceptance=0.286
Node 15: acceptance=0.333
Node 16: acceptance=0.286
Node 17: acceptance=0.500
Node 18: acceptance=0.250
Node 19: acceptance=0.200

Performance Summary:
  - Sketching time: 18.913s (98.5%)
  - Filtering time: 0.023s (0.1%)
  - Aggregation time: 0.266s (1.4%)
  - Total time: 19.202s
  - Mean acceptance rate: 0.295

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
