Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 002: test acc mean=0.5076 ± 0.0442 | min=0.4715 max=0.6664
         : test loss mean=nan ± nan
         : individual accs = ['0.474561', '0.512090', '0.509317', '0.471503', '0.485891', '0.489956', '0.476856', '0.581189', '0.666373', '0.491135', '0.476399', '0.498667', '0.477431', '0.493103', '0.482206', '0.525764', '0.510399', '0.520778', '0.522040', '0.485539']
         : correct/total = [(541, 1140), (593, 1158), (574, 1127), (546, 1158), (551, 1134), (561, 1145), (546, 1145), (655, 1127), (757, 1136), (554, 1128), (545, 1144), (561, 1125), (550, 1152), (572, 1160), (542, 1124), (602, 1145), (589, 1154), (589, 1131), (604, 1157), (554, 1141)]
         : compromised: 0.5031, honest: 0.5120
Round 003: test acc mean=0.5073 ± 0.0251 | min=0.4384 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.527193', '0.487910', '0.488021', '0.528497', '0.522046', '0.514410', '0.438428', '0.503993', '0.562500', '0.491135', '0.483392', '0.472000', '0.522569', '0.506897', '0.517794', '0.513537', '0.520797', '0.509284', '0.522040', '0.514461']
         : correct/total = [(601, 1140), (565, 1158), (550, 1127), (612, 1158), (592, 1134), (589, 1145), (502, 1145), (568, 1127), (639, 1136), (554, 1128), (553, 1144), (531, 1125), (602, 1152), (588, 1160), (582, 1124), (588, 1145), (601, 1154), (576, 1131), (604, 1157), (587, 1141)]
         : compromised: 0.5054, honest: 0.5092
Round 004: test acc mean=0.5383 ± 0.0434 | min=0.4911 max=0.6358
         : test loss mean=nan ± nan
         : individual accs = ['0.535965', '0.508636', '0.504880', '0.627807', '0.635802', '0.595633', '0.569432', '0.503993', '0.567782', '0.491135', '0.598776', '0.522667', '0.517361', '0.518103', '0.503559', '0.503930', '0.506066', '0.513705', '0.511668', '0.529360']
         : correct/total = [(611, 1140), (589, 1158), (569, 1127), (727, 1158), (721, 1134), (682, 1145), (652, 1145), (568, 1127), (645, 1136), (554, 1128), (685, 1144), (588, 1125), (596, 1152), (601, 1160), (566, 1124), (577, 1145), (584, 1154), (581, 1131), (592, 1157), (604, 1141)]
         : compromised: 0.5200, honest: 0.5566
Round 005: test acc mean=0.5492 ± 0.0764 | min=0.4834 max=0.7447
         : test loss mean=nan ± nan
         : individual accs = ['0.585965', '0.508636', '0.506655', '0.528497', '0.522046', '0.514410', '0.489956', '0.675244', '0.743838', '0.744681', '0.483392', '0.498667', '0.522569', '0.506897', '0.517794', '0.503930', '0.535529', '0.521662', '0.522040', '0.551271']
         : correct/total = [(668, 1140), (589, 1158), (571, 1127), (612, 1158), (592, 1134), (589, 1145), (561, 1145), (761, 1127), (845, 1136), (840, 1128), (553, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (577, 1145), (618, 1154), (590, 1131), (604, 1157), (629, 1141)]
         : compromised: 0.5123, honest: 0.5860
Round 006: test acc mean=0.5699 ± 0.0873 | min=0.4911 max=0.8116
         : test loss mean=nan ± nan
         : individual accs = ['0.543860', '0.508636', '0.493345', '0.702073', '0.716049', '0.657642', '0.572052', '0.503993', '0.811620', '0.491135', '0.655594', '0.498667', '0.535590', '0.535345', '0.506228', '0.542358', '0.522530', '0.520778', '0.522040', '0.559159']
         : correct/total = [(620, 1140), (589, 1158), (556, 1127), (813, 1158), (812, 1134), (753, 1145), (655, 1145), (568, 1127), (922, 1136), (554, 1128), (750, 1144), (561, 1125), (617, 1152), (621, 1160), (569, 1124), (621, 1145), (603, 1154), (589, 1131), (604, 1157), (638, 1141)]
         : compromised: 0.5321, honest: 0.6078
Round 007: test acc mean=0.5694 ± 0.1140 | min=0.4869 max=0.8741
         : test loss mean=nan ± nan
         : individual accs = ['0.567544', '0.508636', '0.511979', '0.528497', '0.522046', '0.514410', '0.526638', '0.787933', '0.874120', '0.845745', '0.486888', '0.504889', '0.522569', '0.506897', '0.517794', '0.529258', '0.538128', '0.524315', '0.522040', '0.548642']
         : correct/total = [(647, 1140), (589, 1158), (577, 1127), (612, 1158), (592, 1134), (589, 1145), (603, 1145), (888, 1127), (993, 1136), (954, 1128), (557, 1144), (568, 1125), (602, 1152), (588, 1160), (582, 1124), (606, 1145), (621, 1154), (593, 1131), (604, 1157), (626, 1141)]
         : compromised: 0.5163, honest: 0.6226
Round 008: test acc mean=0.5826 ± 0.0977 | min=0.4911 max=0.8741
         : test loss mean=nan ± nan
         : individual accs = ['0.564912', '0.508636', '0.501331', '0.732297', '0.731922', '0.660262', '0.600873', '0.503993', '0.874120', '0.491135', '0.644231', '0.549333', '0.532118', '0.530172', '0.501779', '0.547598', '0.537262', '0.526967', '0.514261', '0.599474']
         : correct/total = [(644, 1140), (589, 1158), (565, 1127), (848, 1158), (830, 1134), (756, 1145), (688, 1145), (568, 1127), (993, 1136), (554, 1128), (737, 1144), (618, 1125), (613, 1152), (615, 1160), (564, 1124), (627, 1145), (620, 1154), (596, 1131), (595, 1157), (684, 1141)]
         : compromised: 0.5372, honest: 0.6280
Round 009: test acc mean=0.5743 ± 0.1163 | min=0.5060 max=0.8644
         : test loss mean=nan ± nan
         : individual accs = ['0.577193', '0.508636', '0.509317', '0.528497', '0.522046', '0.514410', '0.556332', '0.811003', '0.864437', '0.863475', '0.510490', '0.519111', '0.521701', '0.506034', '0.517794', '0.519651', '0.522530', '0.516357', '0.522040', '0.574934']
         : correct/total = [(658, 1140), (589, 1158), (574, 1127), (612, 1158), (592, 1134), (589, 1145), (637, 1145), (914, 1127), (982, 1136), (974, 1128), (584, 1144), (584, 1125), (601, 1152), (587, 1160), (582, 1124), (595, 1145), (603, 1154), (584, 1131), (604, 1157), (656, 1141)]
         : compromised: 0.5155, honest: 0.6331
Round 010: test acc mean=0.5943 ± 0.1059 | min=0.4818 max=0.8864
         : test loss mean=nan ± nan
         : individual accs = ['0.603509', '0.508636', '0.481810', '0.765112', '0.767196', '0.686463', '0.620961', '0.503993', '0.886444', '0.491135', '0.653846', '0.512889', '0.551215', '0.539655', '0.509786', '0.563319', '0.556326', '0.552608', '0.522040', '0.609991']
         : correct/total = [(688, 1140), (589, 1158), (543, 1127), (886, 1158), (870, 1134), (786, 1145), (711, 1145), (568, 1127), (1007, 1136), (554, 1128), (748, 1144), (577, 1125), (635, 1152), (626, 1160), (573, 1124), (645, 1145), (642, 1154), (625, 1131), (604, 1157), (696, 1141)]
         : compromised: 0.5428, honest: 0.6459

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: krum
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.5428, Honest: 0.6459
Overall test accuracy: mean=0.5943 ± 0.1059
