Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4561 ± 0.0584 | min=0.3529 max=0.5388
         : test loss mean=3.7652 ± 0.0385
         : individual accs = ['0.521560', '0.478706', '0.499387', '0.431341', '0.386458', '0.534640', '0.465776', '0.452748', '0.387258', '0.417816', '0.423847', '0.530646', '0.453701', '0.352871', '0.520731', '0.504095', '0.463280', '0.538848', '0.356268', '0.402132']
         : correct/total = [(2153, 4128), (2012, 4203), (2038, 4081), (1869, 4333), (1581, 4091), (2292, 4287), (1953, 4193), (1969, 4349), (1623, 4191), (1787, 4277), (1756, 4143), (2225, 4193), (1857, 4093), (1481, 4197), (2110, 4052), (2031, 4029), (1924, 4153), (2254, 4183), (1455, 4084), (1660, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6878 ± 0.0208 | min=0.6383 max=0.7212
         : test loss mean=3.1473 ± 0.1318
         : individual accs = ['0.698886', '0.699262', '0.685861', '0.702746', '0.685651', '0.711453', '0.654663', '0.683146', '0.656168', '0.695347', '0.701183', '0.721202', '0.698510', '0.663569', '0.702122', '0.707868', '0.668914', '0.691370', '0.690500', '0.638324']
         : correct/total = [(2885, 4128), (2939, 4203), (2799, 4081), (3045, 4333), (2805, 4091), (3050, 4287), (2745, 4193), (2971, 4349), (2750, 4191), (2974, 4277), (2905, 4143), (3024, 4193), (2859, 4093), (2785, 4197), (2845, 4052), (2852, 4029), (2778, 4153), (2892, 4183), (2820, 4084), (2635, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.7266 ± 0.0163 | min=0.6942 max=0.7558
         : test loss mean=2.5804 ± 0.2745
         : individual accs = ['0.746366', '0.729003', '0.714286', '0.735057', '0.714006', '0.694192', '0.738135', '0.707749', '0.707468', '0.722001', '0.736423', '0.752206', '0.741754', '0.714796', '0.739388', '0.733184', '0.711534', '0.726512', '0.711312', '0.755814']
         : correct/total = [(3081, 4128), (3064, 4203), (2915, 4081), (3185, 4333), (2921, 4091), (2976, 4287), (3095, 4193), (3078, 4349), (2965, 4191), (3088, 4277), (3051, 4143), (3154, 4193), (3036, 4093), (3000, 4197), (2996, 4052), (2954, 4029), (2955, 4153), (3039, 4183), (2905, 4084), (3120, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.7541 ± 0.0108 | min=0.7356 max=0.7754
         : test loss mean=1.9923 ± 0.2848
         : individual accs = ['0.753876', '0.762075', '0.747856', '0.746134', '0.757761', '0.747842', '0.760315', '0.739940', '0.762825', '0.746084', '0.738112', '0.753637', '0.746641', '0.752204', '0.768263', '0.771407', '0.735613', '0.751375', '0.764202', '0.775436']
         : correct/total = [(3112, 4128), (3203, 4203), (3052, 4081), (3233, 4333), (3100, 4091), (3206, 4287), (3188, 4193), (3218, 4349), (3197, 4191), (3191, 4277), (3058, 4143), (3160, 4193), (3056, 4093), (3157, 4197), (3113, 4052), (3108, 4029), (3055, 4153), (3143, 4183), (3121, 4084), (3201, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.7661 ± 0.0162 | min=0.7380 max=0.8036
         : test loss mean=1.5131 ± 0.2370
         : individual accs = ['0.772529', '0.738044', '0.743200', '0.766444', '0.760205', '0.765570', '0.765085', '0.753277', '0.803627', '0.774375', '0.769732', '0.756260', '0.779379', '0.745294', '0.755183', '0.767436', '0.761618', '0.763328', '0.784035', '0.797723']
         : correct/total = [(3189, 4128), (3102, 4203), (3033, 4081), (3321, 4333), (3110, 4091), (3282, 4287), (3208, 4193), (3276, 4349), (3368, 4191), (3312, 4277), (3189, 4143), (3171, 4193), (3190, 4093), (3128, 4197), (3060, 4052), (3092, 4029), (3163, 4153), (3193, 4183), (3202, 4084), (3293, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.7879 ± 0.0119 | min=0.7635 max=0.8129
         : test loss mean=1.1088 ± 0.1590
         : individual accs = ['0.778101', '0.763502', '0.767214', '0.799677', '0.772427', '0.780033', '0.791796', '0.786158', '0.812932', '0.794716', '0.785421', '0.781064', '0.790374', '0.801048', '0.791214', '0.802929', '0.782567', '0.786995', '0.794564', '0.795785']
         : correct/total = [(3212, 4128), (3209, 4203), (3131, 4081), (3465, 4333), (3160, 4091), (3344, 4287), (3320, 4193), (3419, 4349), (3407, 4191), (3399, 4277), (3254, 4143), (3275, 4193), (3235, 4093), (3362, 4197), (3206, 4052), (3235, 4029), (3250, 4153), (3292, 4183), (3245, 4084), (3285, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.8032 ± 0.0110 | min=0.7714 max=0.8177
         : test loss mean=0.8611 ± 0.1137
         : individual accs = ['0.803052', '0.795146', '0.771380', '0.817217', '0.785383', '0.809191', '0.809444', '0.810531', '0.817705', '0.817629', '0.793869', '0.796804', '0.797703', '0.805099', '0.804541', '0.810871', '0.807368', '0.803012', '0.807542', '0.800630']
         : correct/total = [(3315, 4128), (3342, 4203), (3148, 4081), (3541, 4333), (3213, 4091), (3469, 4287), (3394, 4193), (3525, 4349), (3427, 4191), (3497, 4277), (3289, 4143), (3341, 4193), (3265, 4093), (3379, 4197), (3260, 4052), (3267, 4029), (3353, 4153), (3359, 4183), (3298, 4084), (3305, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8145 ± 0.0101 | min=0.7944 max=0.8280
         : test loss mean=0.6966 ± 0.0760
         : individual accs = ['0.805717', '0.812039', '0.794413', '0.825756', '0.794916', '0.822720', '0.824231', '0.819039', '0.819375', '0.823942', '0.801834', '0.814930', '0.816516', '0.819871', '0.827986', '0.823778', '0.815796', '0.814248', '0.815132', '0.797481']
         : correct/total = [(3326, 4128), (3413, 4203), (3242, 4081), (3578, 4333), (3252, 4091), (3527, 4287), (3456, 4193), (3562, 4349), (3434, 4191), (3524, 4277), (3322, 4143), (3417, 4193), (3342, 4093), (3441, 4197), (3355, 4052), (3319, 4029), (3388, 4153), (3406, 4183), (3329, 4084), (3292, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8255 ± 0.0086 | min=0.8047 max=0.8399
         : test loss mean=0.6033 ± 0.0481
         : individual accs = ['0.814922', '0.825601', '0.804705', '0.837295', '0.817648', '0.830651', '0.833771', '0.829156', '0.839895', '0.835632', '0.813662', '0.819223', '0.828976', '0.832738', '0.827986', '0.829238', '0.824464', '0.822376', '0.823213', '0.819041']
         : correct/total = [(3364, 4128), (3470, 4203), (3284, 4081), (3628, 4333), (3345, 4091), (3561, 4287), (3496, 4193), (3606, 4349), (3520, 4191), (3574, 4277), (3371, 4143), (3435, 4193), (3393, 4093), (3495, 4197), (3355, 4052), (3341, 4029), (3424, 4153), (3440, 4183), (3362, 4084), (3381, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8340 ± 0.0063 | min=0.8243 max=0.8428
         : test loss mean=0.5444 ± 0.0303
         : individual accs = ['0.827519', '0.837021', '0.828228', '0.837295', '0.824982', '0.832050', '0.836632', '0.833065', '0.837509', '0.842413', '0.824282', '0.826139', '0.838260', '0.841553', '0.842794', '0.842393', '0.837948', '0.836959', '0.826641', '0.825581']
         : correct/total = [(3416, 4128), (3518, 4203), (3380, 4081), (3628, 4333), (3375, 4091), (3567, 4287), (3508, 4193), (3623, 4349), (3510, 4191), (3603, 4277), (3415, 4143), (3464, 4193), (3431, 4093), (3532, 4197), (3415, 4052), (3394, 4029), (3480, 4153), (3501, 4183), (3376, 4084), (3408, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Overall test accuracy: mean=0.8340 ± 0.0063

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 17.121s (98.3%)
  - Filtering time: 0.022s (0.1%)
  - Aggregation time: 0.271s (1.6%)
  - Total time: 17.413s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
