Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4706 ± 0.0390 | min=0.4034 max=0.5402
         : test loss mean=3.7681 ± 0.0268
         : individual accs = ['0.510901', '0.476564', '0.499632', '0.505654', '0.448057', '0.540238', '0.416885', '0.438951', '0.494631', '0.443068', '0.421675', '0.523015', '0.403372', '0.447462', '0.485439', '0.494664', '0.466891', '0.521635', '0.443193', '0.429748']
         : correct/total = [(2109, 4128), (2003, 4203), (2039, 4081), (2191, 4333), (1833, 4091), (2316, 4287), (1748, 4193), (1909, 4349), (2073, 4191), (1895, 4277), (1747, 4143), (2193, 4193), (1651, 4093), (1878, 4197), (1967, 4052), (1993, 4029), (1939, 4153), (2182, 4183), (1810, 4084), (1774, 4128)]
         : compromised: 0.4773, honest: 0.4549
Round 002: test acc mean=0.6626 ± 0.0292 | min=0.5869 max=0.7038
         : test loss mean=3.3231 ± 0.1471
         : individual accs = ['0.687984', '0.689032', '0.637344', '0.684514', '0.678563', '0.688360', '0.586931', '0.670959', '0.621331', '0.695113', '0.643012', '0.703792', '0.665282', '0.655230', '0.690770', '0.642095', '0.657115', '0.644274', '0.681195', '0.629360']
         : correct/total = [(2840, 4128), (2896, 4203), (2601, 4081), (2966, 4333), (2776, 4091), (2951, 4287), (2461, 4193), (2918, 4349), (2604, 4191), (2973, 4277), (2664, 4143), (2951, 4193), (2723, 4093), (2750, 4197), (2799, 4052), (2587, 4029), (2729, 4153), (2695, 4183), (2782, 4084), (2598, 4128)]
         : compromised: 0.6585, honest: 0.6721
Round 003: test acc mean=0.6287 ± 0.0452 | min=0.5271 max=0.6947
         : test loss mean=2.5668 ± 0.3065
         : individual accs = ['0.667151', '0.594337', '0.527077', '0.682206', '0.694696', '0.574294', '0.646792', '0.669579', '0.661895', '0.645780', '0.605358', '0.611734', '0.652333', '0.592804', '0.653504', '0.544304', '0.686010', '0.618934', '0.636141', '0.609012']
         : correct/total = [(2754, 4128), (2498, 4203), (2151, 4081), (2956, 4333), (2842, 4091), (2462, 4287), (2712, 4193), (2912, 4349), (2774, 4191), (2762, 4277), (2508, 4143), (2565, 4193), (2670, 4093), (2488, 4197), (2648, 4052), (2193, 4029), (2849, 4153), (2589, 4183), (2598, 4084), (2514, 4128)]
         : compromised: 0.6147, honest: 0.6614
Round 004: test acc mean=0.7303 ± 0.0259 | min=0.6838 max=0.7724
         : test loss mean=1.3251 ± 0.2077
         : individual accs = ['0.754360', '0.703545', '0.696153', '0.732287', '0.772427', '0.698157', '0.737181', '0.766843', '0.737771', '0.761515', '0.731837', '0.718817', '0.701686', '0.734811', '0.746051', '0.683793', '0.764026', '0.743007', '0.723066', '0.698886']
         : correct/total = [(3114, 4128), (2957, 4203), (2841, 4081), (3173, 4333), (3160, 4091), (2993, 4287), (3091, 4193), (3335, 4349), (3092, 4191), (3257, 4277), (3032, 4143), (3014, 4193), (2872, 4093), (3084, 4197), (3023, 4052), (2755, 4029), (3173, 4153), (3108, 4183), (2953, 4084), (2885, 4128)]
         : compromised: 0.7182, honest: 0.7585
Round 005: test acc mean=0.7988 ± 0.0068 | min=0.7880 max=0.8133
         : test loss mean=0.6865 ± 0.0407
         : individual accs = ['0.799661', '0.799667', '0.790247', '0.796215', '0.793938', '0.800327', '0.798474', '0.813290', '0.808638', '0.808511', '0.792662', '0.787980', '0.800147', '0.801287', '0.798124', '0.791015', '0.807609', '0.788668', '0.803134', '0.797238']
         : correct/total = [(3301, 4128), (3361, 4203), (3225, 4081), (3450, 4333), (3248, 4091), (3431, 4287), (3348, 4193), (3537, 4349), (3389, 4191), (3458, 4277), (3284, 4143), (3304, 4193), (3275, 4093), (3363, 4197), (3234, 4052), (3187, 4029), (3354, 4153), (3299, 4183), (3280, 4084), (3291, 4128)]
         : compromised: 0.7972, honest: 0.8026
Round 006: test acc mean=0.8230 ± 0.0056 | min=0.8127 max=0.8337
         : test loss mean=0.5562 ± 0.0183
         : individual accs = ['0.815407', '0.826315', '0.816957', '0.823679', '0.815693', '0.823186', '0.818746', '0.826857', '0.829874', '0.825111', '0.812696', '0.821130', '0.821891', '0.833691', '0.825518', '0.824770', '0.830484', '0.830026', '0.821988', '0.816134']
         : correct/total = [(3366, 4128), (3473, 4203), (3334, 4081), (3569, 4333), (3337, 4091), (3529, 4287), (3433, 4193), (3596, 4349), (3478, 4191), (3529, 4277), (3367, 4143), (3443, 4193), (3364, 4093), (3499, 4197), (3345, 4052), (3323, 4029), (3449, 4153), (3472, 4183), (3357, 4084), (3369, 4128)]
         : compromised: 0.8239, honest: 0.8210
Round 007: test acc mean=0.8360 ± 0.0048 | min=0.8263 max=0.8434
         : test loss mean=0.5097 ± 0.0190
         : individual accs = ['0.826308', '0.843445', '0.836805', '0.837526', '0.828893', '0.831351', '0.839733', '0.839043', '0.840134', '0.837269', '0.828144', '0.838302', '0.836306', '0.840600', '0.838105', '0.836932', '0.836504', '0.839589', '0.838149', '0.827277']
         : correct/total = [(3411, 4128), (3545, 4203), (3415, 4081), (3629, 4333), (3391, 4091), (3564, 4287), (3521, 4193), (3649, 4349), (3521, 4191), (3581, 4277), (3431, 4143), (3515, 4193), (3423, 4093), (3528, 4197), (3396, 4052), (3372, 4029), (3474, 4153), (3512, 4183), (3423, 4084), (3415, 4128)]
         : compromised: 0.8374, honest: 0.8327
Round 008: test acc mean=0.8392 ± 0.0060 | min=0.8222 max=0.8493
         : test loss mean=0.4872 ± 0.0191
         : individual accs = ['0.830669', '0.838687', '0.837785', '0.849296', '0.836959', '0.845813', '0.843787', '0.841113', '0.839895', '0.842647', '0.830558', '0.844741', '0.835573', '0.842507', '0.844521', '0.842393', '0.837467', '0.837198', '0.840353', '0.822190']
         : correct/total = [(3429, 4128), (3525, 4203), (3419, 4081), (3680, 4333), (3424, 4091), (3626, 4287), (3538, 4193), (3658, 4349), (3520, 4191), (3604, 4277), (3441, 4143), (3542, 4193), (3420, 4093), (3536, 4197), (3422, 4052), (3394, 4029), (3478, 4153), (3502, 4183), (3432, 4084), (3394, 4128)]
         : compromised: 0.8403, honest: 0.8366
Round 009: test acc mean=0.8464 ± 0.0051 | min=0.8360 max=0.8545
         : test loss mean=0.4651 ± 0.0181
         : individual accs = ['0.839632', '0.852010', '0.844891', '0.850912', '0.835981', '0.849312', '0.851896', '0.853989', '0.854450', '0.852700', '0.841902', '0.843549', '0.842903', '0.847272', '0.849210', '0.846116', '0.841079', '0.844370', '0.843781', '0.842781']
         : correct/total = [(3466, 4128), (3581, 4203), (3448, 4081), (3687, 4333), (3420, 4091), (3641, 4287), (3572, 4193), (3714, 4349), (3581, 4191), (3647, 4277), (3488, 4143), (3537, 4193), (3450, 4093), (3556, 4197), (3441, 4052), (3409, 4029), (3493, 4153), (3532, 4183), (3446, 4084), (3479, 4128)]
         : compromised: 0.8474, honest: 0.8442
Round 010: test acc mean=0.8505 ± 0.0052 | min=0.8412 max=0.8591
         : test loss mean=0.4521 ± 0.0182
         : individual accs = ['0.842539', '0.859148', '0.848812', '0.854143', '0.842092', '0.846513', '0.855950', '0.854679', '0.857552', '0.852233', '0.841178', '0.845695', '0.845346', '0.852752', '0.853406', '0.854554', '0.852155', '0.855128', '0.850637', '0.846172']
         : correct/total = [(3478, 4128), (3611, 4203), (3464, 4081), (3701, 4333), (3445, 4091), (3629, 4287), (3589, 4193), (3717, 4349), (3594, 4191), (3645, 4277), (3485, 4143), (3546, 4193), (3460, 4093), (3579, 4197), (3458, 4052), (3443, 4029), (3539, 4153), (3577, 4183), (3474, 4084), (3493, 4128)]
         : compromised: 0.8518, honest: 0.8475

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: balance
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.8518, Honest: 0.8475
Overall test accuracy: mean=0.8505 ± 0.0052

=== BALANCE SUMMARY ===
Node 0: acceptance=0.263
Node 1: acceptance=0.316
Node 2: acceptance=0.316
Node 3: acceptance=0.316
Node 4: acceptance=0.263
Node 5: acceptance=0.316
Node 6: acceptance=0.316
Node 7: acceptance=0.263
Node 8: acceptance=0.316
Node 9: acceptance=0.263
Node 10: acceptance=0.263
Node 11: acceptance=0.316
Node 12: acceptance=0.316
Node 13: acceptance=0.316
Node 14: acceptance=0.316
Node 15: acceptance=0.316
Node 16: acceptance=0.263
Node 17: acceptance=0.316
Node 18: acceptance=0.316
Node 19: acceptance=0.316

Performance Summary:
  - Distance computation time: 1.532s (46.3%)
  - Filtering time: 1.631s (49.3%)
  - Aggregation time: 0.146s (4.4%)
  - Total time: 3.310s
  - Mean acceptance rate: 0.300

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
