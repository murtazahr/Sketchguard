Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4061 ± 0.0549 | min=0.2925 max=0.4734
         : test loss mean=3.7809 ± 0.0519
         : individual accs = ['0.473110', '0.449441', '0.473413', '0.375490', '0.439501', '0.456263', '0.306463', '0.451828', '0.376283', '0.399579', '0.292542', '0.471977', '0.303445', '0.446509', '0.383514', '0.418466', '0.419937', '0.413818', '0.367532', '0.402374']
         : correct/total = [(1953, 4128), (1889, 4203), (1932, 4081), (1627, 4333), (1798, 4091), (1956, 4287), (1285, 4193), (1965, 4349), (1577, 4191), (1709, 4277), (1212, 4143), (1979, 4193), (1242, 4093), (1874, 4197), (1554, 4052), (1686, 4029), (1744, 4153), (1731, 4183), (1501, 4084), (1661, 4128)]
         : compromised: 0.3961, honest: 0.4461
Round 002: test acc mean=0.6611 ± 0.0280 | min=0.6138 max=0.7033
         : test loss mean=2.8687 ± 0.4696
         : individual accs = ['0.697917', '0.670711', '0.638324', '0.699515', '0.699340', '0.703289', '0.619604', '0.666360', '0.658793', '0.669394', '0.634082', '0.658240', '0.682385', '0.645461', '0.673248', '0.613800', '0.686010', '0.618217', '0.654995', '0.632267']
         : correct/total = [(2881, 4128), (2819, 4203), (2605, 4081), (3031, 4333), (2861, 4091), (3015, 4287), (2598, 4193), (2898, 4349), (2761, 4191), (2863, 4277), (2627, 4143), (2760, 4193), (2793, 4093), (2709, 4197), (2728, 4052), (2473, 4029), (2849, 4153), (2586, 4183), (2675, 4084), (2610, 4128)]
         : compromised: 0.6545, honest: 0.6874
Round 003: test acc mean=0.7363 ± 0.0254 | min=0.6888 max=0.7743
         : test loss mean=1.4404 ± 0.3763
         : individual accs = ['0.762597', '0.710207', '0.711100', '0.774290', '0.764361', '0.760205', '0.748152', '0.761784', '0.752804', '0.703764', '0.735699', '0.715240', '0.750305', '0.744103', '0.738648', '0.688757', '0.767879', '0.701889', '0.723310', '0.711483']
         : correct/total = [(3148, 4128), (2985, 4203), (2902, 4081), (3355, 4333), (3127, 4091), (3259, 4287), (3137, 4193), (3313, 4349), (3155, 4191), (3010, 4277), (3048, 4143), (2999, 4193), (3071, 4093), (3123, 4197), (2993, 4052), (2775, 4029), (3189, 4153), (2936, 4183), (2954, 4084), (2937, 4128)]
         : compromised: 0.7294, honest: 0.7642
Round 004: test acc mean=0.7967 ± 0.0071 | min=0.7815 max=0.8131
         : test loss mean=0.7123 ± 0.0543
         : individual accs = ['0.791424', '0.797050', '0.795883', '0.799446', '0.794182', '0.798694', '0.803959', '0.813060', '0.807922', '0.797755', '0.784697', '0.790365', '0.795749', '0.800572', '0.800346', '0.794242', '0.803034', '0.791537', '0.793585', '0.781492']
         : correct/total = [(3267, 4128), (3350, 4203), (3248, 4081), (3464, 4333), (3249, 4091), (3424, 4287), (3371, 4193), (3536, 4349), (3386, 4191), (3412, 4277), (3251, 4143), (3314, 4193), (3257, 4093), (3360, 4197), (3243, 4052), (3200, 4029), (3335, 4153), (3311, 4183), (3241, 4084), (3226, 4128)]
         : compromised: 0.7958, honest: 0.8004
Round 005: test acc mean=0.8164 ± 0.0050 | min=0.8079 max=0.8244
         : test loss mean=0.5792 ± 0.0208
         : individual accs = ['0.814438', '0.818939', '0.814506', '0.814678', '0.810560', '0.817122', '0.812068', '0.823178', '0.824386', '0.823007', '0.808593', '0.813499', '0.820425', '0.821777', '0.822310', '0.813601', '0.817963', '0.810184', '0.819540', '0.807897']
         : correct/total = [(3362, 4128), (3442, 4203), (3324, 4081), (3530, 4333), (3316, 4091), (3503, 4287), (3405, 4193), (3580, 4349), (3455, 4191), (3520, 4277), (3350, 4143), (3411, 4193), (3358, 4093), (3449, 4197), (3332, 4052), (3278, 4029), (3397, 4153), (3389, 4183), (3347, 4084), (3335, 4128)]
         : compromised: 0.8164, honest: 0.8165
Round 006: test acc mean=0.8299 ± 0.0058 | min=0.8156 max=0.8385
         : test loss mean=0.5276 ± 0.0193
         : individual accs = ['0.822432', '0.833452', '0.825043', '0.832679', '0.825471', '0.829484', '0.822561', '0.833295', '0.838225', '0.833996', '0.815593', '0.827570', '0.830442', '0.838456', '0.832428', '0.833457', '0.835059', '0.834329', '0.832027', '0.822674']
         : correct/total = [(3395, 4128), (3503, 4203), (3367, 4081), (3608, 4333), (3377, 4091), (3556, 4287), (3449, 4193), (3624, 4349), (3513, 4191), (3567, 4277), (3379, 4143), (3470, 4193), (3399, 4093), (3519, 4197), (3373, 4052), (3358, 4029), (3468, 4153), (3490, 4183), (3398, 4084), (3396, 4128)]
         : compromised: 0.8302, honest: 0.8291
Round 007: test acc mean=0.8391 ± 0.0058 | min=0.8245 max=0.8484
         : test loss mean=0.4945 ± 0.0211
         : individual accs = ['0.834787', '0.848442', '0.840725', '0.832910', '0.833048', '0.835083', '0.839733', '0.847321', '0.844429', '0.848258', '0.824523', '0.839017', '0.840459', '0.843936', '0.839092', '0.837677', '0.838189', '0.839828', '0.842801', '0.832122']
         : correct/total = [(3446, 4128), (3566, 4203), (3431, 4081), (3609, 4333), (3408, 4091), (3580, 4287), (3521, 4193), (3685, 4349), (3539, 4191), (3628, 4277), (3416, 4143), (3518, 4193), (3440, 4093), (3542, 4197), (3400, 4052), (3375, 4029), (3481, 4153), (3513, 4183), (3442, 4084), (3435, 4128)]
         : compromised: 0.8393, honest: 0.8383
Round 008: test acc mean=0.8417 ± 0.0056 | min=0.8287 max=0.8508
         : test loss mean=0.4772 ± 0.0212
         : individual accs = ['0.834060', '0.845349', '0.838765', '0.841219', '0.839892', '0.845113', '0.847842', '0.850770', '0.844190', '0.849193', '0.830316', '0.843549', '0.841192', '0.843698', '0.846742', '0.842393', '0.838189', '0.839111', '0.844270', '0.828731']
         : correct/total = [(3443, 4128), (3553, 4203), (3423, 4081), (3645, 4333), (3436, 4091), (3623, 4287), (3555, 4193), (3700, 4349), (3538, 4191), (3632, 4277), (3440, 4143), (3537, 4193), (3443, 4093), (3541, 4197), (3431, 4052), (3394, 4029), (3481, 4153), (3510, 4183), (3448, 4084), (3421, 4128)]
         : compromised: 0.8420, honest: 0.8407
Round 009: test acc mean=0.8479 ± 0.0057 | min=0.8368 max=0.8566
         : test loss mean=0.4591 ± 0.0189
         : individual accs = ['0.842054', '0.853200', '0.847096', '0.847681', '0.840137', '0.847446', '0.853804', '0.856289', '0.856597', '0.855974', '0.836833', '0.844264', '0.849011', '0.847510', '0.854886', '0.846860', '0.844931', '0.849869', '0.845495', '0.838663']
         : correct/total = [(3476, 4128), (3586, 4203), (3457, 4081), (3673, 4333), (3437, 4091), (3633, 4287), (3580, 4193), (3724, 4349), (3590, 4191), (3661, 4277), (3467, 4143), (3540, 4193), (3475, 4093), (3557, 4197), (3464, 4052), (3412, 4029), (3509, 4153), (3555, 4183), (3453, 4084), (3462, 4128)]
         : compromised: 0.8484, honest: 0.8459
Round 010: test acc mean=0.8510 ± 0.0061 | min=0.8400 max=0.8622
         : test loss mean=0.4507 ± 0.0193
         : individual accs = ['0.843992', '0.862241', '0.850037', '0.853450', '0.841115', '0.844413', '0.856904', '0.857898', '0.857791', '0.855506', '0.839971', '0.844026', '0.849011', '0.857041', '0.851431', '0.856044', '0.848543', '0.850825', '0.853330', '0.845688']
         : correct/total = [(3484, 4128), (3624, 4203), (3469, 4081), (3698, 4333), (3441, 4091), (3620, 4287), (3593, 4193), (3731, 4349), (3595, 4191), (3659, 4277), (3480, 4143), (3539, 4193), (3475, 4093), (3597, 4197), (3450, 4052), (3449, 4029), (3524, 4153), (3559, 4183), (3485, 4084), (3491, 4128)]
         : compromised: 0.8517, honest: 0.8479

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.8517, Honest: 0.8479
Overall test accuracy: mean=0.8510 ± 0.0061

=== BALANCE SUMMARY ===
Node 0: acceptance=0.188
Node 1: acceptance=0.364
Node 2: acceptance=0.250
Node 3: acceptance=0.125
Node 4: acceptance=0.273
Node 5: acceptance=0.133
Node 6: acceptance=0.143
Node 7: acceptance=0.143
Node 8: acceptance=0.200
Node 9: acceptance=0.308
Node 10: acceptance=0.222
Node 11: acceptance=0.214
Node 12: acceptance=0.250
Node 13: acceptance=0.231
Node 14: acceptance=0.200
Node 15: acceptance=0.182
Node 16: acceptance=0.154
Node 17: acceptance=0.333
Node 18: acceptance=0.250
Node 19: acceptance=0.188

Performance Summary:
  - Distance computation time: 1.133s (45.4%)
  - Filtering time: 1.229s (49.3%)
  - Aggregation time: 0.133s (5.3%)
  - Total time: 2.495s
  - Mean acceptance rate: 0.217

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
