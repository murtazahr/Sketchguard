Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4999 ± 0.0338 | min=0.4424 max=0.5562
         : test loss mean=3.7409 ± 0.0252
         : individual accs = ['0.556202', '0.489888', '0.525852', '0.486268', '0.442435', '0.552601', '0.494634', '0.490917', '0.532570', '0.463643', '0.463915', '0.532077', '0.469582', '0.466524', '0.518756', '0.529908', '0.476764', '0.545302', '0.503918', '0.455911']
         : correct/total = [(2296, 4128), (2059, 4203), (2146, 4081), (2107, 4333), (1810, 4091), (2369, 4287), (2074, 4193), (2135, 4349), (2232, 4191), (1983, 4277), (1922, 4143), (2231, 4193), (1922, 4093), (1958, 4197), (2102, 4052), (2135, 4029), (1980, 4153), (2281, 4183), (2058, 4084), (1882, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6852 ± 0.0184 | min=0.6330 max=0.7189
         : test loss mean=3.4020 ± 0.0308
         : individual accs = ['0.679748', '0.690221', '0.672139', '0.695823', '0.677585', '0.718918', '0.632960', '0.690044', '0.688857', '0.705167', '0.690080', '0.703077', '0.697532', '0.671432', '0.697433', '0.695458', '0.656152', '0.675114', '0.693683', '0.673450']
         : correct/total = [(2806, 4128), (2901, 4203), (2743, 4081), (3015, 4333), (2772, 4091), (3082, 4287), (2654, 4193), (3001, 4349), (2887, 4191), (3016, 4277), (2859, 4143), (2948, 4193), (2855, 4093), (2818, 4197), (2826, 4052), (2802, 4029), (2725, 4153), (2824, 4183), (2833, 4084), (2780, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.7113 ± 0.0165 | min=0.6741 max=0.7379
         : test loss mean=3.1275 ± 0.0387
         : individual accs = ['0.737888', '0.706638', '0.674099', '0.726748', '0.701296', '0.690460', '0.721202', '0.724534', '0.726318', '0.695581', '0.704321', '0.736227', '0.729783', '0.712890', '0.723100', '0.719037', '0.696605', '0.701650', '0.697845', '0.699370']
         : correct/total = [(3046, 4128), (2970, 4203), (2751, 4081), (3149, 4333), (2869, 4091), (2960, 4287), (3024, 4193), (3151, 4349), (3044, 4191), (2975, 4277), (2918, 4143), (3087, 4193), (2987, 4093), (2992, 4197), (2930, 4052), (2897, 4029), (2893, 4153), (2935, 4183), (2850, 4084), (2887, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.7104 ± 0.0209 | min=0.6643 max=0.7379
         : test loss mean=2.6919 ± 0.0583
         : individual accs = ['0.710029', '0.732334', '0.669689', '0.713593', '0.735761', '0.710054', '0.737896', '0.724074', '0.717490', '0.695113', '0.664253', '0.720964', '0.677254', '0.711699', '0.734946', '0.724497', '0.708644', '0.719579', '0.712292', '0.687984']
         : correct/total = [(2931, 4128), (3078, 4203), (2733, 4081), (3092, 4333), (3010, 4091), (3044, 4287), (3094, 4193), (3149, 4349), (3007, 4191), (2973, 4277), (2752, 4143), (3023, 4193), (2772, 4093), (2987, 4197), (2978, 4052), (2919, 4029), (2943, 4153), (3010, 4183), (2909, 4084), (2840, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.6800 ± 0.0257 | min=0.5888 max=0.7150
         : test loss mean=2.1268 ± 0.0719
         : individual accs = ['0.704700', '0.676897', '0.588826', '0.657512', '0.679540', '0.698624', '0.697114', '0.696022', '0.684324', '0.688801', '0.664012', '0.667303', '0.692157', '0.669049', '0.685094', '0.677587', '0.704069', '0.665551', '0.714985', '0.688227']
         : correct/total = [(2909, 4128), (2845, 4203), (2403, 4081), (2849, 4333), (2780, 4091), (2995, 4287), (2923, 4193), (3027, 4349), (2868, 4191), (2946, 4277), (2751, 4143), (2798, 4193), (2833, 4093), (2808, 4197), (2776, 4052), (2730, 4029), (2924, 4153), (2784, 4183), (2920, 4084), (2841, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.7146 ± 0.0162 | min=0.6744 max=0.7420
         : test loss mean=1.4511 ± 0.0610
         : individual accs = ['0.674419', '0.718059', '0.715021', '0.711747', '0.722806', '0.706088', '0.725972', '0.721085', '0.689573', '0.695581', '0.726527', '0.700453', '0.725629', '0.741959', '0.722113', '0.739141', '0.697568', '0.720536', '0.726494', '0.711725']
         : correct/total = [(2784, 4128), (3018, 4203), (2918, 4081), (3084, 4333), (2957, 4091), (3027, 4287), (3044, 4193), (3136, 4349), (2890, 4191), (2975, 4277), (3010, 4143), (2937, 4193), (2970, 4093), (3114, 4197), (2926, 4052), (2978, 4029), (2897, 4153), (3014, 4183), (2967, 4084), (2938, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.7805 ± 0.0093 | min=0.7628 max=0.7961
         : test loss mean=0.8960 ± 0.0424
         : individual accs = ['0.779554', '0.784202', '0.762803', '0.773367', '0.770472', '0.795195', '0.796089', '0.789607', '0.781198', '0.776479', '0.781077', '0.763654', '0.770828', '0.780319', '0.784304', '0.787540', '0.776788', '0.781736', '0.795299', '0.779554']
         : correct/total = [(3218, 4128), (3296, 4203), (3113, 4081), (3351, 4333), (3152, 4091), (3409, 4287), (3338, 4193), (3434, 4349), (3274, 4191), (3321, 4277), (3236, 4143), (3202, 4193), (3155, 4093), (3275, 4197), (3178, 4052), (3173, 4029), (3226, 4153), (3270, 4183), (3248, 4084), (3218, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8129 ± 0.0079 | min=0.7951 max=0.8237
         : test loss mean=0.6272 ± 0.0229
         : individual accs = ['0.806928', '0.813704', '0.803725', '0.818140', '0.795405', '0.823653', '0.820176', '0.821338', '0.820329', '0.812018', '0.803765', '0.818746', '0.812607', '0.812962', '0.819842', '0.814594', '0.812906', '0.816161', '0.815377', '0.795058']
         : correct/total = [(3331, 4128), (3420, 4203), (3280, 4081), (3545, 4333), (3254, 4091), (3531, 4287), (3439, 4193), (3572, 4349), (3438, 4191), (3473, 4277), (3330, 4143), (3433, 4193), (3326, 4093), (3412, 4197), (3322, 4052), (3282, 4029), (3376, 4153), (3414, 4183), (3330, 4084), (3282, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8300 ± 0.0056 | min=0.8226 max=0.8459
         : test loss mean=0.5381 ± 0.0186
         : individual accs = ['0.823643', '0.833452', '0.825288', '0.834295', '0.824737', '0.831817', '0.831863', '0.833295', '0.845860', '0.832125', '0.822592', '0.827093', '0.825800', '0.830117', '0.835884', '0.834450', '0.828798', '0.823333', '0.831538', '0.823159']
         : correct/total = [(3400, 4128), (3503, 4203), (3368, 4081), (3615, 4333), (3374, 4091), (3566, 4287), (3488, 4193), (3624, 4349), (3545, 4191), (3559, 4277), (3408, 4143), (3468, 4193), (3380, 4093), (3484, 4197), (3387, 4052), (3362, 4029), (3442, 4153), (3444, 4183), (3396, 4084), (3398, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8387 ± 0.0057 | min=0.8272 max=0.8480
         : test loss mean=0.4994 ± 0.0179
         : individual accs = ['0.831395', '0.845111', '0.833864', '0.840065', '0.828404', '0.836949', '0.842356', '0.842493', '0.848008', '0.841010', '0.827178', '0.833055', '0.839971', '0.839171', '0.844768', '0.845123', '0.839634', '0.843653', '0.839373', '0.832607']
         : correct/total = [(3432, 4128), (3552, 4203), (3403, 4081), (3640, 4333), (3389, 4091), (3588, 4287), (3532, 4193), (3664, 4349), (3554, 4191), (3597, 4277), (3427, 4143), (3493, 4193), (3438, 4093), (3522, 4197), (3423, 4052), (3405, 4029), (3487, 4153), (3529, 4183), (3428, 4084), (3437, 4128)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Overall test accuracy: mean=0.8387 ± 0.0057

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 13.194s (96.7%)
  - Filtering time: 0.024s (0.2%)
  - Aggregation time: 0.428s (3.1%)
  - Total time: 13.646s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
