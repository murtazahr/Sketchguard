Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Degree statistics: avg=19.00, min=19, max=19
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6588 ± 0.0461 | min=0.5747 max=0.7174
         : test loss mean=0.6816 ± 0.0036
         : individual accs = ['0.698246', '0.666667', '0.595386', '0.625216', '0.617284', '0.601747', '0.655895', '0.591837', '0.703345', '0.709220', '0.698427', '0.709333', '0.687500', '0.694828', '0.574733', '0.614847', '0.695841', '0.687887', '0.717373', '0.630149']
         : correct/total = [(796, 1140), (772, 1158), (671, 1127), (724, 1158), (700, 1134), (689, 1145), (751, 1145), (667, 1127), (799, 1136), (800, 1128), (799, 1144), (798, 1125), (792, 1152), (806, 1160), (646, 1124), (704, 1145), (803, 1154), (778, 1131), (830, 1157), (719, 1141)]
         : compromised: 0.6608, honest: 0.6508
Round 002: test acc mean=0.6528 ± 0.0474 | min=0.5187 max=0.7132
         : test loss mean=0.6639 ± 0.0100
         : individual accs = ['0.674561', '0.671848', '0.676131', '0.669257', '0.661376', '0.584279', '0.650655', '0.681455', '0.566901', '0.664007', '0.687063', '0.659556', '0.657986', '0.629310', '0.518683', '0.610480', '0.713172', '0.694076', '0.702679', '0.681858']
         : correct/total = [(769, 1140), (778, 1158), (762, 1127), (775, 1158), (750, 1134), (669, 1145), (745, 1145), (768, 1127), (644, 1136), (749, 1128), (786, 1144), (742, 1125), (758, 1152), (730, 1160), (583, 1124), (699, 1145), (823, 1154), (785, 1131), (813, 1157), (778, 1141)]
         : compromised: 0.6453, honest: 0.6826
Round 003: test acc mean=0.7313 ± 0.0174 | min=0.6863 max=0.7509
         : test loss mean=0.5778 ± 0.0196
         : individual accs = ['0.750000', '0.722798', '0.737356', '0.726252', '0.738977', '0.744105', '0.733624', '0.749778', '0.719190', '0.750887', '0.743007', '0.745778', '0.712674', '0.711207', '0.698399', '0.738865', '0.739168', '0.743590', '0.686258', '0.734443']
         : correct/total = [(855, 1140), (837, 1158), (831, 1127), (841, 1158), (838, 1134), (852, 1145), (840, 1145), (845, 1127), (817, 1136), (847, 1128), (850, 1144), (839, 1125), (821, 1152), (825, 1160), (785, 1124), (846, 1145), (853, 1154), (841, 1131), (794, 1157), (838, 1141)]
         : compromised: 0.7280, honest: 0.7445
Round 004: test acc mean=0.8057 ± 0.0150 | min=0.7692 max=0.8347
         : test loss mean=0.4310 ± 0.0153
         : individual accs = ['0.815789', '0.819516', '0.817214', '0.797064', '0.808642', '0.811354', '0.816594', '0.794144', '0.796655', '0.798759', '0.823427', '0.834667', '0.793403', '0.798276', '0.806050', '0.782533', '0.801560', '0.805482', '0.769231', '0.823839']
         : correct/total = [(930, 1140), (949, 1158), (921, 1127), (923, 1158), (917, 1134), (929, 1145), (935, 1145), (895, 1127), (905, 1136), (901, 1128), (942, 1144), (939, 1125), (914, 1152), (926, 1160), (906, 1124), (896, 1145), (925, 1154), (911, 1131), (890, 1157), (940, 1141)]
         : compromised: 0.8059, honest: 0.8050
Round 005: test acc mean=0.8516 ± 0.0223 | min=0.7848 max=0.8768
         : test loss mean=0.3414 ± 0.0274
         : individual accs = ['0.820175', '0.875648', '0.855368', '0.864421', '0.842152', '0.815721', '0.862882', '0.851819', '0.866197', '0.876773', '0.871503', '0.847111', '0.852431', '0.853448', '0.861210', '0.841048', '0.875217', '0.849691', '0.784788', '0.865031']
         : correct/total = [(935, 1140), (1014, 1158), (964, 1127), (1001, 1158), (955, 1134), (934, 1145), (988, 1145), (960, 1127), (984, 1136), (989, 1128), (997, 1144), (953, 1125), (982, 1152), (990, 1160), (968, 1124), (963, 1145), (1010, 1154), (961, 1131), (908, 1157), (987, 1141)]
         : compromised: 0.8527, honest: 0.8473
Round 006: test acc mean=0.8768 ± 0.0110 | min=0.8453 max=0.8925
         : test loss mean=0.2937 ± 0.0141
         : individual accs = ['0.877193', '0.883420', '0.880213', '0.879965', '0.861552', '0.888210', '0.881223', '0.874002', '0.889085', '0.884752', '0.888112', '0.874667', '0.879340', '0.868966', '0.879004', '0.860262', '0.892548', '0.870027', '0.845290', '0.879053']
         : correct/total = [(1000, 1140), (1023, 1158), (992, 1127), (1019, 1158), (977, 1134), (1017, 1145), (1009, 1145), (985, 1127), (1010, 1136), (998, 1128), (1016, 1144), (984, 1125), (1013, 1152), (1008, 1160), (988, 1124), (985, 1145), (1030, 1154), (984, 1131), (978, 1157), (1003, 1141)]
         : compromised: 0.8770, honest: 0.8763
Round 007: test acc mean=0.8879 ± 0.0091 | min=0.8652 max=0.8990
         : test loss mean=0.2743 ± 0.0150
         : individual accs = ['0.897368', '0.898964', '0.885537', '0.890328', '0.879189', '0.897817', '0.891703', '0.894410', '0.888204', '0.896277', '0.889860', '0.893333', '0.885417', '0.887069', '0.889680', '0.867249', '0.896014', '0.878868', '0.865169', '0.886065']
         : correct/total = [(1023, 1140), (1041, 1158), (998, 1127), (1031, 1158), (997, 1134), (1028, 1145), (1021, 1145), (1008, 1127), (1009, 1136), (1011, 1128), (1018, 1144), (1005, 1125), (1020, 1152), (1029, 1160), (1000, 1124), (993, 1145), (1034, 1154), (994, 1131), (1001, 1157), (1011, 1141)]
         : compromised: 0.8870, honest: 0.8917
Round 008: test acc mean=0.8916 ± 0.0074 | min=0.8755 max=0.9039
         : test loss mean=0.2641 ± 0.0137
         : individual accs = ['0.894737', '0.892919', '0.886424', '0.894646', '0.888007', '0.902183', '0.895197', '0.892635', '0.889085', '0.893617', '0.897727', '0.900444', '0.890625', '0.894828', '0.903915', '0.875983', '0.895147', '0.885057', '0.875540', '0.883436']
         : correct/total = [(1020, 1140), (1034, 1158), (999, 1127), (1036, 1158), (1007, 1134), (1033, 1145), (1025, 1145), (1006, 1127), (1010, 1136), (1008, 1128), (1027, 1144), (1013, 1125), (1026, 1152), (1038, 1160), (1016, 1124), (1003, 1145), (1033, 1154), (1001, 1131), (1013, 1157), (1008, 1141)]
         : compromised: 0.8914, honest: 0.8926
Round 009: test acc mean=0.8934 ± 0.0105 | min=0.8591 max=0.9066
         : test loss mean=0.2589 ± 0.0177
         : individual accs = ['0.901754', '0.895509', '0.880213', '0.902418', '0.891534', '0.906550', '0.897817', '0.896185', '0.897007', '0.898936', '0.895979', '0.904000', '0.894097', '0.897414', '0.900356', '0.881223', '0.894281', '0.883289', '0.859118', '0.890447']
         : correct/total = [(1028, 1140), (1037, 1158), (992, 1127), (1045, 1158), (1011, 1134), (1038, 1145), (1028, 1145), (1010, 1127), (1019, 1136), (1014, 1128), (1025, 1144), (1017, 1125), (1030, 1152), (1041, 1160), (1012, 1124), (1009, 1145), (1032, 1154), (999, 1131), (994, 1157), (1016, 1141)]
         : compromised: 0.8928, honest: 0.8959
Round 010: test acc mean=0.8982 ± 0.0083 | min=0.8799 max=0.9096
         : test loss mean=0.2500 ± 0.0156
         : individual accs = ['0.909649', '0.898100', '0.887311', '0.905872', '0.894180', '0.903057', '0.900437', '0.900621', '0.895246', '0.909574', '0.901224', '0.907556', '0.905382', '0.900862', '0.902135', '0.886463', '0.898614', '0.883289', '0.879862', '0.894829']
         : correct/total = [(1037, 1140), (1040, 1158), (1000, 1127), (1049, 1158), (1014, 1134), (1034, 1145), (1031, 1145), (1015, 1127), (1017, 1136), (1026, 1128), (1031, 1144), (1021, 1125), (1043, 1152), (1045, 1160), (1014, 1124), (1015, 1145), (1037, 1154), (999, 1131), (1018, 1157), (1021, 1141)]
         : compromised: 0.8976, honest: 0.9008

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.8976, Honest: 0.9008
Overall test accuracy: mean=0.8982 ± 0.0083

=== BALANCE SUMMARY ===
Node 0: acceptance=0.158
Node 1: acceptance=0.211
Node 2: acceptance=0.211
Node 3: acceptance=0.211
Node 4: acceptance=0.158
Node 5: acceptance=0.211
Node 6: acceptance=0.211
Node 7: acceptance=0.158
Node 8: acceptance=0.211
Node 9: acceptance=0.211
Node 10: acceptance=0.211
Node 11: acceptance=0.211
Node 12: acceptance=0.211
Node 13: acceptance=0.211
Node 14: acceptance=0.211
Node 15: acceptance=0.211
Node 16: acceptance=0.158
Node 17: acceptance=0.211
Node 18: acceptance=0.211
Node 19: acceptance=0.211

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.052s (82.6%)
    - Aggregation: 0.011s (17.4%)
  TOTALS:
    - Total computation: 0.063s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.063s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.046s
  - Aggregation: 0.004s
  - Model transfer: 0.000s
  - Total per node: 0.050s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.920s
  - Total aggregation: 0.084s
  - Total model transfer: 0.000s
  - Grand total: 1.004s
  - Mean acceptance rate: 0.200

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
