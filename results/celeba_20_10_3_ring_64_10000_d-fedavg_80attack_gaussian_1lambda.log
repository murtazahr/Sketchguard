Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 002: test acc mean=0.5081 ± 0.0179 | min=0.4788 max=0.5442
         : test loss mean=nan ± nan
         : individual accs = ['0.527193', '0.498273', '0.493345', '0.482729', '0.478836', '0.509170', '0.479476', '0.503993', '0.498239', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.534498', '0.544194', '0.508400', '0.522040', '0.518843']
         : correct/total = [(601, 1140), (577, 1158), (556, 1127), (559, 1158), (543, 1134), (583, 1145), (549, 1145), (568, 1127), (566, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (612, 1145), (628, 1154), (575, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5067, honest: 0.5136
Round 003: test acc mean=0.5051 ± 0.0165 | min=0.4745 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.523684', '0.516408', '0.493345', '0.528497', '0.477954', '0.485590', '0.481223', '0.508429', '0.474472', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.503057', '0.518198', '0.508400', '0.522040', '0.498685']
         : correct/total = [(597, 1140), (598, 1158), (556, 1127), (612, 1158), (542, 1134), (556, 1145), (551, 1145), (573, 1127), (539, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (576, 1145), (598, 1154), (575, 1131), (604, 1157), (569, 1141)]
         : compromised: 0.5046, honest: 0.5071
Round 004: test acc mean=0.5067 ± 0.0199 | min=0.4651 max=0.5511
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.505181', '0.493345', '0.531952', '0.492063', '0.485590', '0.476856', '0.503993', '0.551056', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.499563', '0.510399', '0.465075', '0.522040', '0.504820']
         : correct/total = [(603, 1140), (585, 1158), (556, 1127), (616, 1158), (558, 1134), (556, 1145), (546, 1145), (568, 1127), (626, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (572, 1145), (589, 1154), (526, 1131), (604, 1157), (576, 1141)]
         : compromised: 0.5061, honest: 0.5089
Round 005: test acc mean=0.5072 ± 0.0227 | min=0.4375 max=0.5397
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.484456', '0.493345', '0.528497', '0.539683', '0.510917', '0.506550', '0.488021', '0.437500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.482969', '0.515598', '0.526967', '0.522040', '0.517090']
         : correct/total = [(603, 1140), (561, 1158), (556, 1127), (612, 1158), (612, 1134), (585, 1145), (580, 1145), (550, 1127), (497, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (553, 1145), (595, 1154), (596, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.5045, honest: 0.5181
Round 006: test acc mean=0.5028 ± 0.0191 | min=0.4603 max=0.5272
         : test loss mean=nan ± nan
         : individual accs = ['0.527193', '0.491364', '0.493345', '0.522453', '0.460317', '0.497817', '0.488210', '0.507542', '0.515845', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.483843', '0.461872', '0.508400', '0.522040', '0.513585']
         : correct/total = [(601, 1140), (569, 1158), (556, 1127), (605, 1158), (522, 1134), (570, 1145), (559, 1145), (572, 1127), (586, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (554, 1145), (533, 1154), (575, 1131), (604, 1157), (586, 1141)]
         : compromised: 0.5062, honest: 0.4892
Round 007: test acc mean=0.5098 ± 0.0152 | min=0.4815 max=0.5298
         : test loss mean=nan ± nan
         : individual accs = ['0.529825', '0.503454', '0.493345', '0.528497', '0.481481', '0.520524', '0.521397', '0.492458', '0.490317', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.514731', '0.491600', '0.522040', '0.527607']
         : correct/total = [(604, 1140), (583, 1158), (556, 1127), (612, 1158), (546, 1134), (596, 1145), (597, 1145), (555, 1127), (557, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (594, 1154), (556, 1131), (604, 1157), (602, 1141)]
         : compromised: 0.5111, honest: 0.5046
Round 008: test acc mean=0.5061 ± 0.0207 | min=0.4734 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.493955', '0.493345', '0.496546', '0.521164', '0.514410', '0.478603', '0.482697', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.473362', '0.501733', '0.505747', '0.522040', '0.484663']
         : correct/total = [(603, 1140), (572, 1158), (556, 1127), (575, 1158), (591, 1134), (589, 1145), (548, 1145), (544, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (542, 1145), (579, 1154), (572, 1131), (604, 1157), (553, 1141)]
         : compromised: 0.5055, honest: 0.5086
Round 009: test acc mean=0.5103 ± 0.0174 | min=0.4711 max=0.5438
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.521589', '0.493345', '0.528497', '0.522046', '0.514410', '0.520524', '0.503106', '0.518486', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.496070', '0.509532', '0.543767', '0.522040', '0.479404']
         : correct/total = [(537, 1140), (604, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (596, 1145), (567, 1127), (589, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (568, 1145), (588, 1154), (615, 1131), (604, 1157), (547, 1141)]
         : compromised: 0.5125, honest: 0.5014
Round 010: test acc mean=0.5058 ± 0.0216 | min=0.4706 max=0.5616
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.474093', '0.493345', '0.530225', '0.481481', '0.485590', '0.495197', '0.510204', '0.561620', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.502183', '0.490468', '0.507515', '0.522040', '0.470640']
         : correct/total = [(603, 1140), (549, 1158), (556, 1127), (614, 1158), (546, 1134), (556, 1145), (567, 1145), (575, 1127), (638, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (575, 1145), (566, 1154), (574, 1131), (604, 1157), (537, 1141)]
         : compromised: 0.5066, honest: 0.5028

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: d-fedavg
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.5066, Honest: 0.5028
Overall test accuracy: mean=0.5058 ± 0.0216
