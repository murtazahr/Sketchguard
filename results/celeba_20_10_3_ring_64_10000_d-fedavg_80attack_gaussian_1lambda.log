Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.4943 ± 0.0255 | min=0.4375 max=0.5466
         : test loss mean=114457788.9956 ± 74772366.4108
         : individual accs = ['0.489474', '0.462003', '0.546584', '0.499136', '0.506173', '0.486463', '0.524017', '0.454303', '0.437500', '0.504433', '0.482517', '0.504889', '0.491319', '0.493966', '0.512456', '0.510917', '0.466205', '0.508400', '0.527226', '0.477651']
         : correct/total = [(558, 1140), (535, 1158), (616, 1127), (578, 1158), (574, 1134), (557, 1145), (600, 1145), (512, 1127), (497, 1136), (569, 1128), (552, 1144), (568, 1125), (566, 1152), (573, 1160), (576, 1124), (585, 1145), (538, 1154), (575, 1131), (610, 1157), (545, 1141)]
         : compromised: 0.4981, honest: 0.4790
Round 002: test acc mean=0.5144 ± 0.0198 | min=0.4615 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.516415', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.503546', '0.540210', '0.510222', '0.515625', '0.510345', '0.480427', '0.517031', '0.515598', '0.508400', '0.461538', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (582, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (568, 1128), (618, 1144), (574, 1125), (594, 1152), (592, 1160), (540, 1124), (592, 1145), (595, 1154), (575, 1131), (534, 1157), (591, 1141)]
         : compromised: 0.5136, honest: 0.5176
Round 003: test acc mean=0.5145 ± 0.0183 | min=0.4685 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.468500', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.487589', '0.527098', '0.520000', '0.519965', '0.495690', '0.500000', '0.517031', '0.515598', '0.508400', '0.521175', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (528, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (550, 1128), (603, 1144), (585, 1125), (599, 1152), (575, 1160), (562, 1124), (592, 1145), (595, 1154), (575, 1131), (603, 1157), (591, 1141)]
         : compromised: 0.5137, honest: 0.5176
Round 004: test acc mean=0.5144 ± 0.0172 | min=0.4844 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.484472', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.505319', '0.513112', '0.514667', '0.484375', '0.486207', '0.522242', '0.517031', '0.515598', '0.508400', '0.527226', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (546, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (570, 1128), (587, 1144), (579, 1125), (558, 1152), (564, 1160), (587, 1124), (592, 1145), (595, 1154), (575, 1131), (610, 1157), (591, 1141)]
         : compromised: 0.5135, honest: 0.5176
Round 005: test acc mean=0.5048 ± 0.0266 | min=0.4382 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.503993', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.492908', '0.491259', '0.438222', '0.501736', '0.487931', '0.478648', '0.517031', '0.515598', '0.508400', '0.452031', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (568, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (556, 1128), (562, 1144), (493, 1125), (578, 1152), (566, 1160), (538, 1124), (592, 1145), (595, 1154), (575, 1131), (523, 1157), (591, 1141)]
         : compromised: 0.5016, honest: 0.5176
Round 006: test acc mean=0.5126 ± 0.0199 | min=0.4650 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.496894', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.475177', '0.465035', '0.496000', '0.509549', '0.508621', '0.527580', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (560, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (536, 1128), (532, 1144), (558, 1125), (587, 1152), (590, 1160), (593, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5113, honest: 0.5176
Round 007: test acc mean=0.5151 ± 0.0156 | min=0.4866 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.502218', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.507979', '0.519231', '0.504000', '0.525174', '0.489655', '0.516904', '0.517031', '0.515598', '0.508400', '0.486603', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (566, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (573, 1128), (594, 1144), (567, 1125), (605, 1152), (568, 1160), (581, 1124), (592, 1145), (595, 1154), (575, 1131), (563, 1157), (591, 1141)]
         : compromised: 0.5144, honest: 0.5176
Round 008: test acc mean=0.5109 ± 0.0190 | min=0.4769 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.499556', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.483156', '0.506993', '0.503111', '0.498264', '0.523276', '0.476868', '0.517031', '0.515598', '0.508400', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (563, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (545, 1128), (580, 1144), (566, 1125), (574, 1152), (607, 1160), (536, 1124), (592, 1145), (595, 1154), (575, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.5093, honest: 0.5176
Round 009: test acc mean=0.5088 ± 0.0223 | min=0.4654 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.508429', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.465426', '0.476399', '0.515556', '0.479167', '0.477586', '0.482206', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (573, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (525, 1128), (545, 1144), (580, 1125), (552, 1152), (554, 1160), (542, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5066, honest: 0.5176
Round 010: test acc mean=0.5137 ± 0.0178 | min=0.4788 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.501331', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.479610', '0.526224', '0.521778', '0.511285', '0.512069', '0.492883', '0.517031', '0.515598', '0.508400', '0.478825', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (565, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (541, 1128), (602, 1144), (587, 1125), (589, 1152), (594, 1160), (554, 1124), (592, 1145), (595, 1154), (575, 1131), (554, 1157), (591, 1141)]
         : compromised: 0.5127, honest: 0.5176

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: d-fedavg
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.5127, Honest: 0.5176
Overall test accuracy: mean=0.5137 ± 0.0178
