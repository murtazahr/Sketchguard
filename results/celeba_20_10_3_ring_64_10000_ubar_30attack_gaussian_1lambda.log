Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 2,219,692 parameters
  - Rho parameter: 0.7
  - Stage 1: Distance-based filtering (select 70% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6371 ± 0.0530 | min=0.4948 max=0.7185
         : test loss mean=6538088.2563 ± 28498863.0578
         : individual accs = ['0.670175', '0.670121', '0.669033', '0.645078', '0.640212', '0.601747', '0.555459', '0.619343', '0.685739', '0.676418', '0.718531', '0.670222', '0.714410', '0.494828', '0.631673', '0.632314', '0.630849', '0.583554', '0.655143', '0.577564']
         : correct/total = [(764, 1140), (776, 1158), (754, 1127), (747, 1158), (726, 1134), (689, 1145), (636, 1145), (698, 1127), (779, 1136), (763, 1128), (822, 1144), (754, 1125), (823, 1152), (574, 1160), (710, 1124), (724, 1145), (728, 1154), (660, 1131), (758, 1157), (659, 1141)]
         : compromised: 0.6136, honest: 0.6472
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 002: test acc mean=0.7337 ± 0.0579 | min=0.5069 max=0.7858
         : test loss mean=nan ± nan
         : individual accs = ['0.720175', '0.730570', '0.743567', '0.737478', '0.693122', '0.685590', '0.732751', '0.767524', '0.772007', '0.776596', '0.785839', '0.752000', '0.768229', '0.506897', '0.751779', '0.744978', '0.778163', '0.745358', '0.743302', '0.737949']
         : correct/total = [(821, 1140), (846, 1158), (838, 1127), (854, 1158), (786, 1134), (785, 1145), (839, 1145), (865, 1127), (877, 1136), (876, 1128), (899, 1144), (846, 1125), (885, 1152), (588, 1160), (845, 1124), (853, 1145), (898, 1154), (843, 1131), (860, 1157), (842, 1141)]
         : compromised: 0.7002, honest: 0.7481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 003: test acc mean=0.8146 ± 0.0746 | min=0.5069 max=0.8776
         : test loss mean=nan ± nan
         : individual accs = ['0.835088', '0.844560', '0.837622', '0.823834', '0.791005', '0.792140', '0.797380', '0.841171', '0.847711', '0.865248', '0.877622', '0.853333', '0.826389', '0.506897', '0.838078', '0.819214', '0.860485', '0.819629', '0.791703', '0.822086']
         : correct/total = [(952, 1140), (978, 1158), (944, 1127), (954, 1158), (897, 1134), (907, 1145), (913, 1145), (948, 1127), (963, 1136), (976, 1128), (1004, 1144), (960, 1125), (952, 1152), (588, 1160), (942, 1124), (938, 1145), (993, 1154), (927, 1131), (916, 1157), (938, 1141)]
         : compromised: 0.7625, honest: 0.8369
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 004: test acc mean=0.8479 ± 0.0796 | min=0.5069 max=0.8830
         : test loss mean=nan ± nan
         : individual accs = ['0.864035', '0.879965', '0.881100', '0.873057', '0.849206', '0.857642', '0.873362', '0.874002', '0.870599', '0.882979', '0.882867', '0.876444', '0.859375', '0.506897', '0.873665', '0.845415', '0.870884', '0.847922', '0.821953', '0.866784']
         : correct/total = [(985, 1140), (1019, 1158), (993, 1127), (1011, 1158), (963, 1134), (982, 1145), (1000, 1145), (985, 1127), (989, 1136), (996, 1128), (1010, 1144), (986, 1125), (990, 1152), (588, 1160), (982, 1124), (968, 1145), (1005, 1154), (959, 1131), (951, 1157), (989, 1141)]
         : compromised: 0.7946, honest: 0.8708
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 005: test acc mean=0.8537 ± 0.0831 | min=0.5069 max=0.9012
         : test loss mean=nan ± nan
         : individual accs = ['0.848246', '0.844560', '0.874002', '0.886010', '0.873898', '0.840175', '0.878603', '0.889086', '0.882923', '0.895390', '0.901224', '0.896000', '0.881944', '0.506897', '0.888790', '0.867249', '0.896014', '0.877984', '0.803803', '0.840491']
         : correct/total = [(967, 1140), (978, 1158), (985, 1127), (1026, 1158), (991, 1134), (962, 1145), (1006, 1145), (1002, 1127), (1003, 1136), (1010, 1128), (1031, 1144), (1008, 1125), (1016, 1152), (588, 1160), (999, 1124), (993, 1145), (1034, 1154), (993, 1131), (930, 1157), (959, 1141)]
         : compromised: 0.7999, honest: 0.8767
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 006: test acc mean=0.8691 ± 0.0836 | min=0.5069 max=0.9021
         : test loss mean=nan ± nan
         : individual accs = ['0.892982', '0.895509', '0.888199', '0.901554', '0.897707', '0.876856', '0.899563', '0.881100', '0.880282', '0.886525', '0.891608', '0.896000', '0.885417', '0.506897', '0.886121', '0.871616', '0.902080', '0.885942', '0.866897', '0.888694']
         : correct/total = [(1018, 1140), (1037, 1158), (1001, 1127), (1044, 1158), (1018, 1134), (1004, 1145), (1030, 1145), (993, 1127), (1000, 1136), (1000, 1128), (1020, 1144), (1008, 1125), (1020, 1152), (588, 1160), (996, 1124), (998, 1145), (1041, 1154), (1002, 1131), (1003, 1157), (1014, 1141)]
         : compromised: 0.8180, honest: 0.8910
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 007: test acc mean=0.8746 ± 0.0848 | min=0.5069 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.882456', '0.892919', '0.893523', '0.902418', '0.889771', '0.901310', '0.895197', '0.896185', '0.883803', '0.906028', '0.902972', '0.910222', '0.891493', '0.506897', '0.895907', '0.882096', '0.896880', '0.888594', '0.878133', '0.895706']
         : correct/total = [(1006, 1140), (1034, 1158), (1007, 1127), (1045, 1158), (1009, 1134), (1032, 1145), (1025, 1145), (1010, 1127), (1004, 1136), (1022, 1128), (1033, 1144), (1024, 1125), (1027, 1152), (588, 1160), (1007, 1124), (1010, 1145), (1035, 1154), (1005, 1131), (1016, 1157), (1022, 1141)]
         : compromised: 0.8271, honest: 0.8950
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 008: test acc mean=0.8763 ± 0.0853 | min=0.5069 max=0.9111
         : test loss mean=nan ± nan
         : individual accs = ['0.899123', '0.898100', '0.893523', '0.906736', '0.900353', '0.897817', '0.900437', '0.892635', '0.877641', '0.895390', '0.895979', '0.911111', '0.894965', '0.506897', '0.904804', '0.882096', '0.906412', '0.892131', '0.872083', '0.897458']
         : correct/total = [(1025, 1140), (1040, 1158), (1007, 1127), (1050, 1158), (1021, 1134), (1028, 1145), (1031, 1145), (1006, 1127), (997, 1136), (1010, 1128), (1025, 1144), (1025, 1125), (1031, 1152), (588, 1160), (1017, 1124), (1010, 1145), (1046, 1154), (1009, 1131), (1009, 1157), (1024, 1141)]
         : compromised: 0.8281, honest: 0.8969
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 009: test acc mean=0.8784 ± 0.0856 | min=0.5069 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.900877', '0.900691', '0.895297', '0.905009', '0.902998', '0.906550', '0.903930', '0.898846', '0.889085', '0.897163', '0.899476', '0.910222', '0.904514', '0.506897', '0.902135', '0.889083', '0.899480', '0.883289', '0.873812', '0.898335']
         : correct/total = [(1027, 1140), (1043, 1158), (1009, 1127), (1048, 1158), (1024, 1134), (1038, 1145), (1035, 1145), (1013, 1127), (1010, 1136), (1012, 1128), (1029, 1144), (1024, 1125), (1042, 1152), (588, 1160), (1014, 1124), (1018, 1145), (1038, 1154), (999, 1131), (1011, 1157), (1025, 1141)]
         : compromised: 0.8295, honest: 0.8993
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 010: test acc mean=0.8799 ± 0.0861 | min=0.5069 max=0.9123
         : test loss mean=nan ± nan
         : individual accs = ['0.912281', '0.905872', '0.890861', '0.909326', '0.900353', '0.902183', '0.896070', '0.906832', '0.882042', '0.899823', '0.906469', '0.909333', '0.907986', '0.506897', '0.902135', '0.890830', '0.909012', '0.883289', '0.879862', '0.896582']
         : correct/total = [(1040, 1140), (1049, 1158), (1004, 1127), (1053, 1158), (1021, 1134), (1033, 1145), (1026, 1145), (1022, 1127), (1002, 1136), (1015, 1128), (1037, 1144), (1023, 1125), (1046, 1152), (588, 1160), (1014, 1124), (1020, 1145), (1049, 1154), (999, 1131), (1018, 1157), (1023, 1141)]
         : compromised: 0.8304, honest: 0.9011
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: ubar
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.8304, Honest: 0.9011
Overall test accuracy: mean=0.8799 ± 0.0861

=== UBAR SUMMARY ===
Node 0: stage1=0.500, stage2=1.000, overall=0.500
Node 1: stage1=0.500, stage2=1.000, overall=0.500
Node 2: stage1=0.500, stage2=1.000, overall=0.500
Node 3: stage1=0.500, stage2=1.000, overall=0.500
Node 4: stage1=0.500, stage2=1.000, overall=0.500
Node 5: stage1=0.500, stage2=1.000, overall=0.500
Node 6: stage1=0.500, stage2=1.000, overall=0.500
Node 7: stage1=0.500, stage2=1.000, overall=0.500
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.500, stage2=1.000, overall=0.500
Node 10: stage1=0.500, stage2=1.000, overall=0.500
Node 11: stage1=0.500, stage2=1.000, overall=0.500
Node 12: stage1=0.500, stage2=1.000, overall=0.500
Node 13: stage1=0.500, stage2=1.000, overall=0.500
Node 14: stage1=0.500, stage2=1.000, overall=0.500
Node 15: stage1=0.500, stage2=1.000, overall=0.500
Node 16: stage1=0.500, stage2=1.000, overall=0.500
Node 17: stage1=0.500, stage2=1.000, overall=0.500
Node 18: stage1=0.500, stage2=1.000, overall=0.500
Node 19: stage1=0.500, stage2=1.000, overall=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Distance computation: 0.055s (20.6%)
    - Loss computation: 0.201s (75.3%)
    - Aggregation: 0.011s (4.1%)
  TOTALS:
    - Total computation: 0.267s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.267s

=== PER-NODE AVERAGE TIME ===
  - Distance computation: 0.009s
  - Loss computation: 0.173s
  - Aggregation: 0.004s
  - Model transfer: 0.000s
  - Total per node: 0.186s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total distance computation: 0.175s
  - Total loss computation: 3.458s
  - Total aggregation: 0.087s
  - Total model transfer: 0.000s
  - Grand total: 3.720s
  - Mean Stage 1 acceptance rate: 0.500
  - Mean Stage 2 acceptance rate: 1.000
  - Overall acceptance rate: 0.500

UBAR Algorithm Properties:
  - Model dimension: 2,219,692
  - Rho parameter: 0.7
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 70% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
