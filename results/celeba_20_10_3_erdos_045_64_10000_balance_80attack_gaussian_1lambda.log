Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Degree statistics: avg=9.90, min=7, max=14
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6214 ± 0.0697 | min=0.5232 max=0.7196
         : test loss mean=2785050.2267 ± 12139749.5285
         : individual accs = ['0.698246', '0.666667', '0.553682', '0.639896', '0.525573', '0.537991', '0.643668', '0.560781', '0.636444', '0.709220', '0.625000', '0.548444', '0.719618', '0.680172', '0.524911', '0.567686', '0.715771', '0.651636', '0.699222', '0.523225']
         : correct/total = [(796, 1140), (772, 1158), (624, 1127), (741, 1158), (596, 1134), (616, 1145), (737, 1145), (632, 1127), (723, 1136), (800, 1128), (715, 1144), (617, 1125), (829, 1152), (789, 1160), (590, 1124), (650, 1145), (826, 1154), (737, 1131), (809, 1157), (597, 1141)]
         : compromised: 0.6205, honest: 0.6251
Round 002: test acc mean=0.6718 ± 0.0574 | min=0.4934 max=0.7556
         : test loss mean=45145345741363675628564834680832.0000 ± 196783999857808565351971993681920.0000
         : individual accs = ['0.706140', '0.674439', '0.662822', '0.715889', '0.688713', '0.646288', '0.739738', '0.682343', '0.731514', '0.661348', '0.676573', '0.656000', '0.683160', '0.688793', '0.572954', '0.614847', '0.755633', '0.690539', '0.694901', '0.493427']
         : correct/total = [(805, 1140), (781, 1158), (747, 1127), (829, 1158), (781, 1134), (740, 1145), (847, 1145), (769, 1127), (831, 1136), (746, 1128), (774, 1144), (738, 1125), (787, 1152), (799, 1160), (644, 1124), (704, 1145), (872, 1154), (781, 1131), (804, 1157), (563, 1141)]
         : compromised: 0.6627, honest: 0.7082
Round 003: test acc mean=0.7557 ± 0.0633 | min=0.5180 max=0.8380
         : test loss mean=nan ± nan
         : individual accs = ['0.808772', '0.739206', '0.769299', '0.776339', '0.769841', '0.750218', '0.821834', '0.771961', '0.828345', '0.759752', '0.768357', '0.772444', '0.723958', '0.749138', '0.747331', '0.728384', '0.837955', '0.735632', '0.736387', '0.517967']
         : correct/total = [(922, 1140), (856, 1158), (867, 1127), (899, 1158), (873, 1134), (859, 1145), (941, 1145), (870, 1127), (941, 1136), (857, 1128), (879, 1144), (869, 1125), (834, 1152), (869, 1160), (840, 1124), (834, 1145), (967, 1154), (832, 1131), (852, 1157), (591, 1141)]
         : compromised: 0.7453, honest: 0.7971
Round 004: test acc mean=0.8207 ± 0.0720 | min=0.5180 max=0.8715
         : test loss mean=nan ± nan
         : individual accs = ['0.840351', '0.836788', '0.828749', '0.854922', '0.828924', '0.847162', '0.863755', '0.835847', '0.871479', '0.843085', '0.858392', '0.842667', '0.828993', '0.825000', '0.830961', '0.792140', '0.851820', '0.809019', '0.805532', '0.517967']
         : correct/total = [(958, 1140), (969, 1158), (934, 1127), (990, 1158), (940, 1134), (970, 1145), (989, 1145), (942, 1127), (990, 1136), (951, 1128), (982, 1144), (948, 1125), (955, 1152), (957, 1160), (934, 1124), (907, 1145), (983, 1154), (915, 1131), (932, 1157), (591, 1141)]
         : compromised: 0.8160, honest: 0.8392
Round 005: test acc mean=0.8398 ± 0.0775 | min=0.5180 max=0.8834
         : test loss mean=nan ± nan
         : individual accs = ['0.854386', '0.883420', '0.869565', '0.860967', '0.852734', '0.800000', '0.856769', '0.854481', '0.878521', '0.878546', '0.872378', '0.857778', '0.860243', '0.854310', '0.876335', '0.849782', '0.876083', '0.855880', '0.786517', '0.517967']
         : correct/total = [(974, 1140), (1023, 1158), (980, 1127), (997, 1158), (967, 1134), (916, 1145), (981, 1145), (963, 1127), (998, 1136), (991, 1128), (998, 1144), (965, 1125), (991, 1152), (991, 1160), (985, 1124), (973, 1145), (1011, 1154), (968, 1131), (910, 1157), (591, 1141)]
         : compromised: 0.8349, honest: 0.8594
Round 006: test acc mean=0.8601 ± 0.0793 | min=0.5180 max=0.8951
         : test loss mean=nan ± nan
         : individual accs = ['0.880702', '0.886010', '0.878438', '0.884283', '0.870370', '0.889956', '0.884716', '0.876664', '0.889085', '0.883865', '0.887238', '0.864889', '0.881944', '0.868103', '0.883452', '0.860262', '0.895147', '0.870911', '0.848747', '0.517967']
         : correct/total = [(1004, 1140), (1026, 1158), (990, 1127), (1024, 1158), (987, 1134), (1019, 1145), (1013, 1145), (988, 1127), (1010, 1136), (997, 1128), (1015, 1144), (973, 1125), (1016, 1152), (1007, 1160), (993, 1124), (985, 1145), (1033, 1154), (985, 1131), (982, 1157), (591, 1141)]
         : compromised: 0.8550, honest: 0.8807
Round 007: test acc mean=0.8697 ± 0.0811 | min=0.5180 max=0.9024
         : test loss mean=nan ± nan
         : individual accs = ['0.891228', '0.902418', '0.886424', '0.887737', '0.877425', '0.894323', '0.893450', '0.886424', '0.891725', '0.898936', '0.890734', '0.896000', '0.885417', '0.881897', '0.888790', '0.870742', '0.894281', '0.883289', '0.875540', '0.517967']
         : correct/total = [(1016, 1140), (1045, 1158), (999, 1127), (1028, 1158), (995, 1134), (1024, 1145), (1023, 1145), (999, 1127), (1013, 1136), (1014, 1128), (1019, 1144), (1008, 1125), (1020, 1152), (1023, 1160), (999, 1124), (997, 1145), (1032, 1154), (999, 1131), (1013, 1157), (591, 1141)]
         : compromised: 0.8653, honest: 0.8873
Round 008: test acc mean=0.8740 ± 0.0820 | min=0.5180 max=0.9057
         : test loss mean=nan ± nan
         : individual accs = ['0.896491', '0.901554', '0.888199', '0.892919', '0.883598', '0.903930', '0.896943', '0.894410', '0.890845', '0.894504', '0.895979', '0.899556', '0.892361', '0.893103', '0.905694', '0.879476', '0.893414', '0.882405', '0.876404', '0.517967']
         : correct/total = [(1022, 1140), (1044, 1158), (1001, 1127), (1034, 1158), (1002, 1134), (1035, 1145), (1027, 1145), (1008, 1127), (1012, 1136), (1009, 1128), (1025, 1144), (1012, 1125), (1028, 1152), (1036, 1160), (1018, 1124), (1007, 1145), (1031, 1154), (998, 1131), (1014, 1157), (591, 1141)]
         : compromised: 0.8695, honest: 0.8920
Round 009: test acc mean=0.8762 ± 0.0828 | min=0.5180 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.895614', '0.898964', '0.896185', '0.902418', '0.888007', '0.904803', '0.899563', '0.897072', '0.897887', '0.893617', '0.899476', '0.910222', '0.892361', '0.897414', '0.901246', '0.886463', '0.899480', '0.883289', '0.861711', '0.517967']
         : correct/total = [(1021, 1140), (1041, 1158), (1010, 1127), (1045, 1158), (1007, 1134), (1036, 1145), (1030, 1145), (1011, 1127), (1020, 1136), (1008, 1128), (1029, 1144), (1024, 1125), (1028, 1152), (1041, 1160), (1013, 1124), (1015, 1145), (1038, 1154), (999, 1131), (997, 1157), (591, 1141)]
         : compromised: 0.8715, honest: 0.8950
Round 010: test acc mean=0.8802 ± 0.0835 | min=0.5180 max=0.9096
         : test loss mean=nan ± nan
         : individual accs = ['0.909649', '0.902418', '0.892635', '0.898964', '0.890653', '0.904803', '0.901310', '0.906832', '0.897007', '0.906028', '0.902972', '0.903111', '0.906250', '0.900000', '0.907473', '0.887336', '0.902080', '0.883289', '0.883319', '0.517967']
         : correct/total = [(1037, 1140), (1045, 1158), (1006, 1127), (1041, 1158), (1010, 1134), (1036, 1145), (1032, 1145), (1022, 1127), (1019, 1136), (1022, 1128), (1033, 1144), (1016, 1125), (1044, 1152), (1044, 1160), (1020, 1124), (1016, 1145), (1041, 1154), (999, 1131), (1022, 1157), (591, 1141)]
         : compromised: 0.8747, honest: 0.9023

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.8747, Honest: 0.9023
Overall test accuracy: mean=0.8802 ± 0.0835

=== BALANCE SUMMARY ===
Node 0: acceptance=0.167
Node 1: acceptance=0.400
Node 2: acceptance=0.250
Node 3: acceptance=0.143
Node 4: acceptance=0.222
Node 5: acceptance=0.200
Node 6: acceptance=0.083
Node 7: acceptance=0.091
Node 8: acceptance=0.143
Node 9: acceptance=0.364
Node 10: acceptance=0.250
Node 11: acceptance=0.083
Node 12: acceptance=0.250
Node 13: acceptance=0.111
Node 14: acceptance=0.214
Node 15: acceptance=0.222
Node 16: acceptance=0.143
Node 17: acceptance=0.375
Node 18: acceptance=0.250
Node 19: acceptance=0.100

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.036s (77.3%)
    - Aggregation: 0.011s (22.7%)
  TOTALS:
    - Total computation: 0.047s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.047s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.025s
  - Aggregation: 0.004s
  - Model transfer: 0.000s
  - Total per node: 0.029s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.502s
  - Total aggregation: 0.071s
  - Total model transfer: 0.000s
  - Grand total: 0.573s
  - Mean acceptance rate: 0.203

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
