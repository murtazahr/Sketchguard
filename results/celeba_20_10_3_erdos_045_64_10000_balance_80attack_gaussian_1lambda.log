Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.507759', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (589, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5161, honest: 0.5176
Round 002: test acc mean=0.6536 ± 0.1677 | min=0.4911 max=0.9021
         : test loss mean=7.8184 ± 31.4829
         : individual accs = ['0.737719', '0.508636', '0.493345', '0.879965', '0.602293', '0.514410', '0.890830', '0.873114', '0.832746', '0.491135', '0.525350', '0.849778', '0.522569', '0.864655', '0.517794', '0.517031', '0.902080', '0.508400', '0.522040', '0.517967']
         : correct/total = [(841, 1140), (589, 1158), (556, 1127), (1019, 1158), (683, 1134), (589, 1145), (1020, 1145), (984, 1127), (946, 1136), (554, 1128), (601, 1144), (956, 1125), (602, 1152), (1003, 1160), (582, 1124), (592, 1145), (1041, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.6223, honest: 0.7788
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 004: test acc mean=0.4962 ± 0.0241 | min=0.4586 max=0.5428
         : test loss mean=5633.8189 ± 20729.0217
         : individual accs = ['0.471053', '0.508636', '0.506655', '0.460276', '0.493827', '0.465502', '0.475983', '0.527950', '0.458627', '0.491135', '0.542832', '0.498667', '0.516493', '0.494828', '0.475979', '0.467249', '0.521664', '0.508400', '0.519447', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (571, 1127), (533, 1158), (560, 1134), (533, 1145), (545, 1145), (595, 1127), (521, 1136), (554, 1128), (621, 1144), (561, 1125), (595, 1152), (574, 1160), (535, 1124), (535, 1145), (602, 1154), (575, 1131), (601, 1157), (591, 1141)]
         : compromised: 0.4943, honest: 0.5036
Round 005: test acc mean=0.5091 ± 0.0149 | min=0.4783 max=0.5326
         : test loss mean=406.9172 ± 285.3362
         : individual accs = ['0.505263', '0.508636', '0.527063', '0.524180', '0.520282', '0.529258', '0.522271', '0.498669', '0.532570', '0.512411', '0.504371', '0.499556', '0.478299', '0.503448', '0.504448', '0.516157', '0.517331', '0.509284', '0.485739', '0.482033']
         : correct/total = [(576, 1140), (589, 1158), (594, 1127), (607, 1158), (590, 1134), (606, 1145), (598, 1145), (562, 1127), (605, 1136), (578, 1128), (577, 1144), (562, 1125), (551, 1152), (584, 1160), (567, 1124), (591, 1145), (597, 1154), (576, 1131), (562, 1157), (550, 1141)]
         : compromised: 0.5087, honest: 0.5104
Round 006: test acc mean=0.5127 ± 0.0233 | min=0.4747 max=0.5704
         : test loss mean=1557.7156 ± 2198.5727
         : individual accs = ['0.516667', '0.491364', '0.488021', '0.528497', '0.522046', '0.485590', '0.518777', '0.527063', '0.552817', '0.492021', '0.474650', '0.496000', '0.522569', '0.493103', '0.533808', '0.517031', '0.513865', '0.492485', '0.570441', '0.516214']
         : correct/total = [(589, 1140), (569, 1158), (550, 1127), (612, 1158), (592, 1134), (556, 1145), (594, 1145), (594, 1127), (628, 1136), (555, 1128), (543, 1144), (558, 1125), (602, 1152), (572, 1160), (600, 1124), (592, 1145), (593, 1154), (557, 1131), (660, 1157), (589, 1141)]
         : compromised: 0.5108, honest: 0.5199
Round 007: test acc mean=0.5090 ± 0.0200 | min=0.4747 max=0.5625
         : test loss mean=6381082.6442 ± 17626998.6989
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.490798']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (560, 1141)]
         : compromised: 0.5068, honest: 0.5176
Round 008: test acc mean=0.5137 ± 0.0163 | min=0.4821 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.528497', '0.500000', '0.514410', '0.482096', '0.504880', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.510955']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (612, 1158), (567, 1134), (589, 1145), (552, 1145), (569, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (583, 1141)]
         : compromised: 0.5140, honest: 0.5124
Round 009: test acc mean=0.5188 ± 0.0157 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.540611', '0.530612', '0.562500', '0.491135', '0.525350', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (619, 1145), (598, 1127), (639, 1136), (554, 1128), (601, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5174, honest: 0.5243
Round 010: test acc mean=0.5220 ± 0.0220 | min=0.4774 max=0.5625
         : test loss mean=114.7863 ± 495.8978
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.532628', '0.514410', '0.551092', '0.561668', '0.562500', '0.500000', '0.540210', '0.498667', '0.477431', '0.547414', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.513585']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (604, 1134), (589, 1145), (631, 1145), (633, 1127), (639, 1136), (564, 1128), (618, 1144), (561, 1125), (550, 1152), (635, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (586, 1141)]
         : compromised: 0.5188, honest: 0.5347

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.5188, Honest: 0.5347
Overall test accuracy: mean=0.5220 ± 0.0220

=== BALANCE SUMMARY ===
Node 0: acceptance=0.458
Node 1: acceptance=0.520
Node 2: acceptance=0.550
Node 3: acceptance=0.486
Node 4: acceptance=0.522
Node 5: acceptance=0.460
Node 6: acceptance=0.442
Node 7: acceptance=0.455
Node 8: acceptance=0.486
Node 9: acceptance=0.473
Node 10: acceptance=0.512
Node 11: acceptance=0.408
Node 12: acceptance=0.433
Node 13: acceptance=0.467
Node 14: acceptance=0.414
Node 15: acceptance=0.467
Node 16: acceptance=0.486
Node 17: acceptance=0.487
Node 18: acceptance=0.475
Node 19: acceptance=0.500

Performance Summary:
  - Distance computation time: 1.548s (43.6%)
  - Filtering time: 1.684s (47.4%)
  - Aggregation time: 0.322s (9.1%)
  - Total time: 3.553s
  - Mean acceptance rate: 0.475

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
