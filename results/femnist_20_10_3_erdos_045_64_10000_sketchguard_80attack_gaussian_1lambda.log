Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3857 ± 0.1005 | min=0.0354 max=0.5202
         : test loss mean=42809106.3916 ± 186600552.4152
         : individual accs = ['0.425145', '0.449441', '0.418525', '0.375490', '0.450257', '0.456263', '0.410923', '0.482180', '0.413982', '0.399579', '0.292542', '0.520153', '0.303445', '0.347868', '0.383514', '0.418466', '0.442572', '0.413818', '0.275465', '0.035368']
         : correct/total = [(1755, 4128), (1889, 4203), (1708, 4081), (1627, 4333), (1842, 4091), (1956, 4287), (1723, 4193), (2097, 4349), (1735, 4191), (1709, 4277), (1212, 4143), (2181, 4193), (1242, 4093), (1460, 4197), (1554, 4052), (1686, 4029), (1838, 4153), (1731, 4183), (1125, 4084), (146, 4128)]
         : compromised: 0.3697, honest: 0.4500
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 002: test acc mean=0.6550 ± 0.1451 | min=0.0431 max=0.7336
         : test loss mean=178945167889.2457 ± 780003903254.2146
         : individual accs = ['0.726744', '0.668808', '0.641264', '0.680591', '0.718651', '0.697457', '0.733604', '0.731203', '0.690527', '0.671733', '0.627323', '0.731696', '0.689714', '0.728616', '0.680652', '0.618019', '0.719480', '0.620846', '0.680950', '0.043120']
         : correct/total = [(3000, 4128), (2811, 4203), (2617, 4081), (2949, 4333), (2940, 4091), (2990, 4287), (3076, 4193), (3180, 4349), (2894, 4191), (2873, 4277), (2599, 4143), (3068, 4193), (2823, 4093), (3058, 4197), (2758, 4052), (2490, 4029), (2988, 4153), (2597, 4183), (2781, 4084), (178, 4128)]
         : compromised: 0.6378, honest: 0.7240
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 003: test acc mean=0.7166 ± 0.1599 | min=0.0431 max=0.7956
         : test loss mean=396282232731.7013 ± 1727354205592.1531
         : individual accs = ['0.783915', '0.731620', '0.745160', '0.780291', '0.777316', '0.726382', '0.782018', '0.795585', '0.784777', '0.727847', '0.708665', '0.772239', '0.760811', '0.783417', '0.764808', '0.610077', '0.782567', '0.715754', '0.755142', '0.043120']
         : correct/total = [(3236, 4128), (3075, 4203), (3041, 4081), (3381, 4333), (3180, 4091), (3114, 4287), (3279, 4193), (3460, 4349), (3289, 4191), (3113, 4277), (2936, 4143), (3238, 4193), (3114, 4093), (3288, 4197), (3099, 4052), (2458, 4029), (3250, 4153), (2994, 4183), (3084, 4084), (178, 4128)]
         : compromised: 0.6995, honest: 0.7848
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 004: test acc mean=0.7616 ± 0.1651 | min=0.0431 max=0.8144
         : test loss mean=197269401607.1166 ± 859877386254.6458
         : individual accs = ['0.797965', '0.799905', '0.795638', '0.813063', '0.801516', '0.794028', '0.809921', '0.811451', '0.814364', '0.790741', '0.779146', '0.792988', '0.795749', '0.813200', '0.805775', '0.779846', '0.796773', '0.795601', '0.802155', '0.043120']
         : correct/total = [(3294, 4128), (3362, 4203), (3247, 4081), (3523, 4333), (3279, 4091), (3404, 4287), (3396, 4193), (3529, 4349), (3413, 4191), (3382, 4277), (3228, 4143), (3325, 4193), (3257, 4093), (3413, 4197), (3265, 4052), (3142, 4029), (3309, 4153), (3328, 4183), (3276, 4084), (178, 4128)]
         : compromised: 0.7516, honest: 0.8019
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 005: test acc mean=0.7781 ± 0.1688 | min=0.0431 max=0.8323
         : test loss mean=144143503303.4380 ± 628306964264.8936
         : individual accs = ['0.813469', '0.812277', '0.814016', '0.821371', '0.811049', '0.817821', '0.817076', '0.827547', '0.827487', '0.819733', '0.802800', '0.813260', '0.815539', '0.832261', '0.821570', '0.805907', '0.815073', '0.808272', '0.822233', '0.043120']
         : correct/total = [(3358, 4128), (3414, 4203), (3322, 4081), (3559, 4333), (3318, 4091), (3506, 4287), (3426, 4193), (3599, 4349), (3468, 4191), (3506, 4277), (3326, 4143), (3410, 4193), (3338, 4093), (3493, 4197), (3329, 4052), (3247, 4029), (3385, 4153), (3381, 4183), (3358, 4084), (178, 4128)]
         : compromised: 0.7684, honest: 0.8168
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 006: test acc mean=0.7874 ± 0.1708 | min=0.0431 max=0.8368
         : test loss mean=182328741069.3297 ± 794752556821.7719
         : individual accs = ['0.818314', '0.828456', '0.819407', '0.834526', '0.818626', '0.827152', '0.820415', '0.828466', '0.833930', '0.830722', '0.816558', '0.823515', '0.825556', '0.836788', '0.828233', '0.825763', '0.829039', '0.828114', '0.831783', '0.043120']
         : correct/total = [(3378, 4128), (3482, 4203), (3344, 4081), (3616, 4333), (3349, 4091), (3546, 4287), (3440, 4193), (3603, 4349), (3495, 4191), (3553, 4277), (3383, 4143), (3453, 4193), (3379, 4093), (3512, 4197), (3356, 4052), (3327, 4029), (3443, 4153), (3464, 4183), (3397, 4084), (178, 4128)]
         : compromised: 0.7784, honest: 0.8236
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 007: test acc mean=0.7958 ± 0.1728 | min=0.0431 max=0.8438
         : test loss mean=1372047339450.6362 ± 5980615698416.9199
         : individual accs = ['0.832122', '0.843445', '0.837785', '0.837295', '0.828404', '0.829951', '0.834248', '0.842033', '0.836793', '0.843348', '0.822351', '0.829716', '0.832885', '0.835597', '0.837858', '0.832713', '0.839875', '0.833134', '0.843781', '0.043120']
         : correct/total = [(3435, 4128), (3545, 4203), (3419, 4081), (3628, 4333), (3389, 4091), (3558, 4287), (3498, 4193), (3662, 4349), (3507, 4191), (3607, 4277), (3407, 4143), (3479, 4193), (3409, 4093), (3507, 4197), (3395, 4052), (3355, 4029), (3488, 4153), (3485, 4183), (3446, 4084), (178, 4128)]
         : compromised: 0.7859, honest: 0.8356
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 008: test acc mean=0.7995 ± 0.1736 | min=0.0431 max=0.8461
         : test loss mean=3501049656389131.0000 ± 15260721648518020.0000
         : individual accs = ['0.830669', '0.843207', '0.837785', '0.838218', '0.839404', '0.839515', '0.842833', '0.845712', '0.846099', '0.844985', '0.827178', '0.837825', '0.837283', '0.841553', '0.845015', '0.836684', '0.834577', '0.836720', '0.842067', '0.043120']
         : correct/total = [(3429, 4128), (3544, 4203), (3419, 4081), (3632, 4333), (3434, 4091), (3599, 4287), (3534, 4193), (3678, 4349), (3546, 4191), (3614, 4277), (3427, 4143), (3513, 4193), (3427, 4093), (3532, 4197), (3424, 4052), (3371, 4029), (3466, 4153), (3500, 4183), (3439, 4084), (178, 4128)]
         : compromised: 0.7900, honest: 0.8376
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 009: test acc mean=0.8048 ± 0.1737 | min=0.0480 max=0.8555
         : test loss mean=30247769201.1682 ± 131846969213.3748
         : individual accs = ['0.839147', '0.851297', '0.843911', '0.847681', '0.836470', '0.844880', '0.844264', '0.850080', '0.846815', '0.855506', '0.834420', '0.835202', '0.847056', '0.845366', '0.849210', '0.848101', '0.838671', '0.846522', '0.843046', '0.047965']
         : correct/total = [(3464, 4128), (3578, 4203), (3444, 4081), (3673, 4333), (3422, 4091), (3622, 4287), (3540, 4193), (3697, 4349), (3549, 4191), (3659, 4277), (3457, 4143), (3502, 4193), (3467, 4093), (3548, 4197), (3441, 4052), (3417, 4029), (3483, 4153), (3541, 4183), (3443, 4084), (198, 4128)]
         : compromised: 0.7957, honest: 0.8411
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 010: test acc mean=0.8077 ± 0.1744 | min=0.0480 max=0.8603
         : test loss mean=97128137745.9029 ± 423371737006.6734
         : individual accs = ['0.842781', '0.860338', '0.848321', '0.852527', '0.842092', '0.845580', '0.851181', '0.848701', '0.851587', '0.850362', '0.835385', '0.835202', '0.848278', '0.846081', '0.851431', '0.854058', '0.841560', '0.849151', '0.851126', '0.047965']
         : correct/total = [(3479, 4128), (3616, 4203), (3462, 4081), (3694, 4333), (3445, 4091), (3625, 4287), (3569, 4193), (3691, 4349), (3569, 4191), (3637, 4277), (3461, 4143), (3502, 4193), (3472, 4093), (3551, 4197), (3450, 4052), (3441, 4029), (3495, 4153), (3552, 4183), (3476, 4084), (198, 4128)]
         : compromised: 0.7987, honest: 0.8438
         : sketchguard stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: sketchguard
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.7987, Honest: 0.8438
Overall test accuracy: mean=0.8077 ± 0.1744

=== COARSE SUMMARY ===
Node 0: acceptance=0.167
Node 1: acceptance=0.400
Node 2: acceptance=0.250
Node 3: acceptance=0.143
Node 4: acceptance=0.222
Node 5: acceptance=0.200
Node 6: acceptance=0.083
Node 7: acceptance=0.091
Node 8: acceptance=0.143
Node 9: acceptance=0.364
Node 10: acceptance=0.250
Node 11: acceptance=0.083
Node 12: acceptance=0.250
Node 13: acceptance=0.111
Node 14: acceptance=0.214
Node 15: acceptance=0.222
Node 16: acceptance=0.143
Node 17: acceptance=0.375
Node 18: acceptance=0.250
Node 19: acceptance=0.500

Performance Summary:
  - Sketching time: 18.452s (98.6%)
  - Filtering time: 0.021s (0.1%)
  - Aggregation time: 0.240s (1.3%)
  - Total time: 18.713s
  - Mean acceptance rate: 0.223

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
