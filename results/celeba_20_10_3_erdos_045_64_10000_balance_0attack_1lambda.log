Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8374 ± 0.0803
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
Round 002: test acc mean=0.5164 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.7728 ± 0.0665
         : individual accs = ['0.528947', '0.508636', '0.494232', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (557, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
Round 003: test acc mean=0.5254 ± 0.0232 | min=0.4911 max=0.5789
         : test loss mean=0.6754 ± 0.0474
         : individual accs = ['0.578947', '0.511226', '0.493345', '0.528497', '0.539683', '0.557205', '0.530131', '0.503993', '0.562500', '0.491135', '0.527972', '0.509333', '0.561632', '0.507759', '0.517794', '0.517031', '0.520797', '0.508400', '0.522040', '0.517967']
         : correct/total = [(660, 1140), (592, 1158), (556, 1127), (612, 1158), (612, 1134), (638, 1145), (607, 1145), (568, 1127), (639, 1136), (554, 1128), (604, 1144), (573, 1125), (647, 1152), (589, 1160), (582, 1124), (592, 1145), (601, 1154), (575, 1131), (604, 1157), (591, 1141)]
Round 004: test acc mean=0.5385 ± 0.0309 | min=0.4911 max=0.6189
         : test loss mean=0.6482 ± 0.0453
         : individual accs = ['0.541228', '0.509499', '0.503106', '0.530225', '0.527337', '0.564192', '0.567686', '0.510204', '0.562500', '0.491135', '0.618881', '0.569778', '0.585069', '0.508621', '0.543594', '0.521397', '0.533795', '0.509284', '0.535869', '0.537248']
         : correct/total = [(617, 1140), (590, 1158), (567, 1127), (614, 1158), (598, 1134), (646, 1145), (650, 1145), (575, 1127), (639, 1136), (554, 1128), (708, 1144), (641, 1125), (674, 1152), (590, 1160), (611, 1124), (597, 1145), (616, 1154), (576, 1131), (620, 1157), (613, 1141)]
Round 005: test acc mean=0.5782 ± 0.0565 | min=0.4956 max=0.7248
         : test loss mean=0.6097 ± 0.0395
         : individual accs = ['0.543860', '0.520725', '0.666371', '0.590674', '0.551146', '0.569432', '0.619214', '0.588287', '0.587148', '0.495567', '0.604895', '0.638222', '0.724826', '0.518103', '0.628114', '0.522271', '0.545927', '0.509284', '0.592048', '0.547765']
         : correct/total = [(620, 1140), (603, 1158), (751, 1127), (684, 1158), (625, 1134), (652, 1145), (709, 1145), (663, 1127), (667, 1136), (559, 1128), (692, 1144), (718, 1125), (835, 1152), (601, 1160), (706, 1124), (598, 1145), (630, 1154), (576, 1131), (685, 1157), (625, 1141)]
Round 006: test acc mean=0.6968 ± 0.0683 | min=0.5691 max=0.8264
         : test loss mean=0.5461 ± 0.0308
         : individual accs = ['0.717544', '0.569085', '0.694765', '0.782383', '0.593474', '0.760699', '0.709170', '0.755102', '0.683099', '0.684397', '0.779720', '0.697778', '0.826389', '0.734483', '0.674377', '0.641921', '0.659445', '0.572944', '0.648228', '0.751096']
         : correct/total = [(818, 1140), (659, 1158), (783, 1127), (906, 1158), (673, 1134), (871, 1145), (812, 1145), (851, 1127), (776, 1136), (772, 1128), (892, 1144), (785, 1125), (952, 1152), (852, 1160), (758, 1124), (735, 1145), (761, 1154), (648, 1131), (750, 1157), (857, 1141)]
Round 007: test acc mean=0.7568 ± 0.0544 | min=0.6401 max=0.8409
         : test loss mean=0.5097 ± 0.0297
         : individual accs = ['0.785088', '0.681347', '0.739130', '0.792746', '0.722222', '0.765066', '0.783406', '0.788820', '0.794894', '0.640071', '0.779720', '0.840889', '0.837674', '0.770690', '0.712633', '0.702183', '0.745234', '0.657825', '0.787381', '0.809816']
         : correct/total = [(895, 1140), (789, 1158), (833, 1127), (918, 1158), (819, 1134), (876, 1145), (897, 1145), (889, 1127), (903, 1136), (722, 1128), (892, 1144), (946, 1125), (965, 1152), (894, 1160), (801, 1124), (804, 1145), (860, 1154), (744, 1131), (911, 1157), (924, 1141)]
Round 008: test acc mean=0.8071 ± 0.0338 | min=0.7154 max=0.8672
         : test loss mean=0.4800 ± 0.0272
         : individual accs = ['0.798246', '0.789292', '0.784383', '0.829016', '0.796296', '0.786900', '0.844541', '0.850932', '0.781690', '0.715426', '0.831294', '0.820444', '0.867188', '0.855172', '0.791815', '0.779039', '0.805026', '0.788683', '0.827139', '0.800175']
         : correct/total = [(910, 1140), (914, 1158), (884, 1127), (960, 1158), (903, 1134), (901, 1145), (967, 1145), (959, 1127), (888, 1136), (807, 1128), (951, 1144), (923, 1125), (999, 1152), (992, 1160), (890, 1124), (892, 1145), (929, 1154), (892, 1131), (957, 1157), (913, 1141)]
Round 009: test acc mean=0.8181 ± 0.0277 | min=0.7493 max=0.8534
         : test loss mean=0.4565 ± 0.0219
         : individual accs = ['0.824561', '0.835060', '0.803017', '0.820380', '0.780423', '0.835808', '0.836681', '0.835847', '0.804577', '0.819149', '0.832168', '0.852444', '0.839410', '0.853448', '0.807829', '0.749345', '0.763432', '0.795756', '0.828003', '0.843996']
         : correct/total = [(940, 1140), (967, 1158), (905, 1127), (950, 1158), (885, 1134), (957, 1145), (958, 1145), (942, 1127), (914, 1136), (924, 1128), (952, 1144), (959, 1125), (967, 1152), (990, 1160), (908, 1124), (858, 1145), (881, 1154), (900, 1131), (958, 1157), (963, 1141)]
Round 010: test acc mean=0.8474 ± 0.0250 | min=0.7851 max=0.9049
         : test loss mean=0.4260 ± 0.0284
         : individual accs = ['0.849123', '0.862694', '0.834073', '0.837651', '0.819224', '0.862009', '0.852402', '0.860692', '0.835387', '0.855496', '0.855769', '0.904889', '0.893229', '0.857759', '0.850534', '0.841921', '0.828423', '0.785146', '0.839239', '0.822962']
         : correct/total = [(968, 1140), (999, 1158), (940, 1127), (970, 1158), (929, 1134), (987, 1145), (976, 1145), (970, 1127), (949, 1136), (965, 1128), (979, 1144), (1018, 1125), (1029, 1152), (995, 1160), (956, 1124), (964, 1145), (956, 1154), (888, 1131), (971, 1157), (939, 1141)]

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Overall test accuracy: mean=0.8474 ± 0.0250

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.535s (42.2%)
  - Filtering time: 1.673s (46.0%)
  - Aggregation time: 0.427s (11.7%)
  - Total time: 3.635s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
