Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Degree statistics: avg=9.90, min=7, max=14
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6833 ± 0.0429 | min=0.5520 max=0.7315
         : test loss mean=0.6808 ± 0.0036
         : individual accs = ['0.708772', '0.660622', '0.621118', '0.719344', '0.552028', '0.672489', '0.676856', '0.621118', '0.731514', '0.711879', '0.678322', '0.723556', '0.700521', '0.714655', '0.675267', '0.702183', '0.706239', '0.702918', '0.722558', '0.664330']
         : correct/total = [(808, 1140), (765, 1158), (700, 1127), (833, 1158), (626, 1134), (770, 1145), (775, 1145), (700, 1127), (831, 1136), (803, 1128), (776, 1144), (814, 1125), (807, 1152), (829, 1160), (759, 1124), (804, 1145), (815, 1154), (795, 1131), (836, 1157), (758, 1141)]
Round 002: test acc mean=0.6443 ± 0.0502 | min=0.5238 max=0.7118
         : test loss mean=0.6765 ± 0.0061
         : individual accs = ['0.650877', '0.670121', '0.652174', '0.624352', '0.523810', '0.527511', '0.624454', '0.664596', '0.644366', '0.641844', '0.680944', '0.690667', '0.711806', '0.650862', '0.568505', '0.695197', '0.668111', '0.630416', '0.691443', '0.674847']
         : correct/total = [(742, 1140), (776, 1158), (735, 1127), (723, 1158), (594, 1134), (604, 1145), (715, 1145), (749, 1127), (732, 1136), (724, 1128), (779, 1144), (777, 1125), (820, 1152), (755, 1160), (639, 1124), (796, 1145), (771, 1154), (713, 1131), (800, 1157), (770, 1141)]
Round 003: test acc mean=0.6387 ± 0.0525 | min=0.5196 max=0.7035
         : test loss mean=0.6653 ± 0.0101
         : individual accs = ['0.593860', '0.664940', '0.662822', '0.686528', '0.539683', '0.571179', '0.592140', '0.613132', '0.677817', '0.678191', '0.666958', '0.674667', '0.656250', '0.696552', '0.519573', '0.666376', '0.666378', '0.582670', '0.703544', '0.659947']
         : correct/total = [(677, 1140), (770, 1158), (747, 1127), (795, 1158), (612, 1134), (654, 1145), (678, 1145), (691, 1127), (770, 1136), (765, 1128), (763, 1144), (759, 1125), (756, 1152), (808, 1160), (584, 1124), (763, 1145), (769, 1154), (659, 1131), (814, 1157), (753, 1141)]
Round 004: test acc mean=0.6802 ± 0.0328 | min=0.6094 max=0.7211
         : test loss mean=0.6313 ± 0.0148
         : individual accs = ['0.673684', '0.685665', '0.673469', '0.721071', '0.643739', '0.661135', '0.651528', '0.629104', '0.702465', '0.688830', '0.714161', '0.718222', '0.703993', '0.693103', '0.609431', '0.700437', '0.720971', '0.666667', '0.713915', '0.632778']
         : correct/total = [(768, 1140), (794, 1158), (759, 1127), (835, 1158), (730, 1134), (757, 1145), (746, 1145), (709, 1127), (798, 1136), (777, 1128), (817, 1144), (808, 1125), (811, 1152), (804, 1160), (685, 1124), (802, 1145), (832, 1154), (754, 1131), (826, 1157), (722, 1141)]
Round 005: test acc mean=0.7437 ± 0.0189 | min=0.6957 max=0.7736
         : test loss mean=0.5602 ± 0.0194
         : individual accs = ['0.735965', '0.752159', '0.695652', '0.765112', '0.727513', '0.756332', '0.762445', '0.734694', '0.758803', '0.733156', '0.773601', '0.756444', '0.732639', '0.759483', '0.710854', '0.760699', '0.744367', '0.744474', '0.740709', '0.728309']
         : correct/total = [(839, 1140), (871, 1158), (784, 1127), (886, 1158), (825, 1134), (866, 1145), (873, 1145), (828, 1127), (862, 1136), (827, 1128), (885, 1144), (851, 1125), (844, 1152), (881, 1160), (799, 1124), (871, 1145), (859, 1154), (842, 1131), (857, 1157), (831, 1141)]
Round 006: test acc mean=0.7808 ± 0.0202 | min=0.7339 max=0.8117
         : test loss mean=0.4829 ± 0.0201
         : individual accs = ['0.757895', '0.795337', '0.781721', '0.811744', '0.768078', '0.804367', '0.782533', '0.747116', '0.809859', '0.771277', '0.799825', '0.783111', '0.788194', '0.787069', '0.768683', '0.787773', '0.798960', '0.733864', '0.780467', '0.758983']
         : correct/total = [(864, 1140), (921, 1158), (881, 1127), (940, 1158), (871, 1134), (921, 1145), (896, 1145), (842, 1127), (920, 1136), (870, 1128), (915, 1144), (881, 1125), (908, 1152), (913, 1160), (864, 1124), (902, 1145), (922, 1154), (830, 1131), (903, 1157), (866, 1141)]
Round 007: test acc mean=0.8284 ± 0.0135 | min=0.8051 max=0.8507
         : test loss mean=0.3984 ± 0.0152
         : individual accs = ['0.812281', '0.845423', '0.834073', '0.835060', '0.805115', '0.850655', '0.837555', '0.820763', '0.830986', '0.839539', '0.843531', '0.850667', '0.819444', '0.837931', '0.816726', '0.817467', '0.813692', '0.813439', '0.816768', '0.827344']
         : correct/total = [(926, 1140), (979, 1158), (940, 1127), (967, 1158), (913, 1134), (974, 1145), (959, 1145), (925, 1127), (944, 1136), (947, 1128), (965, 1144), (957, 1125), (944, 1152), (972, 1160), (918, 1124), (936, 1145), (939, 1154), (920, 1131), (945, 1157), (944, 1141)]
Round 008: test acc mean=0.8565 ± 0.0101 | min=0.8332 max=0.8742
         : test loss mean=0.3363 ± 0.0102
         : individual accs = ['0.851754', '0.869603', '0.851819', '0.862694', '0.839506', '0.874236', '0.859389', '0.851819', '0.858275', '0.860816', '0.868007', '0.863111', '0.850694', '0.859483', '0.866548', '0.848035', '0.861352', '0.843501', '0.833189', '0.857143']
         : correct/total = [(971, 1140), (1007, 1158), (960, 1127), (999, 1158), (952, 1134), (1001, 1145), (984, 1145), (960, 1127), (975, 1136), (971, 1128), (993, 1144), (971, 1125), (980, 1152), (997, 1160), (974, 1124), (971, 1145), (994, 1154), (954, 1131), (964, 1157), (978, 1141)]
Round 009: test acc mean=0.8702 ± 0.0134 | min=0.8418 max=0.8921
         : test loss mean=0.3080 ± 0.0226
         : individual accs = ['0.871930', '0.892055', '0.849157', '0.878238', '0.860670', '0.888210', '0.879476', '0.873114', '0.872359', '0.879433', '0.881119', '0.883556', '0.867188', '0.875000', '0.863879', '0.850655', '0.868284', '0.850575', '0.841832', '0.878177']
         : correct/total = [(994, 1140), (1033, 1158), (957, 1127), (1017, 1158), (976, 1134), (1017, 1145), (1007, 1145), (984, 1127), (991, 1136), (992, 1128), (1008, 1144), (994, 1125), (999, 1152), (1015, 1160), (971, 1124), (974, 1145), (1002, 1154), (962, 1131), (974, 1157), (1002, 1141)]
Round 010: test acc mean=0.8822 ± 0.0090 | min=0.8617 max=0.8954
         : test loss mean=0.2853 ± 0.0152
         : individual accs = ['0.892105', '0.886010', '0.872227', '0.890328', '0.871252', '0.885590', '0.882969', '0.885537', '0.883803', '0.895390', '0.888986', '0.887111', '0.876736', '0.888793', '0.889680', '0.866376', '0.883882', '0.870027', '0.861711', '0.885188']
         : correct/total = [(1017, 1140), (1026, 1158), (983, 1127), (1031, 1158), (988, 1134), (1014, 1145), (1011, 1145), (998, 1127), (1004, 1136), (1010, 1128), (1017, 1144), (998, 1125), (1010, 1152), (1031, 1160), (1000, 1124), (992, 1145), (1020, 1154), (984, 1131), (997, 1157), (1010, 1141)]

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Overall test accuracy: mean=0.8822 ± 0.0090

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.041s (75.5%)
    - Aggregation: 0.013s (24.5%)
  TOTALS:
    - Total computation: 0.055s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.055s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.025s
  - Aggregation: 0.007s
  - Model transfer: 0.000s
  - Total per node: 0.032s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.505s
  - Total aggregation: 0.132s
  - Total model transfer: 0.000s
  - Grand total: 0.637s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
