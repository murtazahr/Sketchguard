Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4232 ± 0.0608 | min=0.3038 max=0.5223
         : test loss mean=3.7403 ± 0.0836
         : individual accs = ['0.522287', '0.455151', '0.457731', '0.411032', '0.494011', '0.352694', '0.410207', '0.429984', '0.413982', '0.397942', '0.315955', '0.484617', '0.421940', '0.303788', '0.466930', '0.453959', '0.442572', '0.507530', '0.320274', '0.402132']
         : correct/total = [(2156, 4128), (1913, 4203), (1868, 4081), (1781, 4333), (2021, 4091), (1512, 4287), (1720, 4193), (1870, 4349), (1735, 4191), (1702, 4277), (1309, 4143), (2032, 4193), (1727, 4093), (1275, 4197), (1892, 4052), (1829, 4029), (1838, 4153), (2123, 4183), (1308, 4084), (1660, 4128)]
         : compromised: 0.4141, honest: 0.4293
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.833', 'Node 2: acc_rate=0.400']...
Round 002: test acc mean=0.6851 ± 0.0196 | min=0.6445 max=0.7146
         : test loss mean=2.4936 ± 0.8076
         : individual accs = ['0.714632', '0.668332', '0.689782', '0.707824', '0.691762', '0.700723', '0.685190', '0.699931', '0.702935', '0.691372', '0.644461', '0.645838', '0.685805', '0.672623', '0.685341', '0.692480', '0.714183', '0.660770', '0.678746', '0.669574']
         : correct/total = [(2950, 4128), (2809, 4203), (2815, 4081), (3067, 4333), (2830, 4091), (3004, 4287), (2873, 4193), (3044, 4349), (2946, 4191), (2957, 4277), (2670, 4143), (2708, 4193), (2807, 4093), (2823, 4197), (2777, 4052), (2790, 4029), (2966, 4153), (2764, 4183), (2772, 4084), (2764, 4128)]
         : compromised: 0.6748, honest: 0.6920
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.833', 'Node 2: acc_rate=0.400']...
Round 003: test acc mean=0.7353 ± 0.0419 | min=0.6330 max=0.7833
         : test loss mean=1.8046 ± 0.8541
         : individual accs = ['0.777132', '0.683084', '0.749816', '0.757904', '0.771694', '0.774434', '0.759599', '0.765463', '0.783345', '0.750526', '0.718320', '0.632960', '0.720010', '0.725518', '0.689289', '0.751055', '0.777992', '0.688023', '0.666748', '0.763324']
         : correct/total = [(3208, 4128), (2871, 4203), (3060, 4081), (3284, 4333), (3157, 4091), (3320, 4287), (3185, 4193), (3329, 4349), (3283, 4191), (3210, 4277), (2976, 4143), (2654, 4193), (2947, 4093), (3045, 4197), (2793, 4052), (3026, 4029), (3231, 4153), (2878, 4183), (2723, 4084), (3151, 4128)]
         : compromised: 0.6975, honest: 0.7605
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.833', 'Node 2: acc_rate=0.400']...
Round 004: test acc mean=0.7723 ± 0.0321 | min=0.6921 max=0.8079
         : test loss mean=1.3243 ± 0.6649
         : individual accs = ['0.794331', '0.692125', '0.778486', '0.796907', '0.797604', '0.800327', '0.785595', '0.804323', '0.807922', '0.790274', '0.761525', '0.726210', '0.734669', '0.789850', '0.731244', '0.793497', '0.793884', '0.749223', '0.732615', '0.784399']
         : correct/total = [(3279, 4128), (2909, 4203), (3177, 4081), (3453, 4333), (3263, 4091), (3431, 4287), (3294, 4193), (3498, 4349), (3386, 4191), (3380, 4277), (3155, 4143), (3045, 4193), (3007, 4093), (3315, 4197), (2963, 4052), (3197, 4029), (3297, 4153), (3134, 4183), (2992, 4084), (3238, 4128)]
         : compromised: 0.7445, honest: 0.7907
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.792', 'Node 2: acc_rate=0.400']...
Round 005: test acc mean=0.7939 ± 0.0227 | min=0.7204 max=0.8244
         : test loss mean=0.9855 ± 0.3971
         : individual accs = ['0.806202', '0.720438', '0.792943', '0.801985', '0.811538', '0.812923', '0.799666', '0.811911', '0.824386', '0.801730', '0.785663', '0.781302', '0.783044', '0.786752', '0.763080', '0.809630', '0.812425', '0.785800', '0.774486', '0.811289']
         : correct/total = [(3328, 4128), (3028, 4203), (3236, 4081), (3475, 4333), (3320, 4091), (3485, 4287), (3353, 4193), (3531, 4349), (3455, 4191), (3429, 4277), (3255, 4143), (3276, 4193), (3205, 4093), (3302, 4197), (3092, 4052), (3262, 4029), (3374, 4153), (3287, 4183), (3163, 4084), (3349, 4128)]
         : compromised: 0.7760, honest: 0.8058
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.767', 'Node 2: acc_rate=0.400']...
Round 006: test acc mean=0.8134 ± 0.0109 | min=0.7866 max=0.8296
         : test loss mean=0.7381 ± 0.1855
         : individual accs = ['0.809835', '0.786581', '0.800784', '0.820448', '0.810560', '0.822487', '0.819223', '0.829616', '0.829158', '0.817863', '0.802076', '0.817553', '0.799658', '0.822969', '0.804294', '0.815091', '0.825909', '0.818312', '0.805093', '0.811047']
         : correct/total = [(3343, 4128), (3306, 4203), (3268, 4081), (3555, 4333), (3316, 4091), (3526, 4287), (3435, 4193), (3608, 4349), (3475, 4191), (3498, 4277), (3323, 4143), (3428, 4193), (3273, 4093), (3454, 4197), (3259, 4052), (3284, 4029), (3430, 4153), (3423, 4183), (3288, 4084), (3348, 4128)]
         : compromised: 0.8096, honest: 0.8160
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.750', 'Node 2: acc_rate=0.400']...
Round 007: test acc mean=0.8239 ± 0.0096 | min=0.8062 max=0.8373
         : test loss mean=0.6473 ± 0.1398
         : individual accs = ['0.824370', '0.817749', '0.806175', '0.834757', '0.825226', '0.825286', '0.829001', '0.836514', '0.831067', '0.829787', '0.809317', '0.837348', '0.810652', '0.830117', '0.808736', '0.820551', '0.834818', '0.831222', '0.818805', '0.815649']
         : correct/total = [(3403, 4128), (3437, 4203), (3290, 4081), (3617, 4333), (3376, 4091), (3538, 4287), (3476, 4193), (3638, 4349), (3483, 4191), (3549, 4277), (3353, 4143), (3511, 4193), (3318, 4093), (3484, 4197), (3277, 4052), (3306, 4029), (3467, 4153), (3477, 4183), (3344, 4084), (3367, 4128)]
         : compromised: 0.8225, honest: 0.8248
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.738', 'Node 2: acc_rate=0.400']...
Round 008: test acc mean=0.8267 ± 0.0085 | min=0.8045 max=0.8416
         : test loss mean=0.5889 ± 0.0929
         : individual accs = ['0.824855', '0.822746', '0.804460', '0.835449', '0.828893', '0.833683', '0.829001', '0.841573', '0.832737', '0.836100', '0.814386', '0.832340', '0.823601', '0.827258', '0.829467', '0.824522', '0.828798', '0.829548', '0.823457', '0.811289']
         : correct/total = [(3405, 4128), (3458, 4203), (3283, 4081), (3620, 4333), (3391, 4091), (3574, 4287), (3476, 4193), (3660, 4349), (3490, 4191), (3576, 4277), (3374, 4143), (3490, 4193), (3371, 4093), (3472, 4197), (3361, 4052), (3322, 4029), (3442, 4153), (3470, 4183), (3363, 4084), (3349, 4128)]
         : compromised: 0.8278, honest: 0.8260
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.729', 'Node 2: acc_rate=0.400']...
Round 009: test acc mean=0.8357 ± 0.0060 | min=0.8263 max=0.8459
         : test loss mean=0.5518 ± 0.0718
         : individual accs = ['0.830426', '0.832739', '0.826268', '0.842834', '0.828648', '0.835316', '0.841641', '0.843642', '0.845860', '0.845452', '0.830075', '0.836632', '0.834351', '0.837503', '0.832675', '0.827501', '0.830484', '0.842458', '0.835945', '0.833091']
         : correct/total = [(3428, 4128), (3500, 4203), (3372, 4081), (3652, 4333), (3390, 4091), (3581, 4287), (3529, 4193), (3669, 4349), (3545, 4191), (3616, 4277), (3439, 4143), (3508, 4193), (3415, 4093), (3515, 4197), (3374, 4052), (3334, 4029), (3449, 4153), (3524, 4183), (3414, 4084), (3439, 4128)]
         : compromised: 0.8360, honest: 0.8355
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.722', 'Node 2: acc_rate=0.400']...
Round 010: test acc mean=0.8385 ± 0.0059 | min=0.8285 max=0.8492
         : test loss mean=0.5265 ± 0.0544
         : individual accs = ['0.835514', '0.839400', '0.828473', '0.844450', '0.834270', '0.836482', '0.842118', '0.845712', '0.849201', '0.846154', '0.832247', '0.840448', '0.834596', '0.842745', '0.835390', '0.840655', '0.832410', '0.846522', '0.830558', '0.833091']
         : correct/total = [(3449, 4128), (3528, 4203), (3381, 4081), (3659, 4333), (3413, 4091), (3586, 4287), (3531, 4193), (3678, 4349), (3559, 4191), (3619, 4277), (3448, 4143), (3524, 4193), (3416, 4093), (3537, 4197), (3385, 4052), (3387, 4029), (3457, 4153), (3541, 4183), (3392, 4084), (3439, 4128)]
         : compromised: 0.8383, honest: 0.8387
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.717', 'Node 2: acc_rate=0.400']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: directed_deviation, 40.0% compromised
Final accuracy - Compromised: 0.8383, Honest: 0.8387
Overall test accuracy: mean=0.8385 ± 0.0059

=== COARSE SUMMARY ===
Node 0: acceptance=0.833
Node 1: acceptance=0.717
Node 2: acceptance=0.400
Node 3: acceptance=0.500
Node 4: acceptance=0.250
Node 5: acceptance=0.200
Node 6: acceptance=0.600
Node 7: acceptance=0.600
Node 8: acceptance=0.500
Node 9: acceptance=0.667
Node 10: acceptance=0.500
Node 11: acceptance=0.357
Node 12: acceptance=0.671
Node 13: acceptance=0.500
Node 14: acceptance=0.429
Node 15: acceptance=0.333
Node 16: acceptance=0.200
Node 17: acceptance=0.480
Node 18: acceptance=0.625
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 17.415s (98.7%)
  - Filtering time: 0.016s (0.1%)
  - Aggregation time: 0.213s (1.2%)
  - Total time: 17.644s
  - Mean acceptance rate: 0.518

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
