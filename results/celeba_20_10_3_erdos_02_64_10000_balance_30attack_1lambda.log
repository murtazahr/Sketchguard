Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0175 | min=0.4838 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.543035', '0.528497', '0.522046', '0.514410', '0.483843', '0.505768', '0.562500', '0.491135', '0.526224', '0.493333', '0.525174', '0.499138', '0.513345', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (612, 1127), (612, 1158), (592, 1134), (589, 1145), (554, 1145), (570, 1127), (639, 1136), (554, 1128), (602, 1144), (555, 1125), (605, 1152), (579, 1160), (577, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5138, honest: 0.5175
Round 002: test acc mean=0.5026 ± 0.0238 | min=0.4278 max=0.5467
         : test loss mean=5.4330 ± 6.4794
         : individual accs = ['0.528947', '0.508636', '0.528838', '0.481865', '0.498236', '0.479476', '0.546725', '0.501331', '0.427817', '0.491135', '0.512238', '0.506667', '0.511285', '0.501724', '0.508897', '0.491703', '0.500000', '0.486295', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (596, 1127), (558, 1158), (565, 1134), (549, 1145), (626, 1145), (565, 1127), (486, 1136), (554, 1128), (586, 1144), (570, 1125), (589, 1152), (582, 1160), (572, 1124), (563, 1145), (577, 1154), (550, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5016, honest: 0.5030
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8545 ± 0.1695
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 004: test acc mean=0.5745 ± 0.0501 | min=0.5086 max=0.7202
         : test loss mean=2.6154 ± 2.1042
         : individual accs = ['0.603509', '0.508636', '0.588287', '0.720207', '0.631393', '0.551092', '0.581659', '0.511091', '0.600352', '0.515957', '0.609266', '0.584000', '0.578125', '0.586207', '0.521352', '0.571179', '0.577123', '0.610964', '0.522040', '0.517967']
         : correct/total = [(688, 1140), (589, 1158), (663, 1127), (834, 1158), (716, 1134), (631, 1145), (666, 1145), (576, 1127), (682, 1136), (582, 1128), (697, 1144), (657, 1125), (666, 1152), (680, 1160), (586, 1124), (654, 1145), (666, 1154), (691, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5616, honest: 0.5800
Round 005: test acc mean=0.5562 ± 0.0833 | min=0.4933 max=0.7940
         : test loss mean=0.8182 ± 0.1755
         : individual accs = ['0.528947', '0.724525', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.712766', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.516464', '0.508400', '0.605013', '0.794040']
         : correct/total = [(603, 1140), (839, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (804, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (596, 1154), (575, 1131), (700, 1157), (906, 1141)]
         : compromised: 0.5292, honest: 0.5678
Round 006: test acc mean=0.6738 ± 0.0799 | min=0.5086 max=0.8183
         : test loss mean=1.8443 ± 1.4794
         : individual accs = ['0.773684', '0.508636', '0.635315', '0.772884', '0.738095', '0.677729', '0.818341', '0.621118', '0.633803', '0.735816', '0.725524', '0.661333', '0.708333', '0.718966', '0.591637', '0.682969', '0.616118', '0.724138', '0.522040', '0.609115']
         : correct/total = [(882, 1140), (589, 1158), (716, 1127), (895, 1158), (837, 1134), (776, 1145), (937, 1145), (700, 1127), (720, 1136), (830, 1128), (830, 1144), (744, 1125), (816, 1152), (834, 1160), (665, 1124), (782, 1145), (711, 1154), (819, 1131), (604, 1157), (695, 1141)]
         : compromised: 0.6571, honest: 0.6809
Round 007: test acc mean=0.5810 ± 0.1301 | min=0.4933 max=0.8861
         : test loss mean=0.8350 ± 0.3187
         : individual accs = ['0.528947', '0.854922', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.868794', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.722558', '0.886065']
         : correct/total = [(603, 1140), (990, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (980, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (836, 1157), (1011, 1141)]
         : compromised: 0.5488, honest: 0.5948
Round 008: test acc mean=0.7267 ± 0.0944 | min=0.5086 max=0.8524
         : test loss mean=1.5835 ± 1.3672
         : individual accs = ['0.730702', '0.508636', '0.658385', '0.849741', '0.783069', '0.751965', '0.852402', '0.729370', '0.654049', '0.809397', '0.824301', '0.727111', '0.823785', '0.819828', '0.642349', '0.737118', '0.682842', '0.719717', '0.522040', '0.706398']
         : correct/total = [(833, 1140), (589, 1158), (742, 1127), (984, 1158), (888, 1134), (861, 1145), (976, 1145), (822, 1127), (743, 1136), (913, 1128), (943, 1144), (818, 1125), (949, 1152), (951, 1160), (722, 1124), (844, 1145), (788, 1154), (814, 1131), (604, 1157), (806, 1141)]
         : compromised: 0.7133, honest: 0.7324
Round 009: test acc mean=0.5879 ± 0.1412 | min=0.4933 max=0.9053
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.887737', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.854610', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.822818', '0.905346']
         : correct/total = [(603, 1140), (1028, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (964, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (952, 1157), (1033, 1141)]
         : compromised: 0.5655, honest: 0.5975
Round 010: test acc mean=0.7483 ± 0.1146 | min=0.5086 max=0.8900
         : test loss mean=nan ± nan
         : individual accs = ['0.793860', '0.508636', '0.716060', '0.779793', '0.522046', '0.793886', '0.889956', '0.791482', '0.677817', '0.837766', '0.868007', '0.722667', '0.855035', '0.858621', '0.704626', '0.770306', '0.692374', '0.784262', '0.522040', '0.876424']
         : correct/total = [(905, 1140), (589, 1158), (807, 1127), (903, 1158), (592, 1134), (909, 1145), (1019, 1145), (892, 1127), (770, 1136), (945, 1128), (993, 1144), (813, 1125), (985, 1152), (996, 1160), (792, 1124), (882, 1145), (799, 1154), (887, 1131), (604, 1157), (1000, 1141)]
         : compromised: 0.7531, honest: 0.7462

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 30.0% compromised
Final accuracy - Compromised: 0.7531, Honest: 0.7462
Overall test accuracy: mean=0.7483 ± 0.1146

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.746s (38.5%)
  - Filtering time: 0.880s (45.5%)
  - Aggregation time: 0.310s (16.0%)
  - Total time: 1.936s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
