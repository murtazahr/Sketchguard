Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 002: test acc mean=0.5032 ± 0.0263 | min=0.4633 max=0.5731
         : test loss mean=6.2513 ± 4.0017
         : individual accs = ['0.556140', '0.498273', '0.498669', '0.491364', '0.467372', '0.506550', '0.511790', '0.496894', '0.573063', '0.513298', '0.520979', '0.499556', '0.478299', '0.510345', '0.482206', '0.495197', '0.528596', '0.493369', '0.463267', '0.478528']
         : correct/total = [(634, 1140), (577, 1158), (562, 1127), (569, 1158), (530, 1134), (580, 1145), (586, 1145), (560, 1127), (651, 1136), (579, 1128), (596, 1144), (562, 1125), (551, 1152), (592, 1160), (542, 1124), (567, 1145), (610, 1154), (558, 1131), (536, 1157), (546, 1141)]
         : compromised: 0.5009, honest: 0.5123
Round 003: test acc mean=0.4949 ± 0.0182 | min=0.4711 max=0.5343
         : test loss mean=0.7965 ± 0.1483
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.528497', '0.477954', '0.485590', '0.478603', '0.503993', '0.534331', '0.508865', '0.474650', '0.498667', '0.477431', '0.506897', '0.482206', '0.482969', '0.484402', '0.508400', '0.477960', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (612, 1158), (542, 1134), (556, 1145), (548, 1145), (568, 1127), (607, 1136), (574, 1128), (543, 1144), (561, 1125), (550, 1152), (588, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4976, honest: 0.4844
Round 004: test acc mean=0.5524 ± 0.0516 | min=0.4871 max=0.6710
         : test loss mean=11.8710 ± 8.5688
         : individual accs = ['0.528070', '0.670984', '0.494232', '0.552677', '0.522928', '0.529258', '0.513537', '0.496894', '0.559859', '0.624113', '0.540210', '0.487111', '0.523438', '0.524138', '0.579181', '0.614847', '0.517331', '0.642794', '0.605877', '0.519720']
         : correct/total = [(602, 1140), (777, 1158), (557, 1127), (640, 1158), (593, 1134), (606, 1145), (588, 1145), (560, 1127), (636, 1136), (704, 1128), (618, 1144), (548, 1125), (603, 1152), (608, 1160), (651, 1124), (704, 1145), (597, 1154), (727, 1131), (701, 1157), (593, 1141)]
         : compromised: 0.5614, honest: 0.5163
Round 005: test acc mean=0.5016 ± 0.0231 | min=0.4375 max=0.5371
         : test loss mean=0.7319 ± 0.0507
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.528497', '0.522046', '0.486463', '0.537118', '0.503993', '0.437500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.482206', '0.482969', '0.484402', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (557, 1145), (615, 1145), (568, 1127), (497, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5031, honest: 0.4954
Round 006: test acc mean=0.6098 ± 0.0749 | min=0.5156 max=0.7608
         : test loss mean=12.2067 ± 9.7852
         : individual accs = ['0.534211', '0.760794', '0.558119', '0.550950', '0.651675', '0.647162', '0.519651', '0.566992', '0.558099', '0.698582', '0.608392', '0.594667', '0.571181', '0.644828', '0.667260', '0.551092', '0.515598', '0.750663', '0.710458', '0.536372']
         : correct/total = [(609, 1140), (881, 1158), (629, 1127), (638, 1158), (739, 1134), (741, 1145), (595, 1145), (639, 1127), (634, 1136), (788, 1128), (696, 1144), (669, 1125), (658, 1152), (748, 1160), (750, 1124), (631, 1145), (595, 1154), (849, 1131), (822, 1157), (612, 1141)]
         : compromised: 0.6205, honest: 0.5671
Round 007: test acc mean=0.5029 ± 0.0215 | min=0.4375 max=0.5285
         : test loss mean=0.7190 ± 0.0371
         : individual accs = ['0.471053', '0.512090', '0.493345', '0.528497', '0.522046', '0.514410', '0.496943', '0.503993', '0.437500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.483096', '0.517031', '0.484402', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (593, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (569, 1145), (568, 1127), (497, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (543, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5047, honest: 0.4954
Round 008: test acc mean=0.6780 ± 0.0817 | min=0.5397 max=0.7841
         : test loss mean=8.4243 ± 7.3670
         : individual accs = ['0.619298', '0.784111', '0.678793', '0.647668', '0.755732', '0.765939', '0.539738', '0.597161', '0.579225', '0.773050', '0.738636', '0.625778', '0.724826', '0.630172', '0.706406', '0.753712', '0.571924', '0.759505', '0.762316', '0.546889']
         : correct/total = [(706, 1140), (908, 1158), (765, 1127), (750, 1158), (857, 1134), (877, 1145), (618, 1145), (673, 1127), (658, 1136), (872, 1128), (845, 1144), (704, 1125), (835, 1152), (731, 1160), (794, 1124), (863, 1145), (660, 1154), (859, 1131), (882, 1157), (624, 1141)]
         : compromised: 0.6885, honest: 0.6360
Round 009: test acc mean=0.5146 ± 0.0383 | min=0.4375 max=0.6070
         : test loss mean=0.7042 ± 0.0244
         : individual accs = ['0.471053', '0.511226', '0.508429', '0.528497', '0.587302', '0.514410', '0.478603', '0.560781', '0.437500', '0.491135', '0.537587', '0.498667', '0.537326', '0.506897', '0.482206', '0.606987', '0.484402', '0.509284', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (592, 1158), (573, 1127), (612, 1158), (666, 1134), (589, 1145), (548, 1145), (632, 1127), (497, 1136), (554, 1128), (615, 1144), (561, 1125), (619, 1152), (588, 1160), (542, 1124), (695, 1145), (559, 1154), (576, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5118, honest: 0.5259
Round 010: test acc mean=0.7092 ± 0.0673 | min=0.5329 max=0.8014
         : test loss mean=6.9081 ± 7.2420
         : individual accs = ['0.698246', '0.801382', '0.743567', '0.745250', '0.760141', '0.750218', '0.585153', '0.677906', '0.647887', '0.765071', '0.751748', '0.688889', '0.725694', '0.717241', '0.693950', '0.743231', '0.613518', '0.780725', '0.761452', '0.532866']
         : correct/total = [(796, 1140), (928, 1158), (838, 1127), (863, 1158), (862, 1134), (859, 1145), (670, 1145), (764, 1127), (736, 1136), (863, 1128), (860, 1144), (775, 1125), (836, 1152), (832, 1160), (780, 1124), (851, 1145), (708, 1154), (883, 1131), (881, 1157), (608, 1141)]
         : compromised: 0.7146, honest: 0.6875

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 80.0% compromised
Final accuracy - Compromised: 0.7146, Honest: 0.6875
Overall test accuracy: mean=0.7092 ± 0.0673

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.534s (41.7%)
  - Filtering time: 1.673s (45.5%)
  - Aggregation time: 0.468s (12.7%)
  - Total time: 3.674s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
