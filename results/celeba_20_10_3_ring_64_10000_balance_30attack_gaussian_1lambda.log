Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6241 ± 0.0576 | min=0.4948 max=0.7127
         : test loss mean=6538042.5404 ± 28498663.7743
         : individual accs = ['0.605263', '0.677893', '0.663709', '0.607945', '0.640212', '0.551092', '0.555459', '0.540373', '0.712148', '0.658688', '0.680070', '0.672889', '0.712674', '0.494828', '0.630783', '0.631441', '0.629983', '0.583554', '0.656007', '0.576687']
         : correct/total = [(690, 1140), (785, 1158), (748, 1127), (704, 1158), (726, 1134), (631, 1145), (636, 1145), (609, 1127), (809, 1136), (743, 1128), (778, 1144), (757, 1125), (821, 1152), (574, 1160), (709, 1124), (723, 1145), (727, 1154), (660, 1131), (759, 1157), (658, 1141)]
         : compromised: 0.6048, honest: 0.6323
Round 002: test acc mean=0.7127 ± 0.0577 | min=0.5069 max=0.7790
         : test loss mean=nan ± nan
         : individual accs = ['0.700877', '0.679620', '0.691216', '0.690846', '0.698413', '0.650655', '0.727511', '0.689441', '0.745599', '0.700355', '0.756119', '0.754667', '0.768229', '0.506897', '0.750890', '0.744105', '0.779029', '0.745358', '0.743302', '0.731814']
         : correct/total = [(799, 1140), (787, 1158), (779, 1127), (800, 1158), (792, 1134), (745, 1145), (833, 1145), (777, 1127), (847, 1136), (790, 1128), (865, 1144), (849, 1125), (885, 1152), (588, 1160), (844, 1124), (852, 1145), (899, 1154), (843, 1131), (860, 1157), (835, 1141)]
         : compromised: 0.6942, honest: 0.7207
Round 003: test acc mean=0.7847 ± 0.0729 | min=0.5069 max=0.8605
         : test loss mean=nan ± nan
         : individual accs = ['0.785965', '0.741796', '0.747116', '0.759067', '0.778660', '0.728384', '0.799127', '0.777285', '0.799296', '0.809397', '0.845280', '0.835556', '0.835938', '0.506897', '0.838078', '0.819214', '0.860485', '0.820513', '0.793431', '0.812445']
         : correct/total = [(896, 1140), (859, 1158), (842, 1127), (879, 1158), (883, 1134), (834, 1145), (915, 1145), (876, 1127), (908, 1136), (913, 1128), (967, 1144), (940, 1125), (963, 1152), (588, 1160), (942, 1124), (938, 1145), (993, 1154), (928, 1131), (918, 1157), (927, 1141)]
         : compromised: 0.7539, honest: 0.7979
Round 004: test acc mean=0.8238 ± 0.0784 | min=0.5069 max=0.8746
         : test loss mean=nan ± nan
         : individual accs = ['0.829825', '0.807427', '0.746229', '0.814335', '0.824515', '0.826201', '0.855895', '0.839397', '0.847711', '0.861702', '0.873252', '0.869333', '0.863715', '0.506897', '0.874555', '0.845415', '0.871750', '0.847922', '0.821089', '0.848379']
         : correct/total = [(946, 1140), (935, 1158), (841, 1127), (943, 1158), (935, 1134), (946, 1145), (980, 1145), (946, 1127), (963, 1136), (972, 1128), (999, 1144), (978, 1125), (995, 1152), (588, 1160), (983, 1124), (968, 1145), (1006, 1154), (959, 1131), (950, 1157), (968, 1141)]
         : compromised: 0.7901, honest: 0.8382
Round 005: test acc mean=0.8386 ± 0.0803 | min=0.5069 max=0.8951
         : test loss mean=nan ± nan
         : individual accs = ['0.825439', '0.858377', '0.797693', '0.853195', '0.850970', '0.834934', '0.869869', '0.867791', '0.832746', '0.843085', '0.893357', '0.870222', '0.877604', '0.506897', '0.889680', '0.867249', '0.895147', '0.877984', '0.812446', '0.847502']
         : correct/total = [(941, 1140), (994, 1158), (899, 1127), (988, 1158), (965, 1134), (956, 1145), (996, 1145), (978, 1127), (946, 1136), (951, 1128), (1022, 1144), (979, 1125), (1011, 1152), (588, 1160), (1000, 1124), (993, 1145), (1033, 1154), (993, 1131), (940, 1157), (967, 1141)]
         : compromised: 0.7999, honest: 0.8552
Round 006: test acc mean=0.8607 ± 0.0817 | min=0.5069 max=0.9021
         : test loss mean=nan ± nan
         : individual accs = ['0.871930', '0.876511', '0.864241', '0.879965', '0.873898', '0.878603', '0.882096', '0.880213', '0.882923', '0.866135', '0.890734', '0.890667', '0.883681', '0.506897', '0.886121', '0.872489', '0.902080', '0.886826', '0.861711', '0.876424']
         : correct/total = [(994, 1140), (1015, 1158), (974, 1127), (1019, 1158), (991, 1134), (1006, 1145), (1010, 1145), (992, 1127), (1003, 1136), (977, 1128), (1019, 1144), (1002, 1125), (1018, 1152), (588, 1160), (996, 1124), (999, 1145), (1041, 1154), (1003, 1131), (997, 1157), (1000, 1141)]
         : compromised: 0.8173, honest: 0.8793
Round 007: test acc mean=0.8689 ± 0.0835 | min=0.5069 max=0.9111
         : test loss mean=nan ± nan
         : individual accs = ['0.875439', '0.892055', '0.880213', '0.892055', '0.874780', '0.882096', '0.888210', '0.888199', '0.885563', '0.890957', '0.896853', '0.911111', '0.890625', '0.506897', '0.895018', '0.882096', '0.896880', '0.888594', '0.872083', '0.887818']
         : correct/total = [(998, 1140), (1033, 1158), (992, 1127), (1033, 1158), (992, 1134), (1010, 1145), (1017, 1145), (1001, 1127), (1006, 1136), (1005, 1128), (1026, 1144), (1025, 1125), (1026, 1152), (588, 1160), (1006, 1124), (1010, 1145), (1035, 1154), (1005, 1131), (1009, 1157), (1013, 1141)]
         : compromised: 0.8226, honest: 0.8887
Round 008: test acc mean=0.8684 ± 0.0837 | min=0.5069 max=0.9064
         : test loss mean=nan ± nan
         : individual accs = ['0.891228', '0.892919', '0.877551', '0.879965', '0.879189', '0.898690', '0.889083', '0.889086', '0.870599', '0.870567', '0.893357', '0.905778', '0.889757', '0.506897', '0.903915', '0.882096', '0.906412', '0.893015', '0.867761', '0.880806']
         : correct/total = [(1016, 1140), (1034, 1158), (989, 1127), (1019, 1158), (997, 1134), (1029, 1145), (1018, 1145), (1002, 1127), (989, 1136), (982, 1128), (1022, 1144), (1019, 1125), (1025, 1152), (588, 1160), (1016, 1124), (1010, 1145), (1046, 1154), (1010, 1131), (1004, 1157), (1005, 1141)]
         : compromised: 0.8267, honest: 0.8863
Round 009: test acc mean=0.8740 ± 0.0848 | min=0.5069 max=0.9057
         : test loss mean=nan ± nan
         : individual accs = ['0.894737', '0.894646', '0.888199', '0.902418', '0.889771', '0.905677', '0.896070', '0.901508', '0.888204', '0.893617', '0.895105', '0.903111', '0.897569', '0.506897', '0.902135', '0.888210', '0.900347', '0.883289', '0.861711', '0.886941']
         : correct/total = [(1020, 1140), (1036, 1158), (1001, 1127), (1045, 1158), (1009, 1134), (1037, 1145), (1026, 1145), (1016, 1127), (1009, 1136), (1008, 1128), (1024, 1144), (1016, 1125), (1034, 1152), (588, 1160), (1014, 1124), (1017, 1145), (1039, 1154), (999, 1131), (997, 1157), (1012, 1141)]
         : compromised: 0.8262, honest: 0.8945
Round 010: test acc mean=0.8772 ± 0.0854 | min=0.5069 max=0.9107
         : test loss mean=nan ± nan
         : individual accs = ['0.895614', '0.892055', '0.884650', '0.910190', '0.893298', '0.904803', '0.887336', '0.903283', '0.899648', '0.898936', '0.902098', '0.910222', '0.900174', '0.506897', '0.903025', '0.890830', '0.910745', '0.883289', '0.877269', '0.889571']
         : correct/total = [(1021, 1140), (1033, 1158), (997, 1127), (1054, 1158), (1013, 1134), (1036, 1145), (1016, 1145), (1018, 1127), (1022, 1136), (1014, 1128), (1032, 1144), (1024, 1125), (1037, 1152), (588, 1160), (1015, 1124), (1020, 1145), (1051, 1154), (999, 1131), (1015, 1157), (1015, 1141)]
         : compromised: 0.8292, honest: 0.8977

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.8292, Honest: 0.8977
Overall test accuracy: mean=0.8772 ± 0.0854

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=0.500
Node 5: acceptance=0.800
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=0.500
Node 12: acceptance=0.500
Node 13: acceptance=0.000
Node 14: acceptance=0.500
Node 15: acceptance=0.500
Node 16: acceptance=0.500
Node 17: acceptance=0.500
Node 18: acceptance=0.500
Node 19: acceptance=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.042s (64.8%)
    - Aggregation: 0.023s (35.2%)
  TOTALS:
    - Total computation: 0.065s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.065s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.019s
  - Aggregation: 0.012s
  - Model transfer: 0.000s
  - Total per node: 0.031s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.390s
  - Total aggregation: 0.230s
  - Total model transfer: 0.000s
  - Grand total: 0.620s
  - Mean acceptance rate: 0.690

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
