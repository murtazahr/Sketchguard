Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4840 ± 0.0397 | min=0.4193 max=0.5533
         : test loss mean=3.7502 ± 0.0277
         : individual accs = ['0.542636', '0.471092', '0.497672', '0.492730', '0.435101', '0.553301', '0.435965', '0.498046', '0.510379', '0.429273', '0.419261', '0.533747', '0.446860', '0.472719', '0.497532', '0.520477', '0.453889', '0.530481', '0.493144', '0.445494']
         : correct/total = [(2240, 4128), (1980, 4203), (2031, 4081), (2135, 4333), (1780, 4091), (2372, 4287), (1828, 4193), (2166, 4349), (2139, 4191), (1836, 4277), (1737, 4143), (2238, 4193), (1829, 4093), (1984, 4197), (2016, 4052), (2097, 4029), (1885, 4153), (2219, 4183), (2014, 4084), (1839, 4128)]
         : compromised: 0.5017, honest: 0.4663
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 002: test acc mean=0.6715 ± 0.0223 | min=0.6222 max=0.7049
         : test loss mean=3.3306 ± 0.1162
         : individual accs = ['0.685804', '0.669760', '0.639304', '0.704131', '0.675141', '0.704922', '0.622228', '0.667050', '0.664996', '0.703063', '0.672460', '0.688290', '0.684828', '0.658089', '0.689783', '0.666418', '0.636889', '0.644514', '0.681440', '0.671512']
         : correct/total = [(2831, 4128), (2815, 4203), (2609, 4081), (3051, 4333), (2762, 4091), (3022, 4287), (2609, 4193), (2901, 4349), (2787, 4191), (3007, 4277), (2786, 4143), (2886, 4193), (2803, 4093), (2762, 4197), (2795, 4052), (2685, 4029), (2645, 4153), (2696, 4183), (2783, 4084), (2772, 4128)]
         : compromised: 0.6727, honest: 0.6703
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 003: test acc mean=0.6805 ± 0.0332 | min=0.5976 max=0.7454
         : test loss mean=2.8477 ± 0.2463
         : individual accs = ['0.718750', '0.680228', '0.597648', '0.745442', '0.682474', '0.636342', '0.719294', '0.708669', '0.706753', '0.693944', '0.690321', '0.670165', '0.679208', '0.676197', '0.694472', '0.638124', '0.687696', '0.638059', '0.662586', '0.682655']
         : correct/total = [(2967, 4128), (2859, 4203), (2439, 4081), (3230, 4333), (2792, 4091), (2728, 4287), (3016, 4193), (3082, 4349), (2962, 4191), (2968, 4277), (2860, 4143), (2810, 4193), (2780, 4093), (2838, 4197), (2814, 4052), (2571, 4029), (2856, 4153), (2669, 4183), (2706, 4084), (2818, 4128)]
         : compromised: 0.6573, honest: 0.7036
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 004: test acc mean=0.6816 ± 0.0395 | min=0.6066 max=0.7365
         : test loss mean=2.0656 ± 0.2739
         : individual accs = ['0.710514', '0.665001', '0.618966', '0.736441', '0.736495', '0.620714', '0.726926', '0.718096', '0.735863', '0.715455', '0.676080', '0.639161', '0.606645', '0.674529', '0.671273', '0.690246', '0.695401', '0.670810', '0.650343', '0.672965']
         : correct/total = [(2933, 4128), (2795, 4203), (2526, 4081), (3191, 4333), (3013, 4091), (2661, 4287), (3048, 4193), (3123, 4349), (3084, 4191), (3060, 4277), (2801, 4143), (2680, 4193), (2483, 4093), (2831, 4197), (2720, 4052), (2781, 4029), (2888, 4153), (2806, 4183), (2656, 4084), (2778, 4128)]
         : compromised: 0.6508, honest: 0.7124
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 005: test acc mean=0.7311 ± 0.0245 | min=0.6807 max=0.7686
         : test loss mean=1.2676 ± 0.1587
         : individual accs = ['0.742975', '0.680704', '0.742955', '0.751904', '0.742361', '0.728015', '0.740758', '0.752587', '0.768552', '0.761983', '0.734733', '0.699261', '0.708771', '0.700262', '0.704837', '0.718044', '0.768601', '0.706909', '0.721352', '0.746851']
         : correct/total = [(3067, 4128), (2861, 4203), (3032, 4081), (3258, 4333), (3037, 4091), (3121, 4287), (3106, 4193), (3273, 4349), (3221, 4191), (3259, 4277), (3044, 4143), (2932, 4193), (2901, 4093), (2939, 4197), (2856, 4052), (2893, 4029), (3192, 4153), (2957, 4183), (2946, 4084), (3083, 4128)]
         : compromised: 0.7111, honest: 0.7511
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 006: test acc mean=0.7959 ± 0.0086 | min=0.7813 max=0.8115
         : test loss mean=0.7480 ± 0.0377
         : individual accs = ['0.784641', '0.786105', '0.800784', '0.801062', '0.784405', '0.800093', '0.797520', '0.811451', '0.805536', '0.806173', '0.795800', '0.790365', '0.781334', '0.796283', '0.803060', '0.794490', '0.809535', '0.788907', '0.787953', '0.792393']
         : correct/total = [(3239, 4128), (3304, 4203), (3268, 4081), (3471, 4333), (3209, 4091), (3430, 4287), (3344, 4193), (3529, 4349), (3376, 4191), (3448, 4277), (3297, 4143), (3314, 4193), (3198, 4093), (3342, 4197), (3254, 4052), (3201, 4029), (3362, 4153), (3300, 4183), (3218, 4084), (3271, 4128)]
         : compromised: 0.7929, honest: 0.7989
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 007: test acc mean=0.8224 ± 0.0048 | min=0.8135 max=0.8315
         : test loss mean=0.5770 ± 0.0214
         : individual accs = ['0.816860', '0.824649', '0.821367', '0.826217', '0.813493', '0.821554', '0.827570', '0.831456', '0.828203', '0.825345', '0.815834', '0.824469', '0.815294', '0.825590', '0.824778', '0.821544', '0.826150', '0.818790', '0.821988', '0.816860']
         : correct/total = [(3372, 4128), (3466, 4203), (3352, 4081), (3580, 4333), (3328, 4091), (3522, 4287), (3470, 4193), (3616, 4349), (3471, 4191), (3530, 4277), (3380, 4143), (3457, 4193), (3337, 4093), (3465, 4197), (3342, 4052), (3310, 4029), (3431, 4153), (3425, 4183), (3357, 4084), (3372, 4128)]
         : compromised: 0.8220, honest: 0.8228
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 008: test acc mean=0.8291 ± 0.0069 | min=0.8101 max=0.8418
         : test loss mean=0.5259 ± 0.0206
         : individual accs = ['0.825339', '0.829170', '0.827003', '0.834064', '0.819848', '0.837882', '0.835440', '0.833985', '0.830828', '0.833061', '0.819696', '0.832817', '0.822624', '0.828925', '0.841807', '0.829983', '0.828076', '0.830504', '0.831048', '0.810078']
         : correct/total = [(3407, 4128), (3485, 4203), (3375, 4081), (3614, 4333), (3354, 4091), (3592, 4287), (3503, 4193), (3627, 4349), (3482, 4191), (3563, 4277), (3396, 4143), (3492, 4193), (3367, 4093), (3479, 4197), (3411, 4052), (3344, 4029), (3439, 4153), (3474, 4183), (3394, 4084), (3344, 4128)]
         : compromised: 0.8312, honest: 0.8270
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 009: test acc mean=0.8409 ± 0.0050 | min=0.8323 max=0.8485
         : test loss mean=0.4883 ± 0.0174
         : individual accs = ['0.833818', '0.845824', '0.840725', '0.844680', '0.832315', '0.845346', '0.846172', '0.848011', '0.848485', '0.845219', '0.835144', '0.838779', '0.838016', '0.837503', '0.845755', '0.842641', '0.835541', '0.837437', '0.840842', '0.834787']
         : correct/total = [(3442, 4128), (3555, 4203), (3431, 4081), (3660, 4333), (3405, 4091), (3624, 4287), (3548, 4193), (3688, 4349), (3556, 4191), (3615, 4277), (3460, 4143), (3517, 4193), (3430, 4093), (3515, 4197), (3427, 4052), (3395, 4029), (3470, 4153), (3503, 4183), (3434, 4084), (3446, 4128)]
         : compromised: 0.8413, honest: 0.8404
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 010: test acc mean=0.8464 ± 0.0049 | min=0.8366 max=0.8549
         : test loss mean=0.4696 ± 0.0191
         : individual accs = ['0.840359', '0.854866', '0.843666', '0.849758', '0.837692', '0.843947', '0.847842', '0.851690', '0.852541', '0.848960', '0.836592', '0.842356', '0.844857', '0.849178', '0.850444', '0.849094', '0.846376', '0.851064', '0.846229', '0.841328']
         : correct/total = [(3469, 4128), (3593, 4203), (3443, 4081), (3682, 4333), (3427, 4091), (3618, 4287), (3555, 4193), (3704, 4349), (3573, 4191), (3631, 4277), (3466, 4143), (3532, 4193), (3458, 4093), (3564, 4197), (3446, 4052), (3421, 4029), (3515, 4153), (3560, 4183), (3456, 4084), (3473, 4128)]
         : compromised: 0.8476, honest: 0.8453
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.8476, Honest: 0.8453
Overall test accuracy: mean=0.8464 ± 0.0049

=== COARSE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.545
Node 2: acceptance=0.417
Node 3: acceptance=0.625
Node 4: acceptance=0.455
Node 5: acceptance=0.467
Node 6: acceptance=0.429
Node 7: acceptance=0.429
Node 8: acceptance=0.400
Node 9: acceptance=0.538
Node 10: acceptance=0.556
Node 11: acceptance=0.500
Node 12: acceptance=0.583
Node 13: acceptance=0.538
Node 14: acceptance=0.467
Node 15: acceptance=0.455
Node 16: acceptance=0.385
Node 17: acceptance=0.667
Node 18: acceptance=0.562
Node 19: acceptance=0.438

Performance Summary:
  - Sketching time: 16.071s (97.9%)
  - Filtering time: 0.024s (0.1%)
  - Aggregation time: 0.327s (2.0%)
  - Total time: 16.423s
  - Mean acceptance rate: 0.498

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
