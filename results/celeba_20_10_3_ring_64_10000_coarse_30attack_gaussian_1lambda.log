Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5176 ± 0.0164 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.547619', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (621, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5186
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.7476 ± 0.1561 | min=0.5009 max=0.9073
         : test loss mean=80.0808 ± 347.1074
         : individual accs = ['0.665789', '0.508636', '0.614907', '0.765112', '0.843034', '0.514410', '0.898690', '0.895297', '0.569542', '0.500887', '0.659091', '0.862222', '0.835938', '0.504310', '0.896797', '0.906550', '0.907279', '0.862953', '0.851340', '0.889571']
         : correct/total = [(759, 1140), (589, 1158), (693, 1127), (886, 1158), (956, 1134), (589, 1145), (1029, 1145), (1009, 1127), (647, 1136), (565, 1128), (754, 1144), (970, 1125), (963, 1152), (585, 1160), (1008, 1124), (1038, 1145), (1047, 1154), (976, 1131), (985, 1157), (1015, 1141)]
         : compromised: 0.7443, honest: 0.7490
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.6233 ± 0.1450 | min=0.4987 max=0.9211
         : test loss mean=nan ± nan
         : individual accs = ['0.921053', '0.761658', '0.669033', '0.845423', '0.522046', '0.533624', '0.521397', '0.880213', '0.653169', '0.672872', '0.859266', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1050, 1140), (882, 1158), (754, 1127), (979, 1158), (592, 1134), (611, 1145), (597, 1145), (992, 1127), (742, 1136), (759, 1128), (983, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5186, honest: 0.6682
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.6335 ± 0.1640 | min=0.4658 max=0.8886
         : test loss mean=861.0748 ± 1033.3285
         : individual accs = ['0.803509', '0.815199', '0.846495', '0.888601', '0.504409', '0.493450', '0.484716', '0.860692', '0.825704', '0.831560', '0.786713', '0.465778', '0.525174', '0.518966', '0.526690', '0.517031', '0.509532', '0.492485', '0.485739', '0.488168']
         : correct/total = [(916, 1140), (944, 1158), (954, 1127), (1029, 1158), (572, 1134), (565, 1145), (555, 1145), (970, 1127), (938, 1136), (938, 1128), (900, 1144), (524, 1125), (605, 1152), (602, 1160), (592, 1124), (592, 1145), (588, 1154), (557, 1131), (562, 1157), (557, 1141)]
         : compromised: 0.5071, honest: 0.6877
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.6575 ± 0.1745 | min=0.4788 max=0.9033
         : test loss mean=590.7020 ± 824.6349
         : individual accs = ['0.864912', '0.835060', '0.858030', '0.896373', '0.518519', '0.514410', '0.521397', '0.903283', '0.853873', '0.870567', '0.878497', '0.543111', '0.527778', '0.522414', '0.524021', '0.509170', '0.501733', '0.524315', '0.478825', '0.503067']
         : correct/total = [(986, 1140), (967, 1158), (967, 1127), (1038, 1158), (588, 1134), (589, 1145), (597, 1145), (1018, 1127), (970, 1136), (982, 1128), (1005, 1144), (611, 1125), (608, 1152), (606, 1160), (589, 1124), (583, 1145), (579, 1154), (593, 1131), (554, 1157), (574, 1141)]
         : compromised: 0.5153, honest: 0.7184
         : coarse stats = ['Node 0: acc_rate=0.800', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.6553 ± 0.1975 | min=0.4753 max=0.9173
         : test loss mean=1073.7747 ± 1356.0582
         : individual accs = ['0.878947', '0.869603', '0.896185', '0.901554', '0.475309', '0.485590', '0.506550', '0.909494', '0.917254', '0.898936', '0.900350', '0.496889', '0.519965', '0.506897', '0.517794', '0.496943', '0.485269', '0.484527', '0.477960', '0.479404']
         : correct/total = [(1002, 1140), (1007, 1158), (1010, 1127), (1044, 1158), (539, 1134), (556, 1145), (580, 1145), (1025, 1127), (1042, 1136), (1014, 1128), (1030, 1144), (559, 1125), (599, 1152), (588, 1160), (582, 1124), (569, 1145), (560, 1154), (548, 1131), (553, 1157), (547, 1141)]
         : compromised: 0.4988, honest: 0.7223
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.6637 ± 0.1990 | min=0.4774 max=0.9139
         : test loss mean=17924.2011 ± 49657.3718
         : individual accs = ['0.910526', '0.899827', '0.903283', '0.909326', '0.524691', '0.491703', '0.521397', '0.913931', '0.911092', '0.902482', '0.901224', '0.501333', '0.477431', '0.512069', '0.482206', '0.482969', '0.484402', '0.508400', '0.477960', '0.558282']
         : correct/total = [(1038, 1140), (1042, 1158), (1018, 1127), (1053, 1158), (595, 1134), (563, 1145), (597, 1145), (1030, 1127), (1035, 1136), (1018, 1128), (1031, 1144), (564, 1125), (550, 1152), (594, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (553, 1157), (637, 1141)]
         : compromised: 0.4916, honest: 0.7375
         : coarse stats = ['Node 0: acc_rate=0.714', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.6669 ± 0.1977 | min=0.4762 max=0.9219
         : test loss mean=289054.2845 ± 878135.1169
         : individual accs = ['0.914912', '0.906736', '0.906832', '0.905009', '0.522046', '0.526638', '0.521397', '0.921917', '0.911092', '0.907801', '0.893357', '0.501333', '0.477431', '0.514655', '0.515125', '0.512664', '0.493934', '0.491600', '0.476232', '0.517967']
         : correct/total = [(1043, 1140), (1050, 1158), (1022, 1127), (1048, 1158), (592, 1134), (603, 1145), (597, 1145), (1039, 1127), (1035, 1136), (1024, 1128), (1022, 1144), (564, 1125), (550, 1152), (597, 1160), (579, 1124), (587, 1145), (570, 1154), (556, 1131), (551, 1157), (591, 1141)]
         : compromised: 0.5003, honest: 0.7384
         : coarse stats = ['Node 0: acc_rate=0.688', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.6073 ± 0.1728 | min=0.4747 max=0.9085
         : test loss mean=179.1063 ± 775.8783
         : individual accs = ['0.905263', '0.900691', '0.900621', '0.528497', '0.535273', '0.560699', '0.521397', '0.503993', '0.908451', '0.906915', '0.474650', '0.508444', '0.478299', '0.519828', '0.482206', '0.523144', '0.519931', '0.491600', '0.477960', '0.497809']
         : correct/total = [(1032, 1140), (1043, 1158), (1015, 1127), (612, 1158), (607, 1134), (642, 1145), (597, 1145), (568, 1127), (1032, 1136), (1023, 1128), (543, 1144), (572, 1125), (551, 1152), (603, 1160), (542, 1124), (599, 1145), (600, 1154), (556, 1131), (553, 1157), (568, 1141)]
         : compromised: 0.5018, honest: 0.6525
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.6031 ± 0.1402 | min=0.4780 max=0.9119
         : test loss mean=92335.3919 ± 400791.1244
         : individual accs = ['0.905263', '0.911917', '0.493345', '0.632988', '0.789242', '0.524017', '0.759825', '0.508429', '0.562500', '0.491135', '0.677448', '0.751111', '0.536458', '0.509483', '0.482206', '0.524891', '0.525997', '0.504863', '0.477960', '0.492550']
         : correct/total = [(1032, 1140), (1056, 1158), (556, 1127), (733, 1158), (895, 1134), (600, 1145), (870, 1145), (573, 1127), (639, 1136), (554, 1128), (775, 1144), (845, 1125), (618, 1152), (591, 1160), (542, 1124), (601, 1145), (607, 1154), (571, 1131), (553, 1157), (562, 1141)]
         : compromised: 0.5058, honest: 0.6448
         : coarse stats = ['Node 0: acc_rate=0.650', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: coarse
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.5058, Honest: 0.6448
Overall test accuracy: mean=0.6031 ± 0.1402

=== COARSE SUMMARY ===
Node 0: acceptance=0.650
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=0.750
Node 4: acceptance=0.600
Node 5: acceptance=0.400
Node 6: acceptance=0.600
Node 7: acceptance=0.750
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=0.750
Node 11: acceptance=0.600
Node 12: acceptance=0.650
Node 13: acceptance=0.500
Node 14: acceptance=0.600
Node 15: acceptance=0.700
Node 16: acceptance=0.700
Node 17: acceptance=0.550
Node 18: acceptance=0.550
Node 19: acceptance=0.500

Performance Summary:
  - Sketching time: 0.042s (17.6%)
  - Filtering time: 0.003s (1.3%)
  - Aggregation time: 0.193s (81.1%)
  - Total time: 0.238s
  - Mean acceptance rate: 0.693

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
