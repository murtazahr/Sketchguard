Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 002: test acc mean=0.5018 ± 0.0260 | min=0.4498 max=0.5775
         : test loss mean=nan ± nan
         : individual accs = ['0.483333', '0.507772', '0.517303', '0.528497', '0.485891', '0.517031', '0.449782', '0.496007', '0.577465', '0.508865', '0.489510', '0.498667', '0.480903', '0.506897', '0.483096', '0.482969', '0.502600', '0.528736', '0.471910', '0.517967']
         : correct/total = [(551, 1140), (588, 1158), (583, 1127), (612, 1158), (551, 1134), (592, 1145), (515, 1145), (559, 1127), (656, 1136), (574, 1128), (560, 1144), (561, 1125), (554, 1152), (588, 1160), (543, 1124), (553, 1145), (580, 1154), (598, 1131), (546, 1157), (591, 1141)]
         : compromised: 0.5042, honest: 0.4920
Round 003: test acc mean=0.5078 ± 0.0220 | min=0.4746 max=0.5634
         : test loss mean=nan ± nan
         : individual accs = ['0.474561', '0.492228', '0.514641', '0.528497', '0.478836', '0.487336', '0.522271', '0.503993', '0.563380', '0.515957', '0.489510', '0.498667', '0.522569', '0.506897', '0.477758', '0.484716', '0.517331', '0.525199', '0.533276', '0.517967']
         : correct/total = [(541, 1140), (570, 1158), (580, 1127), (612, 1158), (543, 1134), (558, 1145), (598, 1145), (568, 1127), (640, 1136), (582, 1128), (560, 1144), (561, 1125), (602, 1152), (588, 1160), (537, 1124), (555, 1145), (597, 1154), (594, 1131), (617, 1157), (591, 1141)]
         : compromised: 0.5113, honest: 0.4937
Round 004: test acc mean=0.5076 ± 0.0211 | min=0.4773 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.515528', '0.528497', '0.522046', '0.508297', '0.492576', '0.495120', '0.562500', '0.512411', '0.477273', '0.498667', '0.521701', '0.506897', '0.526690', '0.482969', '0.484402', '0.480106', '0.480553', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (581, 1127), (612, 1158), (592, 1134), (582, 1145), (564, 1145), (558, 1127), (639, 1136), (578, 1128), (546, 1144), (561, 1125), (601, 1152), (588, 1160), (592, 1124), (553, 1145), (559, 1154), (543, 1131), (556, 1157), (591, 1141)]
         : compromised: 0.5076, honest: 0.5076
Round 005: test acc mean=0.5017 ± 0.0233 | min=0.4401 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.521589', '0.483585', '0.528497', '0.521164', '0.514410', '0.523144', '0.480923', '0.440141', '0.528369', '0.488636', '0.498667', '0.522569', '0.506897', '0.524911', '0.482969', '0.503466', '0.499558', '0.474503', '0.517967']
         : correct/total = [(537, 1140), (604, 1158), (545, 1127), (612, 1158), (591, 1134), (589, 1145), (599, 1145), (542, 1127), (500, 1136), (596, 1128), (559, 1144), (561, 1125), (602, 1152), (588, 1160), (590, 1124), (553, 1145), (581, 1154), (565, 1131), (549, 1157), (591, 1141)]
         : compromised: 0.5035, honest: 0.4942
Round 006: test acc mean=0.5057 ± 0.0260 | min=0.4375 max=0.5696
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.495682', '0.495120', '0.528497', '0.490300', '0.518777', '0.479476', '0.504880', '0.437500', '0.526596', '0.516608', '0.498667', '0.526042', '0.506897', '0.482206', '0.513537', '0.484402', '0.492485', '0.569576', '0.517967']
         : correct/total = [(603, 1140), (574, 1158), (558, 1127), (612, 1158), (556, 1134), (594, 1145), (549, 1145), (569, 1127), (497, 1136), (594, 1128), (591, 1144), (561, 1125), (606, 1152), (588, 1160), (542, 1124), (588, 1145), (559, 1154), (557, 1131), (659, 1157), (591, 1141)]
         : compromised: 0.5066, honest: 0.5021
Round 007: test acc mean=0.5018 ± 0.0180 | min=0.4702 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.470175', '0.518135', '0.527950', '0.528497', '0.522928', '0.485590', '0.485590', '0.496007', '0.507042', '0.481383', '0.527972', '0.498667', '0.497396', '0.506897', '0.495552', '0.517031', '0.486135', '0.487179', '0.477096', '0.517967']
         : correct/total = [(536, 1140), (600, 1158), (595, 1127), (612, 1158), (593, 1134), (556, 1145), (556, 1145), (559, 1127), (576, 1136), (543, 1128), (604, 1144), (561, 1125), (573, 1152), (588, 1160), (557, 1124), (592, 1145), (561, 1154), (551, 1131), (552, 1157), (591, 1141)]
         : compromised: 0.5037, honest: 0.4938
Round 008: test acc mean=0.5057 ± 0.0287 | min=0.4491 max=0.5729
         : test loss mean=nan ± nan
         : individual accs = ['0.449123', '0.491364', '0.495120', '0.528497', '0.478836', '0.572926', '0.521397', '0.490683', '0.564261', '0.484043', '0.472902', '0.498667', '0.489583', '0.506897', '0.521352', '0.531878', '0.508666', '0.504863', '0.485739', '0.517967']
         : correct/total = [(512, 1140), (569, 1158), (558, 1127), (612, 1158), (543, 1134), (656, 1145), (597, 1145), (553, 1127), (641, 1136), (546, 1128), (541, 1144), (561, 1125), (564, 1152), (588, 1160), (586, 1124), (609, 1145), (587, 1154), (571, 1131), (562, 1157), (591, 1141)]
         : compromised: 0.5117, honest: 0.4818
Round 009: test acc mean=0.4958 ± 0.0215 | min=0.4507 max=0.5289
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.491364', '0.482697', '0.528497', '0.519400', '0.507424', '0.483843', '0.510204', '0.450704', '0.489362', '0.479895', '0.498667', '0.522569', '0.506897', '0.484875', '0.455895', '0.486135', '0.492485', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (569, 1158), (544, 1127), (612, 1158), (589, 1134), (581, 1145), (554, 1145), (575, 1127), (512, 1136), (552, 1128), (549, 1144), (561, 1125), (602, 1152), (588, 1160), (545, 1124), (522, 1145), (561, 1154), (557, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4919, honest: 0.5112
Round 010: test acc mean=0.4975 ± 0.0226 | min=0.4357 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.457895', '0.490501', '0.501331', '0.528497', '0.521164', '0.493450', '0.521397', '0.497782', '0.435739', '0.505319', '0.525350', '0.498667', '0.473090', '0.506897', '0.482206', '0.517031', '0.496534', '0.492485', '0.487468', '0.517967']
         : correct/total = [(522, 1140), (568, 1158), (565, 1127), (612, 1158), (591, 1134), (565, 1145), (597, 1145), (561, 1127), (495, 1136), (570, 1128), (601, 1144), (561, 1125), (545, 1152), (588, 1160), (542, 1124), (592, 1145), (573, 1154), (557, 1131), (564, 1157), (591, 1141)]
         : compromised: 0.4986, honest: 0.4933

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: krum
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.4986, Honest: 0.4933
Overall test accuracy: mean=0.4975 ± 0.0226
