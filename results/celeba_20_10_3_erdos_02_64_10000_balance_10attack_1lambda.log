Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5199 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=3.4391 ± 5.9400
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.528838', '0.562500', '0.491135', '0.525350', '0.526222', '0.516493', '0.506897', '0.515125', '0.538865', '0.515598', '0.512821', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (596, 1127), (639, 1136), (554, 1128), (601, 1144), (592, 1125), (595, 1152), (588, 1160), (579, 1124), (617, 1145), (595, 1154), (580, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5209
Round 002: test acc mean=0.5128 ± 0.0180 | min=0.4758 max=0.5625
         : test loss mean=3.2640 ± 4.7076
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.475820', '0.522046', '0.514410', '0.521397', '0.500444', '0.562500', '0.491135', '0.525350', '0.485333', '0.520833', '0.506897', '0.514235', '0.517031', '0.515598', '0.510168', '0.522040', '0.518843']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (551, 1158), (592, 1134), (589, 1145), (597, 1145), (564, 1127), (639, 1136), (554, 1128), (601, 1144), (546, 1125), (600, 1152), (588, 1160), (578, 1124), (592, 1145), (595, 1154), (577, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5107, honest: 0.5130
Round 003: test acc mean=0.5171 ± 0.0156 | min=0.4911 max=0.5651
         : test loss mean=1.7337 ± 1.8864
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.525043', '0.522046', '0.514410', '0.521397', '0.514641', '0.565141', '0.491135', '0.525350', '0.492444', '0.522569', '0.506897', '0.517794', '0.526638', '0.515598', '0.508400', '0.522040', '0.519720']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (608, 1158), (592, 1134), (589, 1145), (597, 1145), (580, 1127), (642, 1136), (554, 1128), (601, 1144), (554, 1125), (602, 1152), (588, 1160), (582, 1124), (603, 1145), (595, 1154), (575, 1131), (604, 1157), (593, 1141)]
         : compromised: 0.5107, honest: 0.5178
Round 004: test acc mean=0.5194 ± 0.0241 | min=0.4911 max=0.6127
         : test loss mean=1.3449 ± 0.9228
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.612676', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.527607']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (696, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (602, 1141)]
         : compromised: 0.5107, honest: 0.5203
Round 005: test acc mean=0.5252 ± 0.0391 | min=0.4911 max=0.6752
         : test loss mean=1.0101 ± 0.4021
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.675176', '0.491135', '0.525350', '0.497778', '0.522569', '0.506897', '0.516904', '0.517031', '0.515598', '0.508400', '0.522040', '0.583699']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (767, 1136), (554, 1128), (601, 1144), (560, 1125), (602, 1152), (588, 1160), (581, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (666, 1141)]
         : compromised: 0.5107, honest: 0.5268
Round 006: test acc mean=0.5570 ± 0.0956 | min=0.4911 max=0.8125
         : test loss mean=7.2038 ± 13.2069
         : individual accs = ['0.719298', '0.510363', '0.554570', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.812500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.518198', '0.508400', '0.541919', '0.804557']
         : correct/total = [(820, 1140), (591, 1158), (625, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (923, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (598, 1154), (575, 1131), (627, 1157), (918, 1141)]
         : compromised: 0.5107, honest: 0.5621
Round 007: test acc mean=0.5898 ± 0.1270 | min=0.4942 max=0.8729
         : test loss mean=0.8105 ± 0.4064
         : individual accs = ['0.796491', '0.509499', '0.494232', '0.520725', '0.522046', '0.514410', '0.526638', '0.543922', '0.855634', '0.525709', '0.525350', '0.501333', '0.776042', '0.506897', '0.516014', '0.716157', '0.541594', '0.509284', '0.522040', '0.872918']
         : correct/total = [(908, 1140), (590, 1158), (557, 1127), (603, 1158), (592, 1134), (589, 1145), (603, 1145), (613, 1127), (972, 1136), (593, 1128), (601, 1144), (564, 1125), (894, 1152), (588, 1160), (580, 1124), (820, 1145), (625, 1154), (576, 1131), (604, 1157), (996, 1141)]
         : compromised: 0.5107, honest: 0.5986
Round 008: test acc mean=0.6353 ± 0.1322 | min=0.4987 max=0.8646
         : test loss mean=1.0562 ± 0.8618
         : individual accs = ['0.828947', '0.515544', '0.583851', '0.528497', '0.529982', '0.864629', '0.690830', '0.503993', '0.849472', '0.759752', '0.717657', '0.498667', '0.522569', '0.727586', '0.517794', '0.517031', '0.707106', '0.508400', '0.524633', '0.809816']
         : correct/total = [(945, 1140), (597, 1158), (658, 1127), (612, 1158), (601, 1134), (990, 1145), (791, 1145), (568, 1127), (965, 1136), (857, 1128), (821, 1144), (561, 1125), (602, 1152), (844, 1160), (582, 1124), (592, 1145), (816, 1154), (575, 1131), (607, 1157), (924, 1141)]
         : compromised: 0.7961, honest: 0.6175
Round 009: test acc mean=0.6513 ± 0.1224 | min=0.4987 max=0.8571
         : test loss mean=0.8188 ± 0.4570
         : individual accs = ['0.840351', '0.642487', '0.726708', '0.528497', '0.598765', '0.744105', '0.785153', '0.503993', '0.852993', '0.643617', '0.644231', '0.498667', '0.522569', '0.644828', '0.518683', '0.517031', '0.758232', '0.508400', '0.689715', '0.857143']
         : correct/total = [(958, 1140), (744, 1158), (819, 1127), (612, 1158), (679, 1134), (852, 1145), (899, 1145), (568, 1127), (969, 1136), (726, 1128), (737, 1144), (561, 1125), (602, 1152), (748, 1160), (583, 1124), (592, 1145), (875, 1154), (575, 1131), (798, 1157), (978, 1141)]
         : compromised: 0.6945, honest: 0.6465
Round 010: test acc mean=0.6425 ± 0.1493 | min=0.4987 max=0.8975
         : test loss mean=4.8907 ± 7.8325
         : individual accs = ['0.867544', '0.749568', '0.793256', '0.528497', '0.629630', '0.514410', '0.848035', '0.503993', '0.870599', '0.539894', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.733969', '0.508400', '0.776145', '0.897458']
         : correct/total = [(989, 1140), (868, 1158), (894, 1127), (612, 1158), (714, 1134), (589, 1145), (971, 1145), (568, 1127), (989, 1136), (609, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (847, 1154), (575, 1131), (898, 1157), (1024, 1141)]
         : compromised: 0.5107, honest: 0.6571

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.5107, Honest: 0.6571
Overall test accuracy: mean=0.6425 ± 0.1493

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.754s (38.7%)
  - Filtering time: 0.890s (45.7%)
  - Aggregation time: 0.305s (15.6%)
  - Total time: 1.949s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
