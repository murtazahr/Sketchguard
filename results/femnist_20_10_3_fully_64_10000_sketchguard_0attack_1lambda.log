Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.5081 ± 0.0325 | min=0.4542 max=0.5589
         : test loss mean=3.7396 ± 0.0241
         : individual accs = ['0.558866', '0.514632', '0.532468', '0.500346', '0.464679', '0.551201', '0.497019', '0.499885', '0.540921', '0.475801', '0.477673', '0.534462', '0.481310', '0.467239', '0.525913', '0.541822', '0.472189', '0.553670', '0.517140', '0.454215']
         : correct/total = [(2307, 4128), (2163, 4203), (2173, 4081), (2168, 4333), (1901, 4091), (2363, 4287), (2084, 4193), (2174, 4349), (2267, 4191), (2035, 4277), (1979, 4143), (2241, 4193), (1970, 4093), (1961, 4197), (2131, 4052), (2183, 4029), (1961, 4153), (2316, 4183), (2112, 4084), (1875, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6824 ± 0.0212 | min=0.6136 max=0.7108
         : test loss mean=3.4479 ± 0.0271
         : individual accs = ['0.681686', '0.683797', '0.673609', '0.695361', '0.684185', '0.710753', '0.613642', '0.695792', '0.670246', '0.705401', '0.692493', '0.691867', '0.694601', '0.673576', '0.701876', '0.696203', '0.655430', '0.666507', '0.693683', '0.667636']
         : correct/total = [(2814, 4128), (2874, 4203), (2749, 4081), (3013, 4333), (2799, 4091), (3047, 4287), (2573, 4193), (3026, 4349), (2809, 4191), (3017, 4277), (2869, 4143), (2901, 4193), (2843, 4093), (2827, 4197), (2844, 4052), (2805, 4029), (2722, 4153), (2788, 4183), (2833, 4084), (2756, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.7078 ± 0.0180 | min=0.6744 max=0.7381
         : test loss mean=3.2181 ± 0.0344
         : individual accs = ['0.738130', '0.696645', '0.686596', '0.717286', '0.692985', '0.674364', '0.715001', '0.726834', '0.725364', '0.682722', '0.705045', '0.732411', '0.728317', '0.715035', '0.728529', '0.705138', '0.685529', '0.701889', '0.698580', '0.699128']
         : correct/total = [(3047, 4128), (2928, 4203), (2802, 4081), (3108, 4333), (2835, 4091), (2891, 4287), (2998, 4193), (3161, 4349), (3040, 4191), (2920, 4277), (2921, 4143), (3071, 4193), (2981, 4093), (3001, 4197), (2952, 4052), (2841, 4029), (2847, 4153), (2936, 4183), (2853, 4084), (2886, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.6976 ± 0.0240 | min=0.6476 max=0.7300
         : test loss mean=2.8177 ± 0.0494
         : individual accs = ['0.696948', '0.729955', '0.653761', '0.706670', '0.716940', '0.685794', '0.725256', '0.716946', '0.715104', '0.685761', '0.647598', '0.709993', '0.661129', '0.717894', '0.728529', '0.703649', '0.697568', '0.676309', '0.701518', '0.675145']
         : correct/total = [(2877, 4128), (3068, 4203), (2668, 4081), (3062, 4333), (2933, 4091), (2940, 4287), (3041, 4193), (3118, 4349), (2997, 4191), (2933, 4277), (2683, 4143), (2977, 4193), (2706, 4093), (3013, 4197), (2952, 4052), (2835, 4029), (2897, 4153), (2829, 4183), (2865, 4084), (2787, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.6482 ± 0.0344 | min=0.5391 max=0.6937
         : test loss mean=2.2584 ± 0.0685
         : individual accs = ['0.675388', '0.651439', '0.539084', '0.619663', '0.654608', '0.655937', '0.678512', '0.667050', '0.673348', '0.676409', '0.617186', '0.652039', '0.657708', '0.639504', '0.660168', '0.625714', '0.677582', '0.596223', '0.693683', '0.652132']
         : correct/total = [(2788, 4128), (2738, 4203), (2200, 4081), (2685, 4333), (2678, 4091), (2812, 4287), (2845, 4193), (2901, 4349), (2822, 4191), (2893, 4277), (2557, 4143), (2734, 4193), (2692, 4093), (2684, 4197), (2675, 4052), (2521, 4029), (2814, 4153), (2494, 4183), (2833, 4084), (2692, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.6851 ± 0.0209 | min=0.6424 max=0.7229
         : test loss mean=1.5415 ± 0.0647
         : individual accs = ['0.642442', '0.699500', '0.666993', '0.666744', '0.705695', '0.651505', '0.703792', '0.704760', '0.667382', '0.691372', '0.697321', '0.684474', '0.684583', '0.722897', '0.707058', '0.689253', '0.670840', '0.664834', '0.708129', '0.672723']
         : correct/total = [(2652, 4128), (2940, 4203), (2722, 4081), (2889, 4333), (2887, 4091), (2793, 4287), (2951, 4193), (3065, 4349), (2797, 4191), (2957, 4277), (2889, 4143), (2870, 4193), (2802, 4093), (3034, 4197), (2865, 4052), (2777, 4029), (2786, 4153), (2781, 4183), (2892, 4084), (2777, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.7733 ± 0.0103 | min=0.7486 max=0.7937
         : test loss mean=0.9089 ± 0.0479
         : individual accs = ['0.772045', '0.779681', '0.748591', '0.766213', '0.768027', '0.785164', '0.793704', '0.785928', '0.773562', '0.775076', '0.771904', '0.762938', '0.760078', '0.780081', '0.781096', '0.770414', '0.772694', '0.765718', '0.786974', '0.766473']
         : correct/total = [(3187, 4128), (3277, 4203), (3055, 4081), (3320, 4333), (3142, 4091), (3366, 4287), (3328, 4193), (3418, 4349), (3242, 4191), (3315, 4277), (3198, 4143), (3199, 4193), (3111, 4093), (3274, 4197), (3165, 4052), (3104, 4029), (3209, 4153), (3203, 4183), (3214, 4084), (3164, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8139 ± 0.0071 | min=0.7970 max=0.8218
         : test loss mean=0.6165 ± 0.0244
         : individual accs = ['0.807655', '0.818939', '0.805930', '0.821602', '0.800293', '0.821787', '0.817076', '0.819269', '0.817705', '0.817162', '0.803524', '0.818269', '0.812363', '0.818442', '0.821323', '0.816083', '0.811462', '0.812814', '0.818315', '0.796996']
         : correct/total = [(3334, 4128), (3442, 4203), (3289, 4081), (3560, 4333), (3274, 4091), (3523, 4287), (3426, 4193), (3563, 4349), (3427, 4191), (3495, 4277), (3329, 4143), (3431, 4193), (3325, 4093), (3435, 4197), (3328, 4052), (3288, 4029), (3370, 4153), (3400, 4183), (3342, 4084), (3290, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8307 ± 0.0057 | min=0.8219 max=0.8428
         : test loss mean=0.5307 ± 0.0195
         : individual accs = ['0.823886', '0.835118', '0.827493', '0.834757', '0.824004', '0.832050', '0.836155', '0.833065', '0.842758', '0.837503', '0.822592', '0.825185', '0.829709', '0.829640', '0.837611', '0.834450', '0.829762', '0.824767', '0.832272', '0.821948']
         : correct/total = [(3401, 4128), (3510, 4203), (3377, 4081), (3617, 4333), (3371, 4091), (3567, 4287), (3506, 4193), (3623, 4349), (3532, 4191), (3582, 4277), (3408, 4143), (3460, 4193), (3396, 4093), (3482, 4197), (3394, 4052), (3362, 4029), (3446, 4153), (3450, 4183), (3399, 4084), (3393, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8400 ± 0.0058 | min=0.8284 max=0.8473
         : test loss mean=0.4953 ± 0.0191
         : individual accs = ['0.831880', '0.846776', '0.836805', '0.843296', '0.830604', '0.836016', '0.844264', '0.841803', '0.847292', '0.842413', '0.828385', '0.832817', '0.838749', '0.846319', '0.845755', '0.845619', '0.842283', '0.845565', '0.837904', '0.835514']
         : correct/total = [(3434, 4128), (3559, 4203), (3415, 4081), (3654, 4333), (3398, 4091), (3584, 4287), (3540, 4193), (3661, 4349), (3551, 4191), (3603, 4277), (3432, 4143), (3492, 4193), (3433, 4093), (3552, 4197), (3427, 4052), (3407, 4029), (3498, 4153), (3537, 4183), (3422, 4084), (3449, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: sketchguard
Overall test accuracy: mean=0.8400 ± 0.0058

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 12.948s (95.4%)
  - Filtering time: 0.028s (0.2%)
  - Aggregation time: 0.596s (4.4%)
  - Total time: 13.572s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
