Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3764 ± 0.1260 | min=0.0038 max=0.4815
         : test loss mean=1827.4220 ± 5731.3190
         : individual accs = ['0.347626', '0.403045', '0.342808', '0.380799', '0.456612', '0.431537', '0.451944', '0.466084', '0.402529', '0.382745', '0.444364', '0.481517', '0.045688', '0.003812', '0.429418', '0.455944', '0.447628', '0.475496', '0.344515', '0.334787']
         : correct/total = [(1435, 4128), (1694, 4203), (1399, 4081), (1650, 4333), (1868, 4091), (1850, 4287), (1895, 4193), (2027, 4349), (1687, 4191), (1637, 4277), (1841, 4143), (2019, 4193), (187, 4093), (16, 4197), (1740, 4052), (1837, 4029), (1859, 4153), (1989, 4183), (1407, 4084), (1382, 4128)]
         : compromised: 0.3269, honest: 0.4095
Round 002: test acc mean=0.6443 ± 0.2011 | min=0.0474 max=0.7488
         : test loss mean=nan ± nan
         : individual accs = ['0.739099', '0.625744', '0.731683', '0.729056', '0.731606', '0.671798', '0.733604', '0.721085', '0.714388', '0.719430', '0.713734', '0.720487', '0.047398', '0.047653', '0.686821', '0.748821', '0.731519', '0.654793', '0.695642', '0.721899']
         : correct/total = [(3051, 4128), (2630, 4203), (2986, 4081), (3159, 4333), (2993, 4091), (2880, 4287), (3076, 4193), (3136, 4349), (2994, 4191), (3077, 4277), (2957, 4143), (3021, 4193), (194, 4093), (200, 4197), (2783, 4052), (3017, 4029), (3038, 4153), (2739, 4183), (2841, 4084), (2980, 4128)]
         : compromised: 0.5188, honest: 0.7280
Round 003: test acc mean=0.7015 ± 0.2201 | min=0.0474 max=0.7992
         : test loss mean=nan ± nan
         : individual accs = ['0.794089', '0.706876', '0.786817', '0.795523', '0.779272', '0.667133', '0.791319', '0.788917', '0.778335', '0.783493', '0.772870', '0.776771', '0.047398', '0.047653', '0.780355', '0.799206', '0.788587', '0.787234', '0.778404', '0.780281']
         : correct/total = [(3278, 4128), (2971, 4203), (3211, 4081), (3447, 4333), (3188, 4091), (2860, 4287), (3318, 4193), (3431, 4349), (3262, 4191), (3351, 4277), (3202, 4143), (3257, 4193), (194, 4093), (200, 4197), (3162, 4052), (3220, 4029), (3275, 4153), (3293, 4183), (3179, 4084), (3221, 4128)]
         : compromised: 0.5740, honest: 0.7866
Round 004: test acc mean=0.7294 ± 0.2276 | min=0.0474 max=0.8210
         : test loss mean=nan ± nan
         : individual accs = ['0.810804', '0.766595', '0.800539', '0.815140', '0.800782', '0.775601', '0.811829', '0.807312', '0.809831', '0.816226', '0.801834', '0.796804', '0.047398', '0.047653', '0.812932', '0.821047', '0.815796', '0.808272', '0.816601', '0.804021']
         : correct/total = [(3347, 4128), (3222, 4203), (3267, 4081), (3532, 4333), (3276, 4091), (3325, 4287), (3404, 4193), (3511, 4349), (3394, 4191), (3491, 4277), (3322, 4143), (3341, 4193), (194, 4093), (200, 4197), (3294, 4052), (3308, 4029), (3388, 4153), (3381, 4183), (3335, 4084), (3319, 4128)]
         : compromised: 0.6090, honest: 0.8096
Round 005: test acc mean=0.7399 ± 0.2311 | min=0.0474 max=0.8304
         : test loss mean=nan ± nan
         : individual accs = ['0.822917', '0.776826', '0.814261', '0.830372', '0.817404', '0.793562', '0.825423', '0.814900', '0.822715', '0.824643', '0.812937', '0.815884', '0.047398', '0.047653', '0.822804', '0.824026', '0.817722', '0.822376', '0.826151', '0.817345']
         : correct/total = [(3397, 4128), (3265, 4203), (3323, 4081), (3598, 4333), (3344, 4091), (3402, 4287), (3461, 4193), (3544, 4349), (3448, 4191), (3527, 4277), (3368, 4143), (3421, 4193), (194, 4093), (200, 4197), (3334, 4052), (3320, 4029), (3396, 4153), (3440, 4183), (3374, 4084), (3374, 4128)]
         : compromised: 0.6191, honest: 0.8204
Round 006: test acc mean=0.7499 ± 0.2343 | min=0.0474 max=0.8403
         : test loss mean=nan ± nan
         : individual accs = ['0.825824', '0.800143', '0.828963', '0.838911', '0.820093', '0.812223', '0.832101', '0.834215', '0.833691', '0.827449', '0.814627', '0.829001', '0.047398', '0.047653', '0.837611', '0.835939', '0.829762', '0.840306', '0.833252', '0.828488']
         : correct/total = [(3409, 4128), (3363, 4203), (3383, 4081), (3635, 4333), (3355, 4091), (3482, 4287), (3489, 4193), (3628, 4349), (3494, 4191), (3539, 4277), (3375, 4143), (3476, 4193), (194, 4093), (200, 4197), (3394, 4052), (3368, 4029), (3446, 4153), (3515, 4183), (3403, 4084), (3420, 4128)]
         : compromised: 0.6309, honest: 0.8292
Round 007: test acc mean=0.7563 ± 0.2364 | min=0.0474 max=0.8433
         : test loss mean=nan ± nan
         : individual accs = ['0.829457', '0.813942', '0.839745', '0.840757', '0.829382', '0.825286', '0.830909', '0.839273', '0.842997', '0.837737', '0.829592', '0.835202', '0.047398', '0.047653', '0.840819', '0.838670', '0.836745', '0.840545', '0.843291', '0.836967']
         : correct/total = [(3424, 4128), (3421, 4203), (3427, 4081), (3643, 4333), (3393, 4091), (3538, 4287), (3484, 4193), (3650, 4349), (3533, 4191), (3583, 4277), (3437, 4143), (3502, 4193), (194, 4093), (200, 4197), (3407, 4052), (3379, 4029), (3475, 4153), (3516, 4183), (3444, 4084), (3455, 4128)]
         : compromised: 0.6368, honest: 0.8360
Round 008: test acc mean=0.7563 ± 0.2364 | min=0.0474 max=0.8474
         : test loss mean=nan ± nan
         : individual accs = ['0.826066', '0.832976', '0.839745', '0.847450', '0.838426', '0.825519', '0.840210', '0.838124', '0.836077', '0.839607', '0.826213', '0.841164', '0.047398', '0.047653', '0.843781', '0.830479', '0.823501', '0.836959', '0.839618', '0.825097']
         : correct/total = [(3410, 4128), (3501, 4203), (3427, 4081), (3672, 4333), (3430, 4091), (3539, 4287), (3523, 4193), (3645, 4349), (3504, 4191), (3591, 4277), (3423, 4143), (3527, 4193), (194, 4093), (200, 4197), (3419, 4052), (3346, 4029), (3420, 4153), (3501, 4183), (3429, 4084), (3406, 4128)]
         : compromised: 0.6394, honest: 0.8342
Round 009: test acc mean=0.7642 ± 0.2390 | min=0.0474 max=0.8537
         : test loss mean=nan ± nan
         : individual accs = ['0.840843', '0.842969', '0.837540', '0.850450', '0.835737', '0.838115', '0.847603', '0.851460', '0.853734', '0.848492', '0.838040', '0.839256', '0.047398', '0.047653', '0.845262', '0.844130', '0.839393', '0.847000', '0.848188', '0.841328']
         : correct/total = [(3471, 4128), (3543, 4203), (3418, 4081), (3685, 4333), (3419, 4091), (3593, 4287), (3554, 4193), (3703, 4349), (3578, 4191), (3629, 4277), (3472, 4143), (3519, 4193), (194, 4093), (200, 4197), (3425, 4052), (3401, 4029), (3486, 4153), (3543, 4183), (3464, 4084), (3473, 4128)]
         : compromised: 0.6445, honest: 0.8441
Round 010: test acc mean=0.7672 ± 0.2400 | min=0.0474 max=0.8558
         : test loss mean=nan ± nan
         : individual accs = ['0.844234', '0.854152', '0.842196', '0.855066', '0.842092', '0.844413', '0.854042', '0.852610', '0.851348', '0.848258', '0.833695', '0.840687', '0.047398', '0.047653', '0.853899', '0.855795', '0.846135', '0.844370', '0.848188', '0.838663']
         : correct/total = [(3485, 4128), (3590, 4203), (3437, 4081), (3705, 4333), (3445, 4091), (3620, 4287), (3581, 4193), (3708, 4349), (3568, 4191), (3628, 4277), (3454, 4143), (3525, 4193), (194, 4093), (200, 4197), (3460, 4052), (3448, 4029), (3514, 4153), (3532, 4183), (3464, 4084), (3462, 4128)]
         : compromised: 0.6476, honest: 0.8470

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 40.0% compromised
Final accuracy - Compromised: 0.6476, Honest: 0.8470
Overall test accuracy: mean=0.7672 ± 0.2400

=== BALANCE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.850
Node 2: acceptance=0.500
Node 3: acceptance=1.000
Node 4: acceptance=0.500
Node 5: acceptance=0.850
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=0.500
Node 11: acceptance=0.500
Node 12: acceptance=0.000
Node 13: acceptance=0.000
Node 14: acceptance=0.500
Node 15: acceptance=0.500
Node 16: acceptance=0.500
Node 17: acceptance=0.500
Node 18: acceptance=0.500
Node 19: acceptance=0.500

Performance Summary:
  - Distance computation time: 0.217s (31.0%)
  - Filtering time: 0.322s (46.0%)
  - Aggregation time: 0.161s (23.0%)
  - Total time: 0.700s
  - Mean acceptance rate: 0.585

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
