Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4706 ± 0.0390 | min=0.4034 max=0.5402
         : test loss mean=3.7681 ± 0.0268
         : individual accs = ['0.510901', '0.476564', '0.499632', '0.505654', '0.448057', '0.540238', '0.416885', '0.438951', '0.494631', '0.443068', '0.421675', '0.523015', '0.403372', '0.447462', '0.485439', '0.494664', '0.466891', '0.521635', '0.443193', '0.429748']
         : correct/total = [(2109, 4128), (2003, 4203), (2039, 4081), (2191, 4333), (1833, 4091), (2316, 4287), (1748, 4193), (1909, 4349), (2073, 4191), (1895, 4277), (1747, 4143), (2193, 4193), (1651, 4093), (1878, 4197), (1967, 4052), (1993, 4029), (1939, 4153), (2182, 4183), (1810, 4084), (1774, 4128)]
         : compromised: 0.4773, honest: 0.4549
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 002: test acc mean=0.6630 ± 0.0304 | min=0.5869 max=0.7050
         : test loss mean=3.3254 ± 0.1479
         : individual accs = ['0.686047', '0.688556', '0.640529', '0.681745', '0.683696', '0.690693', '0.586931', '0.676477', '0.606776', '0.694880', '0.646633', '0.704984', '0.663816', '0.654515', '0.692498', '0.643336', '0.659042', '0.645470', '0.682909', '0.631298']
         : correct/total = [(2832, 4128), (2894, 4203), (2614, 4081), (2954, 4333), (2797, 4091), (2961, 4287), (2461, 4193), (2942, 4349), (2543, 4191), (2972, 4277), (2679, 4143), (2956, 4193), (2717, 4093), (2747, 4197), (2806, 4052), (2592, 4029), (2737, 4153), (2700, 4183), (2789, 4084), (2606, 4128)]
         : compromised: 0.6581, honest: 0.6745
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 003: test acc mean=0.6281 ± 0.0448 | min=0.5259 max=0.6923
         : test loss mean=2.5679 ± 0.3046
         : individual accs = ['0.669089', '0.599810', '0.525852', '0.680360', '0.692251', '0.565664', '0.646792', '0.669119', '0.654021', '0.638999', '0.608979', '0.615311', '0.648913', '0.592090', '0.656713', '0.543063', '0.684084', '0.620368', '0.635406', '0.615310']
         : correct/total = [(2762, 4128), (2521, 4203), (2146, 4081), (2948, 4333), (2832, 4091), (2425, 4287), (2712, 4193), (2910, 4349), (2741, 4191), (2733, 4277), (2523, 4143), (2580, 4193), (2656, 4093), (2485, 4197), (2661, 4052), (2188, 4029), (2841, 4153), (2595, 4183), (2595, 4084), (2540, 4128)]
         : compromised: 0.6143, honest: 0.6604
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 004: test acc mean=0.7311 ± 0.0261 | min=0.6883 max=0.7739
         : test loss mean=1.3232 ± 0.2082
         : individual accs = ['0.753149', '0.703545', '0.695663', '0.730902', '0.773894', '0.702822', '0.736704', '0.769372', '0.739919', '0.762684', '0.734733', '0.715955', '0.701930', '0.736478', '0.747285', '0.688260', '0.766193', '0.742290', '0.725759', '0.694283']
         : correct/total = [(3109, 4128), (2957, 4203), (2839, 4081), (3167, 4333), (3166, 4091), (3013, 4287), (3089, 4193), (3346, 4349), (3101, 4191), (3262, 4277), (3044, 4143), (3002, 4193), (2873, 4093), (3091, 4197), (3028, 4052), (2773, 4029), (3182, 4153), (3105, 4183), (2964, 4084), (2866, 4128)]
         : compromised: 0.7187, honest: 0.7600
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 005: test acc mean=0.7992 ± 0.0066 | min=0.7868 max=0.8135
         : test loss mean=0.6851 ± 0.0408
         : individual accs = ['0.800630', '0.799429', '0.791963', '0.797369', '0.796382', '0.800093', '0.799189', '0.813520', '0.807922', '0.808277', '0.792904', '0.786788', '0.799169', '0.800572', '0.796644', '0.792008', '0.809294', '0.791059', '0.803379', '0.797481']
         : correct/total = [(3305, 4128), (3360, 4203), (3232, 4081), (3455, 4333), (3258, 4091), (3430, 4287), (3351, 4193), (3538, 4349), (3386, 4191), (3457, 4277), (3285, 4143), (3299, 4193), (3271, 4093), (3360, 4197), (3228, 4052), (3191, 4029), (3361, 4153), (3309, 4183), (3281, 4084), (3292, 4128)]
         : compromised: 0.7974, honest: 0.8035
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 006: test acc mean=0.8234 ± 0.0058 | min=0.8132 max=0.8349
         : test loss mean=0.5562 ± 0.0185
         : individual accs = ['0.815407', '0.827504', '0.817692', '0.824833', '0.816915', '0.822487', '0.820415', '0.828236', '0.831544', '0.824643', '0.813179', '0.820892', '0.820181', '0.834882', '0.826999', '0.825515', '0.829762', '0.828831', '0.822723', '0.814922']
         : correct/total = [(3366, 4128), (3478, 4203), (3337, 4081), (3574, 4333), (3342, 4091), (3526, 4287), (3440, 4193), (3602, 4349), (3485, 4191), (3527, 4277), (3369, 4143), (3442, 4193), (3357, 4093), (3504, 4197), (3351, 4052), (3326, 4029), (3446, 4153), (3467, 4183), (3360, 4084), (3364, 4128)]
         : compromised: 0.8242, honest: 0.8214
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 007: test acc mean=0.8361 ± 0.0049 | min=0.8273 max=0.8453
         : test loss mean=0.5092 ± 0.0189
         : individual accs = ['0.827277', '0.845349', '0.835334', '0.837064', '0.828159', '0.830184', '0.839494', '0.839963', '0.840134', '0.837737', '0.828385', '0.838063', '0.835084', '0.841077', '0.837858', '0.837925', '0.837948', '0.838154', '0.838149', '0.828246']
         : correct/total = [(3415, 4128), (3553, 4203), (3409, 4081), (3627, 4333), (3388, 4091), (3559, 4287), (3520, 4193), (3653, 4349), (3521, 4191), (3583, 4277), (3432, 4143), (3514, 4193), (3418, 4093), (3530, 4197), (3395, 4052), (3376, 4029), (3480, 4153), (3506, 4183), (3423, 4084), (3419, 4128)]
         : compromised: 0.8373, honest: 0.8332
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 008: test acc mean=0.8393 ± 0.0063 | min=0.8224 max=0.8493
         : test loss mean=0.4869 ± 0.0192
         : individual accs = ['0.829700', '0.838925', '0.837050', '0.849296', '0.836226', '0.844413', '0.843787', '0.842033', '0.839656', '0.845452', '0.830316', '0.844264', '0.834840', '0.843221', '0.845755', '0.843385', '0.837948', '0.836959', '0.841087', '0.822432']
         : correct/total = [(3425, 4128), (3526, 4203), (3416, 4081), (3680, 4333), (3421, 4091), (3620, 4287), (3538, 4193), (3662, 4349), (3519, 4191), (3616, 4277), (3440, 4143), (3540, 4193), (3417, 4093), (3539, 4197), (3427, 4052), (3398, 4029), (3480, 4153), (3501, 4183), (3435, 4084), (3395, 4128)]
         : compromised: 0.8404, honest: 0.8369
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 009: test acc mean=0.8463 ± 0.0056 | min=0.8338 max=0.8552
         : test loss mean=0.4651 ± 0.0183
         : individual accs = ['0.837452', '0.852962', '0.844891', '0.849527', '0.833781', '0.848379', '0.853327', '0.853070', '0.855166', '0.852467', '0.842143', '0.842356', '0.843635', '0.848225', '0.849457', '0.847605', '0.841079', '0.845326', '0.842556', '0.842781']
         : correct/total = [(3457, 4128), (3585, 4203), (3448, 4081), (3681, 4333), (3411, 4091), (3637, 4287), (3578, 4193), (3710, 4349), (3584, 4191), (3646, 4277), (3489, 4143), (3532, 4193), (3453, 4093), (3560, 4197), (3442, 4052), (3415, 4029), (3493, 4153), (3536, 4183), (3441, 4084), (3479, 4128)]
         : compromised: 0.8476, honest: 0.8433
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...
Round 010: test acc mean=0.8507 ± 0.0052 | min=0.8404 max=0.8599
         : test loss mean=0.4518 ± 0.0185
         : individual accs = ['0.843750', '0.859862', '0.848321', '0.855297', '0.840381', '0.846279', '0.857620', '0.853759', '0.857075', '0.852467', '0.841902', '0.848080', '0.846812', '0.852275', '0.852912', '0.852817', '0.852637', '0.854172', '0.851616', '0.845688']
         : correct/total = [(3483, 4128), (3614, 4203), (3462, 4081), (3706, 4333), (3438, 4091), (3628, 4287), (3596, 4193), (3713, 4349), (3592, 4191), (3646, 4277), (3488, 4143), (3556, 4193), (3466, 4093), (3577, 4197), (3456, 4052), (3436, 4029), (3541, 4153), (3573, 4183), (3478, 4084), (3491, 4128)]
         : compromised: 0.8521, honest: 0.8475
         : coarse stats = ['Node 0: acc_rate=0.263', 'Node 1: acc_rate=0.316', 'Node 2: acc_rate=0.316']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: coarse
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.8521, Honest: 0.8475
Overall test accuracy: mean=0.8507 ± 0.0052

=== COARSE SUMMARY ===
Node 0: acceptance=0.263
Node 1: acceptance=0.316
Node 2: acceptance=0.316
Node 3: acceptance=0.316
Node 4: acceptance=0.263
Node 5: acceptance=0.316
Node 6: acceptance=0.316
Node 7: acceptance=0.263
Node 8: acceptance=0.316
Node 9: acceptance=0.263
Node 10: acceptance=0.263
Node 11: acceptance=0.316
Node 12: acceptance=0.316
Node 13: acceptance=0.316
Node 14: acceptance=0.316
Node 15: acceptance=0.316
Node 16: acceptance=0.263
Node 17: acceptance=0.316
Node 18: acceptance=0.316
Node 19: acceptance=0.316

Performance Summary:
  - Sketching time: 19.619s (98.4%)
  - Filtering time: 0.030s (0.1%)
  - Aggregation time: 0.284s (1.4%)
  - Total time: 19.933s
  - Mean acceptance rate: 0.300

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
