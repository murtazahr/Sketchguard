Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Model variant: baseline
Model parameters: 2,219,692
COARSE Node 0:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 2,219,692 parameters
  - Config: COARSEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1, sketch_size=1000, network_seed=987654321, attack_detection_window=5)
  - Sketch size: 1000
  - Compression ratio: 2219.7x
  - Complexity: O(d + N×k) = O(2,219,692 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.8x
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6627 ± 0.0514 | min=0.5197 max=0.7231
         : test loss mean=0.6810 ± 0.0036
         : individual accs = ['0.703509', '0.674439', '0.621118', '0.716753', '0.565256', '0.648908', '0.642795', '0.635315', '0.634683', '0.682624', '0.657343', '0.714667', '0.678819', '0.700862', '0.669039', '0.723144', '0.706239', '0.638373', '0.719965', '0.519720']
         : correct/total = [(802, 1140), (781, 1158), (700, 1127), (830, 1158), (641, 1134), (743, 1145), (736, 1145), (716, 1127), (721, 1136), (770, 1128), (752, 1144), (804, 1125), (782, 1152), (813, 1160), (752, 1124), (828, 1145), (815, 1154), (722, 1131), (833, 1157), (593, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6613 ± 0.0471 | min=0.5415 max=0.7306
         : test loss mean=0.6671 ± 0.0120
         : individual accs = ['0.662281', '0.676166', '0.676131', '0.671848', '0.571429', '0.541485', '0.640175', '0.632653', '0.730634', '0.698582', '0.702797', '0.696000', '0.708333', '0.626724', '0.620996', '0.689083', '0.684575', '0.622458', '0.717373', '0.656442']
         : correct/total = [(755, 1140), (783, 1158), (762, 1127), (778, 1158), (648, 1134), (620, 1145), (733, 1145), (713, 1127), (830, 1136), (788, 1128), (804, 1144), (783, 1125), (816, 1152), (727, 1160), (698, 1124), (789, 1145), (790, 1154), (704, 1131), (830, 1157), (749, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.6886 ± 0.0546 | min=0.5750 max=0.7808
         : test loss mean=0.6381 ± 0.0287
         : individual accs = ['0.671930', '0.678756', '0.710736', '0.736615', '0.574956', '0.641048', '0.710917', '0.622893', '0.780810', '0.737589', '0.723776', '0.729778', '0.664062', '0.731034', '0.615658', '0.709170', '0.692374', '0.590628', '0.758859', '0.689746']
         : correct/total = [(766, 1140), (786, 1158), (801, 1127), (853, 1158), (652, 1134), (734, 1145), (814, 1145), (702, 1127), (887, 1136), (832, 1128), (828, 1144), (821, 1125), (765, 1152), (848, 1160), (692, 1124), (812, 1145), (799, 1154), (668, 1131), (878, 1157), (787, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.7414 ± 0.0458 | min=0.6460 max=0.8301
         : test loss mean=0.5826 ± 0.0463
         : individual accs = ['0.709649', '0.718480', '0.731145', '0.793610', '0.691358', '0.720524', '0.725764', '0.645963', '0.830106', '0.801418', '0.774476', '0.774222', '0.709201', '0.761207', '0.725979', '0.754585', '0.737435', '0.663130', '0.797753', '0.762489']
         : correct/total = [(809, 1140), (832, 1158), (824, 1127), (919, 1158), (784, 1134), (825, 1145), (831, 1145), (728, 1127), (943, 1136), (904, 1128), (886, 1144), (871, 1125), (817, 1152), (883, 1160), (816, 1124), (864, 1145), (851, 1154), (750, 1131), (923, 1157), (870, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.7842 ± 0.0376 | min=0.6744 max=0.8475
         : test loss mean=0.5079 ± 0.0481
         : individual accs = ['0.782456', '0.764249', '0.674357', '0.829879', '0.778660', '0.769432', '0.775546', '0.771961', '0.846831', '0.847518', '0.816434', '0.804444', '0.750000', '0.772414', '0.784698', '0.793013', '0.746967', '0.783378', '0.815903', '0.776512']
         : correct/total = [(892, 1140), (885, 1158), (760, 1127), (961, 1158), (883, 1134), (881, 1145), (888, 1145), (870, 1127), (962, 1136), (956, 1128), (934, 1144), (905, 1125), (864, 1152), (896, 1160), (882, 1124), (908, 1145), (862, 1154), (886, 1131), (944, 1157), (886, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.8188 ± 0.0224 | min=0.7746 max=0.8636
         : test loss mean=0.4340 ± 0.0323
         : individual accs = ['0.788596', '0.818653', '0.774623', '0.847150', '0.819224', '0.843668', '0.820961', '0.817214', '0.863556', '0.824468', '0.849650', '0.828444', '0.815972', '0.823276', '0.779359', '0.809607', '0.828423', '0.790451', '0.823682', '0.808063']
         : correct/total = [(899, 1140), (948, 1158), (873, 1127), (981, 1158), (929, 1134), (966, 1145), (940, 1145), (921, 1127), (981, 1136), (930, 1128), (972, 1144), (932, 1125), (940, 1152), (955, 1160), (876, 1124), (927, 1145), (956, 1154), (894, 1131), (953, 1157), (922, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.8467 ± 0.0169 | min=0.8201 max=0.8759
         : test loss mean=0.3710 ± 0.0256
         : individual accs = ['0.834211', '0.860967', '0.824312', '0.873057', '0.839506', '0.869869', '0.853275', '0.831411', '0.858275', '0.875887', '0.835664', '0.869333', '0.828125', '0.859483', '0.839858', '0.820087', '0.826690', '0.847038', '0.845290', '0.841367']
         : correct/total = [(951, 1140), (997, 1158), (929, 1127), (1011, 1158), (952, 1134), (996, 1145), (977, 1145), (937, 1127), (975, 1136), (988, 1128), (956, 1144), (978, 1125), (954, 1152), (997, 1160), (944, 1124), (939, 1145), (954, 1154), (958, 1131), (978, 1157), (960, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8650 ± 0.0090 | min=0.8506 max=0.8847
         : test loss mean=0.3273 ± 0.0124
         : individual accs = ['0.859649', '0.878238', '0.858030', '0.863558', '0.858907', '0.884716', '0.875109', '0.866903', '0.875000', '0.856383', '0.859266', '0.871111', '0.860243', '0.868103', '0.876335', '0.851528', '0.866551', '0.850575', '0.860847', '0.859772']
         : correct/total = [(980, 1140), (1017, 1158), (967, 1127), (1000, 1158), (974, 1134), (1013, 1145), (1002, 1145), (977, 1127), (994, 1136), (966, 1128), (983, 1144), (980, 1125), (991, 1152), (1007, 1160), (985, 1124), (975, 1145), (1000, 1154), (962, 1131), (996, 1157), (981, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8720 ± 0.0136 | min=0.8421 max=0.8917
         : test loss mean=0.3074 ± 0.0216
         : individual accs = ['0.883333', '0.889465', '0.842059', '0.884283', '0.864198', '0.891703', '0.880349', '0.868678', '0.884683', '0.884752', '0.871503', '0.877333', '0.864583', '0.878448', '0.866548', '0.856769', '0.876083', '0.861185', '0.842697', '0.871166']
         : correct/total = [(1007, 1140), (1030, 1158), (949, 1127), (1024, 1158), (980, 1134), (1021, 1145), (1008, 1145), (979, 1127), (1005, 1136), (998, 1128), (997, 1144), (987, 1125), (996, 1152), (1019, 1160), (974, 1124), (981, 1145), (1011, 1154), (974, 1131), (975, 1157), (994, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8819 ± 0.0102 | min=0.8598 max=0.8963
         : test loss mean=0.2872 ± 0.0134
         : individual accs = ['0.891228', '0.892919', '0.859805', '0.887737', '0.882716', '0.893450', '0.880349', '0.874889', '0.889965', '0.896277', '0.873252', '0.889778', '0.877604', '0.887069', '0.886121', '0.862009', '0.886482', '0.883289', '0.865169', '0.878177']
         : correct/total = [(1016, 1140), (1034, 1158), (969, 1127), (1028, 1158), (1001, 1134), (1023, 1145), (1008, 1145), (986, 1127), (1011, 1136), (1011, 1128), (999, 1144), (1001, 1125), (1011, 1152), (1029, 1160), (996, 1124), (987, 1145), (1023, 1154), (999, 1131), (1001, 1157), (1002, 1141)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: sketchguard
Overall test accuracy: mean=0.8819 ± 0.0102

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Sketch transfer: 0.000s (0.0%)
    - Model fetch (accepted): 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Sketching: 0.180s (89.4%)
    - Filtering: 0.001s (0.4%)
    - Aggregation: 0.020s (10.1%)
  TOTALS:
    - Total computation: 0.201s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.201s

=== PER-NODE AVERAGE TIME ===
  - Sketching: 0.162s
  - Filtering: 0.000s
  - Aggregation: 0.008s
  - Sketch transfer: 0.000s
  - Model fetch: 0.000s
  - Total per node: 0.170s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total sketching: 3.231s
  - Total filtering: 0.008s
  - Total aggregation: 0.156s
  - Total sketch transfer: 0.000s
  - Total model fetch: 0.000s
  - Grand total: 3.395s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 2,219,692
  - Sketch size: 1000
  - Compression ratio: 19.8x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
