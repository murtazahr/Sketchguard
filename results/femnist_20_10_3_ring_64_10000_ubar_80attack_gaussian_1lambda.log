Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 6,603,710 parameters
  - Rho parameter: 0.19999999999999996
  - Stage 1: Distance-based filtering (select 20% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.1812 ± 0.2113 | min=0.0020 max=0.4755
         : test loss mean=446134374.1197 ± 408070402.2496
         : individual accs = ['0.012355', '0.447537', '0.004166', '0.435726', '0.001956', '0.441801', '0.451944', '0.010577', '0.460511', '0.026654', '0.005552', '0.015025', '0.014659', '0.005004', '0.002468', '0.455944', '0.007224', '0.475496', '0.014447', '0.334787']
         : correct/total = [(51, 4128), (1881, 4203), (17, 4081), (1888, 4333), (8, 4091), (1894, 4287), (1895, 4193), (46, 4349), (1930, 4191), (114, 4277), (23, 4143), (63, 4193), (60, 4093), (21, 4197), (10, 4052), (1837, 4029), (30, 4153), (1989, 4183), (59, 4084), (1382, 4128)]
         : compromised: 0.2245, honest: 0.0080
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 002: test acc mean=0.0450 ± 0.0142 | min=0.0023 max=0.0602
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.002308', '0.045710', '0.052484', '0.008109', '0.049897', '0.051062', '0.050736', '0.051171', '0.048891', '0.047398', '0.034787', '0.054788', '0.043435', '0.047436', '0.049247', '0.060235', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (10, 4333), (187, 4091), (225, 4287), (34, 4193), (217, 4349), (214, 4191), (217, 4277), (212, 4143), (205, 4193), (194, 4093), (146, 4197), (222, 4052), (175, 4029), (197, 4153), (206, 4183), (246, 4084), (227, 4128)]
         : compromised: 0.0443, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 003: test acc mean=0.0491 ± 0.0050 | min=0.0348 max=0.0602
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.050736', '0.051412', '0.048891', '0.047398', '0.034787', '0.054788', '0.046662', '0.047436', '0.049247', '0.060235', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (217, 4277), (213, 4143), (205, 4193), (194, 4093), (146, 4197), (222, 4052), (188, 4029), (197, 4153), (206, 4183), (246, 4084), (227, 4128)]
         : compromised: 0.0493, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 004: test acc mean=0.0495 ± 0.0051 | min=0.0348 max=0.0602
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.050269', '0.051412', '0.048891', '0.047398', '0.034787', '0.054788', '0.054604', '0.047436', '0.049247', '0.060235', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (215, 4277), (213, 4143), (205, 4193), (194, 4093), (146, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (246, 4084), (227, 4128)]
         : compromised: 0.0498, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 005: test acc mean=0.0495 ± 0.0051 | min=0.0348 max=0.0602
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.050736', '0.051412', '0.048891', '0.047398', '0.034787', '0.054788', '0.054604', '0.047436', '0.049247', '0.060235', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (217, 4277), (213, 4143), (205, 4193), (194, 4093), (146, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (246, 4084), (227, 4128)]
         : compromised: 0.0498, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 006: test acc mean=0.0479 ± 0.0078 | min=0.0222 max=0.0602
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.022212', '0.048274', '0.048891', '0.047398', '0.034787', '0.054788', '0.054604', '0.047436', '0.049247', '0.060235', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (95, 4277), (200, 4143), (205, 4193), (194, 4093), (146, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (246, 4084), (227, 4128)]
         : compromised: 0.0479, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 007: test acc mean=0.0490 ± 0.0045 | min=0.0348 max=0.0550
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.048632', '0.051412', '0.048891', '0.047398', '0.034787', '0.054788', '0.054604', '0.047436', '0.049247', '0.051910', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (208, 4277), (213, 4143), (205, 4193), (194, 4093), (146, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (212, 4084), (227, 4128)]
         : compromised: 0.0492, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 008: test acc mean=0.0500 ± 0.0039 | min=0.0415 max=0.0602
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.050269', '0.048274', '0.048891', '0.047398', '0.048606', '0.054788', '0.054604', '0.047436', '0.049247', '0.060235', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (215, 4277), (200, 4143), (205, 4193), (194, 4093), (204, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (246, 4084), (227, 4128)]
         : compromised: 0.0505, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 009: test acc mean=0.0496 ± 0.0037 | min=0.0415 max=0.0556
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.043255', '0.051412', '0.048891', '0.047398', '0.048606', '0.054788', '0.054604', '0.047436', '0.049247', '0.055583', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (185, 4277), (213, 4143), (205, 4193), (194, 4093), (204, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (227, 4084), (227, 4128)]
         : compromised: 0.0499, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 010: test acc mean=0.0502 ± 0.0039 | min=0.0415 max=0.0597
         : test loss mean=nan ± nan
         : individual accs = ['0.049419', '0.048775', '0.049743', '0.046619', '0.045710', '0.052484', '0.041498', '0.049897', '0.051062', '0.050736', '0.053102', '0.048891', '0.047398', '0.048606', '0.054788', '0.054604', '0.047436', '0.049247', '0.059745', '0.054990']
         : correct/total = [(204, 4128), (205, 4203), (203, 4081), (202, 4333), (187, 4091), (225, 4287), (174, 4193), (217, 4349), (214, 4191), (217, 4277), (220, 4143), (205, 4193), (194, 4093), (204, 4197), (222, 4052), (220, 4029), (197, 4153), (206, 4183), (244, 4084), (227, 4128)]
         : compromised: 0.0508, honest: 0.0481
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: ubar
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.0508, Honest: 0.0481
Overall test accuracy: mean=0.0502 ± 0.0039

=== UBAR SUMMARY ===
Node 0: stage1=0.500, stage2=1.000, overall=0.500
Node 1: stage1=0.500, stage2=1.000, overall=0.500
Node 2: stage1=0.500, stage2=1.000, overall=0.500
Node 3: stage1=0.500, stage2=1.000, overall=0.500
Node 4: stage1=0.500, stage2=1.000, overall=0.500
Node 5: stage1=0.500, stage2=1.000, overall=0.500
Node 6: stage1=0.500, stage2=1.000, overall=0.500
Node 7: stage1=0.500, stage2=1.000, overall=0.500
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.500, stage2=1.000, overall=0.500
Node 10: stage1=0.500, stage2=1.000, overall=0.500
Node 11: stage1=0.500, stage2=1.000, overall=0.500
Node 12: stage1=0.500, stage2=1.000, overall=0.500
Node 13: stage1=0.500, stage2=1.000, overall=0.500
Node 14: stage1=0.500, stage2=1.000, overall=0.500
Node 15: stage1=0.500, stage2=1.000, overall=0.500
Node 16: stage1=0.500, stage2=1.000, overall=0.500
Node 17: stage1=0.500, stage2=1.000, overall=0.500
Node 18: stage1=0.500, stage2=1.000, overall=0.500
Node 19: stage1=0.500, stage2=1.000, overall=0.500

Performance Summary:
  - Distance computation time: 0.231s (0.3%)
  - Loss computation time: 87.039s (99.5%)
  - Aggregation time: 0.180s (0.2%)
  - Total time: 87.449s
  - Mean Stage 1 acceptance rate: 0.500
  - Mean Stage 2 acceptance rate: 1.000
  - Overall acceptance rate: 0.500

UBAR Algorithm Properties:
  - Model dimension: 6,603,710
  - Rho parameter: 0.19999999999999996
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 20% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
