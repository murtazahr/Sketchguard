Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5147 ± 0.0166 | min=0.4838 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.483786']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (552, 1141)]
         : compromised: 0.5139, honest: 0.5176
Round 002: test acc mean=0.5024 ± 0.0200 | min=0.4733 max=0.5625
         : test loss mean=6.6551 ± 3.6054
         : individual accs = ['0.508772', '0.513817', '0.503993', '0.481865', '0.477954', '0.500437', '0.506550', '0.473824', '0.562500', '0.489362', '0.525350', '0.495111', '0.504340', '0.507759', '0.473310', '0.502183', '0.508666', '0.511936', '0.482282', '0.517090']
         : correct/total = [(580, 1140), (595, 1158), (568, 1127), (558, 1158), (542, 1134), (573, 1145), (580, 1145), (534, 1127), (639, 1136), (552, 1128), (601, 1144), (557, 1125), (581, 1152), (589, 1160), (532, 1124), (575, 1145), (587, 1154), (579, 1131), (558, 1157), (590, 1141)]
         : compromised: 0.5049, honest: 0.4923
Round 003: test acc mean=0.5061 ± 0.0213 | min=0.4715 max=0.5625
         : test loss mean=0.9715 ± 0.3915
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.471503', '0.522046', '0.485590', '0.521397', '0.496007', '0.562500', '0.508865', '0.474650', '0.501333', '0.477431', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (556, 1145), (597, 1145), (559, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5037, honest: 0.5156
Round 004: test acc mean=0.5635 ± 0.0341 | min=0.5074 max=0.6764
         : test loss mean=8.3484 ± 4.3500
         : individual accs = ['0.544737', '0.603627', '0.582076', '0.537133', '0.560847', '0.548472', '0.507424', '0.521739', '0.564261', '0.581560', '0.546329', '0.565333', '0.548611', '0.543966', '0.563167', '0.577293', '0.554593', '0.676393', '0.590320', '0.552147']
         : correct/total = [(621, 1140), (699, 1158), (656, 1127), (622, 1158), (636, 1134), (628, 1145), (581, 1145), (588, 1127), (641, 1136), (656, 1128), (625, 1144), (636, 1125), (632, 1152), (631, 1160), (633, 1124), (661, 1145), (640, 1154), (765, 1131), (683, 1157), (630, 1141)]
         : compromised: 0.5680, honest: 0.5455
Round 005: test acc mean=0.5110 ± 0.0224 | min=0.4715 max=0.5693
         : test loss mean=0.7333 ± 0.1048
         : individual accs = ['0.569298', '0.508636', '0.493345', '0.471503', '0.522046', '0.514410', '0.478603', '0.503993', '0.551937', '0.491135', '0.521853', '0.500444', '0.522569', '0.506897', '0.517794', '0.517031', '0.516464', '0.508400', '0.522040', '0.482033']
         : correct/total = [(649, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (589, 1145), (548, 1145), (568, 1127), (627, 1136), (554, 1128), (597, 1144), (563, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (596, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5068, honest: 0.5280
Round 006: test acc mean=0.5717 ± 0.0502 | min=0.4862 max=0.6883
         : test loss mean=12.6897 ± 7.2239
         : individual accs = ['0.523684', '0.688256', '0.569654', '0.486183', '0.577601', '0.517904', '0.503930', '0.512866', '0.580986', '0.640957', '0.551573', '0.550222', '0.634549', '0.593103', '0.581851', '0.622707', '0.533795', '0.610964', '0.590320', '0.563541']
         : correct/total = [(597, 1140), (797, 1158), (642, 1127), (563, 1158), (655, 1134), (593, 1145), (577, 1145), (578, 1127), (660, 1136), (723, 1128), (631, 1144), (619, 1125), (731, 1152), (688, 1160), (654, 1124), (713, 1145), (616, 1154), (691, 1131), (683, 1157), (643, 1141)]
         : compromised: 0.5804, honest: 0.5370
Round 007: test acc mean=0.5150 ± 0.0394 | min=0.4715 max=0.6163
         : test loss mean=0.7027 ± 0.0166
         : individual accs = ['0.589474', '0.508636', '0.493345', '0.471503', '0.522046', '0.508297', '0.478603', '0.535049', '0.591549', '0.491135', '0.525350', '0.499556', '0.616319', '0.506897', '0.483096', '0.482969', '0.484402', '0.508400', '0.522040', '0.482033']
         : correct/total = [(672, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (582, 1145), (548, 1145), (603, 1127), (672, 1136), (554, 1128), (601, 1144), (562, 1125), (710, 1152), (588, 1160), (543, 1124), (553, 1145), (559, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5106, honest: 0.5327
Round 008: test acc mean=0.6023 ± 0.0562 | min=0.5188 max=0.7280
         : test loss mean=10.6103 ± 5.7538
         : individual accs = ['0.557895', '0.727979', '0.615794', '0.531088', '0.606702', '0.544105', '0.518777', '0.545697', '0.566021', '0.688830', '0.584790', '0.600889', '0.689236', '0.615517', '0.560498', '0.654148', '0.569324', '0.664898', '0.615385', '0.588081']
         : correct/total = [(636, 1140), (843, 1158), (694, 1127), (615, 1158), (688, 1134), (623, 1145), (594, 1145), (615, 1127), (643, 1136), (777, 1128), (669, 1144), (676, 1125), (794, 1152), (714, 1160), (630, 1124), (749, 1145), (657, 1154), (752, 1131), (712, 1157), (671, 1141)]
         : compromised: 0.6104, honest: 0.5699
Round 009: test acc mean=0.5175 ± 0.0159 | min=0.4911 max=0.5625
         : test loss mean=0.7219 ± 0.0400
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.539877']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (616, 1141)]
         : compromised: 0.5174, honest: 0.5176
Round 010: test acc mean=0.6126 ± 0.0512 | min=0.5164 max=0.7271
         : test loss mean=10.9190 ± 5.4278
         : individual accs = ['0.582456', '0.727116', '0.619343', '0.516408', '0.608466', '0.541485', '0.564192', '0.558119', '0.650528', '0.693262', '0.627622', '0.598222', '0.673611', '0.639655', '0.570285', '0.643668', '0.590988', '0.657825', '0.593777', '0.595968']
         : correct/total = [(664, 1140), (842, 1158), (698, 1127), (598, 1158), (690, 1134), (620, 1145), (646, 1145), (629, 1127), (739, 1136), (782, 1128), (718, 1144), (673, 1125), (776, 1152), (742, 1160), (641, 1124), (737, 1145), (682, 1154), (744, 1131), (687, 1157), (680, 1141)]
         : compromised: 0.6196, honest: 0.5850

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 80.0% compromised
Final accuracy - Compromised: 0.6196, Honest: 0.5850
Overall test accuracy: mean=0.6126 ± 0.0512

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.958s (42.5%)
  - Filtering time: 2.100s (45.6%)
  - Aggregation time: 0.549s (11.9%)
  - Total time: 4.606s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
