Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4041 ± 0.0451 | min=0.2941 max=0.4756
         : test loss mean=3.7730 ± 0.0354
         : individual accs = ['0.436047', '0.403045', '0.442049', '0.380799', '0.404302', '0.431537', '0.407584', '0.466084', '0.402529', '0.382745', '0.427951', '0.475554', '0.365013', '0.325471', '0.375864', '0.449739', '0.401397', '0.451351', '0.294074', '0.358527']
         : correct/total = [(1800, 4128), (1694, 4203), (1804, 4081), (1650, 4333), (1654, 4091), (1850, 4287), (1709, 4193), (2027, 4349), (1687, 4191), (1637, 4277), (1773, 4143), (1994, 4193), (1494, 4093), (1366, 4197), (1523, 4052), (1812, 4029), (1667, 4153), (1888, 4183), (1201, 4084), (1480, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6950 ± 0.0161 | min=0.6546 max=0.7201
         : test loss mean=2.2863 ± 0.0654
         : individual accs = ['0.702519', '0.704973', '0.689782', '0.714286', '0.703984', '0.720084', '0.694491', '0.701541', '0.714388', '0.697218', '0.682114', '0.713093', '0.701930', '0.692638', '0.689783', '0.695706', '0.671563', '0.654554', '0.685113', '0.670300']
         : correct/total = [(2900, 4128), (2963, 4203), (2815, 4081), (3095, 4333), (2880, 4091), (3087, 4287), (2912, 4193), (3051, 4349), (2994, 4191), (2982, 4277), (2826, 4143), (2990, 4193), (2873, 4093), (2907, 4197), (2795, 4052), (2803, 4029), (2789, 4153), (2738, 4183), (2798, 4084), (2767, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.7623 ± 0.0116 | min=0.7410 max=0.7805
         : test loss mean=1.2639 ± 0.0716
         : individual accs = ['0.773983', '0.760171', '0.760598', '0.776367', '0.760205', '0.755773', '0.769855', '0.779719', '0.780482', '0.768062', '0.741009', '0.763654', '0.756413', '0.778651', '0.760118', '0.764209', '0.745244', '0.746354', '0.745593', '0.760417']
         : correct/total = [(3195, 4128), (3195, 4203), (3104, 4081), (3364, 4333), (3110, 4091), (3240, 4287), (3228, 4193), (3391, 4349), (3271, 4191), (3285, 4277), (3070, 4143), (3202, 4193), (3096, 4093), (3268, 4197), (3080, 4052), (3079, 4029), (3095, 4153), (3122, 4183), (3045, 4084), (3139, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.7948 ± 0.0090 | min=0.7753 max=0.8057
         : test loss mean=0.8621 ± 0.0338
         : individual accs = ['0.780766', '0.800381', '0.795883', '0.799446', '0.792960', '0.799627', '0.801097', '0.799264', '0.805297', '0.805705', '0.782766', '0.775340', '0.788419', '0.801763', '0.804294', '0.805163', '0.788827', '0.781018', '0.794074', '0.793605']
         : correct/total = [(3223, 4128), (3364, 4203), (3248, 4081), (3464, 4333), (3244, 4091), (3428, 4287), (3359, 4193), (3476, 4349), (3375, 4191), (3446, 4277), (3243, 4143), (3251, 4193), (3227, 4093), (3365, 4197), (3259, 4052), (3244, 4029), (3276, 4153), (3267, 4183), (3243, 4084), (3276, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.8065 ± 0.0071 | min=0.7956 max=0.8213
         : test loss mean=0.7250 ± 0.0340
         : individual accs = ['0.803052', '0.808946', '0.800049', '0.813293', '0.799560', '0.800793', '0.811114', '0.811911', '0.821284', '0.818564', '0.797490', '0.795612', '0.797703', '0.808435', '0.803801', '0.815587', '0.808572', '0.802295', '0.808521', '0.803779']
         : correct/total = [(3315, 4128), (3400, 4203), (3265, 4081), (3524, 4333), (3271, 4091), (3433, 4287), (3401, 4193), (3531, 4349), (3442, 4191), (3501, 4277), (3304, 4143), (3336, 4193), (3265, 4093), (3393, 4197), (3257, 4052), (3286, 4029), (3358, 4153), (3356, 4183), (3302, 4084), (3318, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.8205 ± 0.0062 | min=0.8074 max=0.8313
         : test loss mean=0.6398 ± 0.0213
         : individual accs = ['0.812742', '0.817749', '0.815486', '0.822986', '0.815693', '0.821320', '0.822084', '0.827087', '0.828203', '0.823474', '0.807386', '0.813022', '0.814806', '0.831308', '0.826752', '0.824770', '0.829762', '0.819986', '0.818805', '0.816860']
         : correct/total = [(3355, 4128), (3437, 4203), (3328, 4081), (3566, 4333), (3337, 4091), (3521, 4287), (3447, 4193), (3597, 4349), (3471, 4191), (3522, 4277), (3345, 4143), (3409, 4193), (3335, 4093), (3489, 4197), (3350, 4052), (3323, 4029), (3446, 4153), (3430, 4183), (3344, 4084), (3372, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.8271 ± 0.0064 | min=0.8154 max=0.8401
         : test loss mean=0.5937 ± 0.0243
         : individual accs = ['0.817345', '0.834404', '0.825043', '0.828756', '0.824982', '0.827618', '0.833055', '0.832145', '0.840134', '0.830722', '0.820420', '0.818984', '0.822868', '0.834167', '0.831194', '0.823778', '0.831447', '0.820703', '0.829824', '0.815407']
         : correct/total = [(3374, 4128), (3507, 4203), (3367, 4081), (3591, 4333), (3375, 4091), (3548, 4287), (3493, 4193), (3619, 4349), (3521, 4191), (3553, 4277), (3399, 4143), (3434, 4193), (3368, 4093), (3501, 4197), (3368, 4052), (3319, 4029), (3453, 4153), (3433, 4183), (3389, 4084), (3366, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8305 ± 0.0072 | min=0.8118 max=0.8421
         : test loss mean=0.5568 ± 0.0210
         : individual accs = ['0.817345', '0.833452', '0.829944', '0.837988', '0.828893', '0.836249', '0.836871', '0.828696', '0.829874', '0.825812', '0.826937', '0.830909', '0.832641', '0.838218', '0.842053', '0.836932', '0.822538', '0.828114', '0.833986', '0.811773']
         : correct/total = [(3374, 4128), (3503, 4203), (3387, 4081), (3631, 4333), (3391, 4091), (3585, 4287), (3509, 4193), (3604, 4349), (3478, 4191), (3532, 4277), (3426, 4143), (3484, 4193), (3408, 4093), (3518, 4197), (3412, 4052), (3372, 4029), (3416, 4153), (3464, 4183), (3406, 4084), (3351, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8371 ± 0.0064 | min=0.8258 max=0.8518
         : test loss mean=0.5332 ± 0.0200
         : individual accs = ['0.825824', '0.840590', '0.834844', '0.839141', '0.830604', '0.839515', '0.846888', '0.842493', '0.851825', '0.839373', '0.831764', '0.829001', '0.838260', '0.838218', '0.840079', '0.840655', '0.838189', '0.831222', '0.837169', '0.826550']
         : correct/total = [(3409, 4128), (3533, 4203), (3407, 4081), (3636, 4333), (3398, 4091), (3599, 4287), (3551, 4193), (3664, 4349), (3570, 4191), (3590, 4277), (3446, 4143), (3476, 4193), (3431, 4093), (3518, 4197), (3404, 4052), (3387, 4029), (3481, 4153), (3477, 4183), (3419, 4084), (3412, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8415 ± 0.0064 | min=0.8290 max=0.8502
         : test loss mean=0.5140 ± 0.0174
         : individual accs = ['0.834060', '0.846776', '0.835089', '0.844450', '0.832070', '0.843014', '0.850227', '0.848701', '0.845860', '0.844517', '0.831523', '0.834009', '0.842170', '0.846795', '0.845015', '0.847853', '0.846617', '0.844370', '0.838639', '0.828973']
         : correct/total = [(3443, 4128), (3559, 4203), (3408, 4081), (3659, 4333), (3404, 4091), (3614, 4287), (3565, 4193), (3691, 4349), (3545, 4191), (3612, 4277), (3445, 4143), (3497, 4193), (3447, 4093), (3554, 4197), (3424, 4052), (3416, 4029), (3516, 4153), (3532, 4183), (3425, 4084), (3422, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: sketchguard
Overall test accuracy: mean=0.8415 ± 0.0064

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 13.512s (98.7%)
  - Filtering time: 0.013s (0.1%)
  - Aggregation time: 0.163s (1.2%)
  - Total time: 13.687s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
