Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5158 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.511285', '0.506897', '0.517794', '0.517031', '0.515598', '0.509284', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (589, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (576, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5159, honest: 0.5158
Round 002: test acc mean=0.4941 ± 0.0131 | min=0.4715 max=0.5199
         : test loss mean=12.5789 ± 12.0455
         : individual accs = ['0.511404', '0.497409', '0.506655', '0.471503', '0.478836', '0.485590', '0.496943', '0.496007', '0.477993', '0.511525', '0.499126', '0.499556', '0.478299', '0.493103', '0.491993', '0.483843', '0.519931', '0.506631', '0.476232', '0.499562']
         : correct/total = [(583, 1140), (576, 1158), (571, 1127), (546, 1158), (543, 1134), (556, 1145), (569, 1145), (559, 1127), (543, 1136), (577, 1128), (571, 1144), (562, 1125), (551, 1152), (572, 1160), (553, 1124), (554, 1145), (600, 1154), (573, 1131), (551, 1157), (570, 1141)]
         : compromised: 0.4891, honest: 0.5017
Round 003: test acc mean=0.5151 ± 0.0166 | min=0.4847 max=0.5625
         : test loss mean=1.0370 ± 0.3945
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.526455', '0.484716', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (597, 1134), (555, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5143, honest: 0.5164
Round 004: test acc mean=0.5795 ± 0.0598 | min=0.4898 max=0.6797
         : test loss mean=6.6130 ± 6.0880
         : individual accs = ['0.670175', '0.568221', '0.559006', '0.531088', '0.650794', '0.648035', '0.523144', '0.679681', '0.658451', '0.582447', '0.601399', '0.489778', '0.629340', '0.503448', '0.491103', '0.538865', '0.539861', '0.564987', '0.541054', '0.619632']
         : correct/total = [(764, 1140), (658, 1158), (630, 1127), (615, 1158), (738, 1134), (742, 1145), (599, 1145), (766, 1127), (748, 1136), (657, 1128), (688, 1144), (551, 1125), (725, 1152), (584, 1160), (552, 1124), (617, 1145), (623, 1154), (639, 1131), (626, 1157), (707, 1141)]
         : compromised: 0.5603, honest: 0.6084
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 006: test acc mean=0.6433 ± 0.0597 | min=0.5302 max=0.7596
         : test loss mean=5.8534 ± 3.1178
         : individual accs = ['0.759649', '0.645078', '0.579414', '0.694301', '0.653439', '0.629694', '0.628821', '0.678793', '0.720070', '0.640071', '0.602273', '0.552000', '0.729167', '0.530172', '0.569395', '0.618341', '0.653380', '0.671088', '0.710458', '0.601227']
         : correct/total = [(866, 1140), (747, 1158), (653, 1127), (804, 1158), (741, 1134), (721, 1145), (720, 1145), (765, 1127), (818, 1136), (722, 1128), (689, 1144), (621, 1125), (840, 1152), (615, 1160), (640, 1124), (708, 1145), (754, 1154), (759, 1131), (822, 1157), (686, 1141)]
         : compromised: 0.6374, honest: 0.6522
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8874 ± 0.1558
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 008: test acc mean=0.6752 ± 0.0663 | min=0.5612 max=0.8057
         : test loss mean=5.3731 ± 3.2831
         : individual accs = ['0.792982', '0.707254', '0.582076', '0.805699', '0.660494', '0.633188', '0.658515', '0.668146', '0.764085', '0.687057', '0.621503', '0.592889', '0.734375', '0.561207', '0.697509', '0.625328', '0.675043', '0.714412', '0.714780', '0.606486']
         : correct/total = [(904, 1140), (819, 1158), (656, 1127), (933, 1158), (749, 1134), (725, 1145), (754, 1145), (753, 1127), (868, 1136), (775, 1128), (711, 1144), (667, 1125), (846, 1152), (651, 1160), (784, 1124), (716, 1145), (779, 1154), (808, 1131), (827, 1157), (692, 1141)]
         : compromised: 0.6777, honest: 0.6713
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 010: test acc mean=0.6839 ± 0.0644 | min=0.5787 max=0.8048
         : test loss mean=5.3081 ± 3.1154
         : individual accs = ['0.801754', '0.707254', '0.600710', '0.804836', '0.700176', '0.654148', '0.698690', '0.729370', '0.762324', '0.706560', '0.641608', '0.578667', '0.742188', '0.588793', '0.645907', '0.614847', '0.655979', '0.689655', '0.724287', '0.630149']
         : correct/total = [(914, 1140), (819, 1158), (677, 1127), (932, 1158), (794, 1134), (749, 1145), (800, 1145), (822, 1127), (866, 1136), (797, 1128), (734, 1144), (651, 1125), (855, 1152), (683, 1160), (726, 1124), (704, 1145), (757, 1154), (780, 1131), (838, 1157), (719, 1141)]
         : compromised: 0.6761, honest: 0.6955

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.6761, Honest: 0.6955
Overall test accuracy: mean=0.6839 ± 0.0644

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.754s (38.3%)
  - Filtering time: 0.890s (45.3%)
  - Aggregation time: 0.322s (16.4%)
  - Total time: 1.966s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
