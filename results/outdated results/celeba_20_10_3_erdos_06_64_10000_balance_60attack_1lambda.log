Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5142 ± 0.0175 | min=0.4774 max=0.5555
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.525043', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.555458', '0.491135', '0.525350', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.515598', '0.490716', '0.533276', '0.517967']
         : correct/total = [(603, 1140), (608, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (631, 1136), (554, 1128), (601, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (555, 1131), (617, 1157), (591, 1141)]
         : compromised: 0.5132, honest: 0.5158
Round 002: test acc mean=0.5028 ± 0.0245 | min=0.4419 max=0.5452
         : test loss mean=3.0752 ± 2.6027
         : individual accs = ['0.508772', '0.521589', '0.533274', '0.537133', '0.477072', '0.518777', '0.475109', '0.499556', '0.441901', '0.545213', '0.489510', '0.504889', '0.478299', '0.529310', '0.500890', '0.495197', '0.506066', '0.519894', '0.487468', '0.486415']
         : correct/total = [(580, 1140), (604, 1158), (601, 1127), (622, 1158), (541, 1134), (594, 1145), (544, 1145), (563, 1127), (502, 1136), (615, 1128), (560, 1144), (568, 1125), (551, 1152), (614, 1160), (563, 1124), (567, 1145), (584, 1154), (588, 1131), (564, 1157), (555, 1141)]
         : compromised: 0.5057, honest: 0.4985
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.3218 ± 0.2616
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 004: test acc mean=0.5683 ± 0.0238 | min=0.5355 max=0.6242
         : test loss mean=6.5335 ± 2.7481
         : individual accs = ['0.544737', '0.539724', '0.557232', '0.599309', '0.606702', '0.539738', '0.544105', '0.563443', '0.581866', '0.578901', '0.588287', '0.583111', '0.570312', '0.543103', '0.555160', '0.569432', '0.535529', '0.624226', '0.569576', '0.571429']
         : correct/total = [(621, 1140), (625, 1158), (628, 1127), (694, 1158), (688, 1134), (618, 1145), (623, 1145), (635, 1127), (661, 1136), (653, 1128), (673, 1144), (656, 1125), (657, 1152), (630, 1160), (624, 1124), (652, 1145), (618, 1154), (706, 1131), (659, 1157), (652, 1141)]
         : compromised: 0.5694, honest: 0.5666
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9789 ± 0.0943
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 006: test acc mean=0.6798 ± 0.0483 | min=0.5546 max=0.7816
         : test loss mean=8.1879 ± 3.1946
         : individual accs = ['0.687719', '0.706390', '0.624667', '0.725389', '0.723104', '0.691703', '0.675983', '0.675244', '0.636444', '0.698582', '0.736888', '0.683556', '0.676215', '0.651724', '0.654804', '0.554585', '0.635182', '0.781609', '0.730337', '0.645925']
         : correct/total = [(784, 1140), (818, 1158), (704, 1127), (840, 1158), (820, 1134), (792, 1145), (774, 1145), (761, 1127), (723, 1136), (788, 1128), (843, 1144), (769, 1125), (779, 1152), (756, 1160), (736, 1124), (635, 1145), (733, 1154), (884, 1131), (845, 1157), (737, 1141)]
         : compromised: 0.6765, honest: 0.6848
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8826 ± 0.0455
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 008: test acc mean=0.7154 ± 0.0573 | min=0.5285 max=0.8249
         : test loss mean=nan ± nan
         : individual accs = ['0.723684', '0.759931', '0.723159', '0.528497', '0.778660', '0.713537', '0.707424', '0.684117', '0.694542', '0.751773', '0.694056', '0.748444', '0.771701', '0.664655', '0.701068', '0.696070', '0.707106', '0.824934', '0.747623', '0.687117']
         : correct/total = [(825, 1140), (880, 1158), (815, 1127), (612, 1158), (883, 1134), (817, 1145), (810, 1145), (771, 1127), (789, 1136), (848, 1128), (794, 1144), (842, 1125), (889, 1152), (771, 1160), (788, 1124), (797, 1145), (816, 1154), (933, 1131), (865, 1157), (784, 1141)]
         : compromised: 0.7145, honest: 0.7167
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8769 ± 0.0409
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 010: test acc mean=0.7339 ± 0.0394 | min=0.6801 max=0.8435
         : test loss mean=8.0894 ± 2.7027
         : individual accs = ['0.692982', '0.767703', '0.731145', '0.778066', '0.753086', '0.737118', '0.725764', '0.688554', '0.712148', '0.770390', '0.680070', '0.767111', '0.747396', '0.684483', '0.705516', '0.711790', '0.704506', '0.843501', '0.762316', '0.713409']
         : correct/total = [(790, 1140), (889, 1158), (824, 1127), (901, 1158), (854, 1134), (844, 1145), (831, 1145), (776, 1127), (809, 1136), (869, 1128), (778, 1144), (863, 1125), (861, 1152), (794, 1160), (793, 1124), (815, 1145), (813, 1154), (954, 1131), (882, 1157), (814, 1141)]
         : compromised: 0.7457, honest: 0.7161

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.7457, Honest: 0.7161
Overall test accuracy: mean=0.7339 ± 0.0394

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.943s (42.6%)
  - Filtering time: 2.084s (45.7%)
  - Aggregation time: 0.533s (11.7%)
  - Total time: 4.559s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
