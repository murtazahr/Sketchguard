Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 002: test acc mean=0.4837 ± 0.0150 | min=0.4375 max=0.5089
         : test loss mean=11.3970 ± 3.9996
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.477954', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.501333', '0.477431', '0.493966', '0.482206', '0.482969', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (573, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4829, honest: 0.4855
Round 003: test acc mean=0.5092 ± 0.0202 | min=0.4747 max=0.5625
         : test loss mean=0.7024 ± 0.0148
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.528497', '0.477954', '0.485590', '0.478603', '0.496007', '0.562500', '0.508865', '0.474650', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (612, 1158), (542, 1134), (556, 1145), (548, 1145), (559, 1127), (639, 1136), (574, 1128), (543, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5130, honest: 0.5003
Round 004: test acc mean=0.5745 ± 0.0431 | min=0.4384 max=0.6413
         : test loss mean=8.8625 ± 5.2949
         : individual accs = ['0.537719', '0.558722', '0.628217', '0.551813', '0.555556', '0.524017', '0.586900', '0.569654', '0.438380', '0.593085', '0.615385', '0.616000', '0.563368', '0.601724', '0.572064', '0.577293', '0.577990', '0.611848', '0.641314', '0.568799']
         : correct/total = [(613, 1140), (647, 1158), (708, 1127), (639, 1158), (630, 1134), (600, 1145), (672, 1145), (642, 1127), (498, 1136), (669, 1128), (704, 1144), (693, 1125), (649, 1152), (698, 1160), (643, 1124), (661, 1145), (667, 1154), (692, 1131), (742, 1157), (649, 1141)]
         : compromised: 0.5743, honest: 0.5749
Round 005: test acc mean=0.4836 ± 0.0150 | min=0.4375 max=0.5089
         : test loss mean=0.6952 ± 0.0015
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.477954', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.501333', '0.477431', '0.493103', '0.482206', '0.482969', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4828, honest: 0.4855
Round 006: test acc mean=0.6307 ± 0.0336 | min=0.5723 max=0.7168
         : test loss mean=12.0606 ± 2.9610
         : individual accs = ['0.631579', '0.716753', '0.672582', '0.596718', '0.572310', '0.647162', '0.612227', '0.636202', '0.588028', '0.603723', '0.599650', '0.683556', '0.628472', '0.601724', '0.629004', '0.641048', '0.639515', '0.616269', '0.646500', '0.651183']
         : correct/total = [(720, 1140), (830, 1158), (758, 1127), (691, 1158), (649, 1134), (741, 1145), (701, 1145), (717, 1127), (668, 1136), (681, 1128), (686, 1144), (769, 1125), (724, 1152), (698, 1160), (707, 1124), (734, 1145), (738, 1154), (697, 1131), (748, 1157), (743, 1141)]
         : compromised: 0.6379, honest: 0.6138
Round 007: test acc mean=0.5189 ± 0.0175 | min=0.4911 max=0.5625
         : test loss mean=0.6924 ± 0.0007
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.533679', '0.521164', '0.556332', '0.521397', '0.503106', '0.562500', '0.491135', '0.523601', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.523397', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (618, 1158), (591, 1134), (637, 1145), (597, 1145), (567, 1127), (639, 1136), (554, 1128), (599, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (604, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5205, honest: 0.5152
Round 008: test acc mean=0.6513 ± 0.0342 | min=0.5946 max=0.7191
         : test loss mean=11.6707 ± 3.2417
         : individual accs = ['0.635965', '0.657168', '0.661047', '0.643351', '0.606702', '0.638428', '0.598253', '0.625555', '0.637324', '0.610816', '0.638986', '0.679111', '0.594618', '0.673276', '0.680605', '0.711790', '0.654246', '0.671088', '0.719101', '0.688869']
         : correct/total = [(725, 1140), (761, 1158), (745, 1127), (745, 1158), (688, 1134), (731, 1145), (685, 1145), (705, 1127), (724, 1136), (689, 1128), (731, 1144), (764, 1125), (685, 1152), (781, 1160), (765, 1124), (815, 1145), (755, 1154), (759, 1131), (832, 1157), (786, 1141)]
         : compromised: 0.6610, honest: 0.6287
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.6927 ± 0.0017
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 010: test acc mean=0.6663 ± 0.0223 | min=0.6273 max=0.7205
         : test loss mean=10.4345 ± 2.2586
         : individual accs = ['0.663158', '0.655440', '0.661934', '0.678756', '0.638448', '0.679476', '0.655022', '0.627329', '0.652289', '0.647163', '0.661713', '0.679111', '0.667535', '0.659483', '0.669039', '0.720524', '0.651646', '0.689655', '0.714780', '0.652936']
         : correct/total = [(756, 1140), (759, 1158), (746, 1127), (786, 1158), (724, 1134), (778, 1145), (750, 1145), (707, 1127), (741, 1136), (730, 1128), (757, 1144), (764, 1125), (769, 1152), (765, 1160), (752, 1124), (825, 1145), (752, 1154), (780, 1131), (827, 1157), (745, 1141)]
         : compromised: 0.6740, honest: 0.6482

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.6740, Honest: 0.6482
Overall test accuracy: mean=0.6663 ± 0.0223

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 2.998s (43.4%)
  - Filtering time: 3.153s (45.6%)
  - Aggregation time: 0.760s (11.0%)
  - Total time: 6.911s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
