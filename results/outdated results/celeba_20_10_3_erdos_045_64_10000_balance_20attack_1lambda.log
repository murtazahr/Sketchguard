Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5088 ± 0.0238 | min=0.4569 max=0.5616
         : test loss mean=40.2893 ± 92.5930
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.537133', '0.525573', '0.503930', '0.487336', '0.503106', '0.561620', '0.491135', '0.525350', '0.456889', '0.539931', '0.506897', '0.482206', '0.489956', '0.517331', '0.508400', '0.524633', '0.483786']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (622, 1158), (596, 1134), (577, 1145), (558, 1145), (567, 1127), (638, 1136), (554, 1128), (601, 1144), (514, 1125), (622, 1152), (588, 1160), (542, 1124), (561, 1145), (597, 1154), (575, 1131), (607, 1157), (552, 1141)]
         : compromised: 0.5148, honest: 0.5073
Round 002: test acc mean=0.5202 ± 0.0274 | min=0.4865 max=0.5790
         : test loss mean=2.2504 ± 3.1605
         : individual accs = ['0.524561', '0.514680', '0.493345', '0.532815', '0.565256', '0.486463', '0.579039', '0.506655', '0.495599', '0.491135', '0.553322', '0.570667', '0.522569', '0.506897', '0.526690', '0.503930', '0.487868', '0.508400', '0.531547', '0.502191']
         : correct/total = [(598, 1140), (596, 1158), (556, 1127), (617, 1158), (641, 1134), (557, 1145), (663, 1145), (571, 1127), (563, 1136), (554, 1128), (633, 1144), (642, 1125), (602, 1152), (588, 1160), (592, 1124), (577, 1145), (563, 1154), (575, 1131), (615, 1157), (573, 1141)]
         : compromised: 0.5061, honest: 0.5237
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.0613 ± 0.3240
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 004: test acc mean=0.5151 ± 0.0120 | min=0.4911 max=0.5379
         : test loss mean=25.6859 ± 25.7854
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.524691', '0.513537', '0.521397', '0.503993', '0.537852', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.510399', '0.508400', '0.522040', '0.520596']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (595, 1134), (588, 1145), (597, 1145), (568, 1127), (611, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (589, 1154), (575, 1131), (604, 1157), (594, 1141)]
         : compromised: 0.5129, honest: 0.5156
Round 005: test acc mean=0.5130 ± 0.0181 | min=0.4822 max=0.5625
         : test loss mean=0.7564 ± 0.0646
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.482206', '0.520524', '0.515598', '0.508400', '0.522040', '0.482910']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (596, 1145), (595, 1154), (575, 1131), (604, 1157), (551, 1141)]
         : compromised: 0.5131, honest: 0.5130
Round 006: test acc mean=0.5045 ± 0.0188 | min=0.4410 max=0.5272
         : test loss mean=6.0155 ± 7.2436
         : individual accs = ['0.527193', '0.507772', '0.493345', '0.502591', '0.521164', '0.515284', '0.525764', '0.493345', '0.441021', '0.491135', '0.521853', '0.495111', '0.522569', '0.506897', '0.489324', '0.510917', '0.516464', '0.508400', '0.503889', '0.495180']
         : correct/total = [(601, 1140), (588, 1158), (556, 1127), (582, 1158), (591, 1134), (590, 1145), (602, 1145), (556, 1127), (501, 1136), (554, 1128), (597, 1144), (557, 1125), (602, 1152), (588, 1160), (550, 1124), (585, 1145), (596, 1154), (575, 1131), (583, 1157), (565, 1141)]
         : compromised: 0.5133, honest: 0.5023
Round 007: test acc mean=0.5163 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8379 ± 0.0708
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.516214']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (589, 1141)]
         : compromised: 0.5131, honest: 0.5171
Round 008: test acc mean=0.5169 ± 0.0165 | min=0.4911 max=0.5599
         : test loss mean=4.4016 ± 4.9100
         : individual accs = ['0.524561', '0.508636', '0.511979', '0.538860', '0.535273', '0.514410', '0.510917', '0.503106', '0.559859', '0.491135', '0.519231', '0.516444', '0.522569', '0.506897', '0.494662', '0.516157', '0.494801', '0.508400', '0.518583', '0.540754']
         : correct/total = [(598, 1140), (589, 1158), (577, 1127), (624, 1158), (607, 1134), (589, 1145), (585, 1145), (567, 1127), (636, 1136), (554, 1128), (594, 1144), (581, 1125), (602, 1152), (588, 1160), (556, 1124), (591, 1145), (571, 1154), (575, 1131), (600, 1157), (617, 1141)]
         : compromised: 0.5131, honest: 0.5178
Round 009: test acc mean=0.5173 ± 0.0141 | min=0.4911 max=0.5625
         : test loss mean=1.1568 ± 0.4299
         : individual accs = ['0.528947', '0.508636', '0.512866', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (578, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5184
Round 010: test acc mean=0.4969 ± 0.0244 | min=0.4384 max=0.5368
         : test loss mean=3.9807 ± 6.0291
         : individual accs = ['0.523684', '0.510363', '0.536823', '0.523316', '0.522046', '0.514410', '0.478603', '0.495120', '0.438380', '0.491135', '0.472902', '0.501333', '0.522569', '0.506897', '0.482206', '0.454148', '0.484402', '0.508400', '0.489196', '0.482033']
         : correct/total = [(597, 1140), (591, 1158), (605, 1127), (606, 1158), (592, 1134), (589, 1145), (548, 1145), (558, 1127), (498, 1136), (554, 1128), (541, 1144), (564, 1125), (602, 1152), (588, 1160), (542, 1124), (520, 1145), (559, 1154), (575, 1131), (566, 1157), (550, 1141)]
         : compromised: 0.5131, honest: 0.4929

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.5131, Honest: 0.4929
Overall test accuracy: mean=0.4969 ± 0.0244

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.553s (42.0%)
  - Filtering time: 1.692s (45.8%)
  - Aggregation time: 0.449s (12.2%)
  - Total time: 3.695s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
