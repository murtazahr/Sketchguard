Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 002: test acc mean=0.5041 ± 0.0224 | min=0.4724 max=0.5581
         : test loss mean=nan ± nan
         : individual accs = ['0.475439', '0.518135', '0.493345', '0.472366', '0.477954', '0.514410', '0.476856', '0.543035', '0.558099', '0.489362', '0.524476', '0.501333', '0.522569', '0.506897', '0.517794', '0.499563', '0.502600', '0.509284', '0.477960', '0.500438']
         : correct/total = [(542, 1140), (600, 1158), (556, 1127), (547, 1158), (542, 1134), (589, 1145), (546, 1145), (612, 1127), (634, 1136), (552, 1128), (600, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (572, 1145), (580, 1154), (576, 1131), (553, 1157), (571, 1141)]
         : compromised: 0.5076, honest: 0.4988
Round 003: test acc mean=0.5046 ± 0.0211 | min=0.4692 max=0.5572
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.514680', '0.479718', '0.485590', '0.488210', '0.496007', '0.469190', '0.517730', '0.521853', '0.523556', '0.522569', '0.506897', '0.517794', '0.557205', '0.507799', '0.508400', '0.477960', '0.482910']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (596, 1158), (544, 1134), (556, 1145), (559, 1145), (559, 1127), (533, 1136), (584, 1128), (597, 1144), (589, 1125), (602, 1152), (588, 1160), (582, 1124), (638, 1145), (586, 1154), (575, 1131), (553, 1157), (551, 1141)]
         : compromised: 0.5057, honest: 0.5029
Round 004: test acc mean=0.4980 ± 0.0191 | min=0.4375 max=0.5226
         : test loss mean=nan ± nan
         : individual accs = ['0.497368', '0.491364', '0.493345', '0.471503', '0.490300', '0.514410', '0.517031', '0.493345', '0.437500', '0.491135', '0.520105', '0.501333', '0.522569', '0.506897', '0.517794', '0.506550', '0.515598', '0.493369', '0.490061', '0.489045']
         : correct/total = [(567, 1140), (569, 1158), (556, 1127), (546, 1158), (556, 1134), (589, 1145), (592, 1145), (556, 1127), (497, 1136), (554, 1128), (595, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (580, 1145), (595, 1154), (558, 1131), (567, 1157), (558, 1141)]
         : compromised: 0.4956, honest: 0.5017
Round 005: test acc mean=0.5074 ± 0.0205 | min=0.4742 max=0.5397
         : test loss mean=nan ± nan
         : individual accs = ['0.485965', '0.502591', '0.493345', '0.531088', '0.539683', '0.514410', '0.474236', '0.496894', '0.535211', '0.508865', '0.474650', '0.538667', '0.522569', '0.506897', '0.517794', '0.517031', '0.483536', '0.508400', '0.477960', '0.518843']
         : correct/total = [(554, 1140), (582, 1158), (556, 1127), (615, 1158), (612, 1134), (589, 1145), (543, 1145), (560, 1127), (608, 1136), (574, 1128), (543, 1144), (606, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (558, 1154), (575, 1131), (553, 1157), (592, 1141)]
         : compromised: 0.5138, honest: 0.4978
Round 006: test acc mean=0.5041 ± 0.0201 | min=0.4737 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.473684', '0.525907', '0.493345', '0.498273', '0.503527', '0.486463', '0.488210', '0.506655', '0.562500', '0.496454', '0.499126', '0.498667', '0.522569', '0.506897', '0.517794', '0.483843', '0.485269', '0.531388', '0.513397', '0.487292']
         : correct/total = [(540, 1140), (609, 1158), (556, 1127), (577, 1158), (571, 1134), (557, 1145), (559, 1145), (571, 1127), (639, 1136), (560, 1128), (571, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (554, 1145), (560, 1154), (601, 1131), (594, 1157), (556, 1141)]
         : compromised: 0.5118, honest: 0.4925
Round 007: test acc mean=0.5040 ± 0.0230 | min=0.4384 max=0.5407
         : test loss mean=nan ± nan
         : individual accs = ['0.506140', '0.501727', '0.493345', '0.500864', '0.482363', '0.512664', '0.532751', '0.471162', '0.438380', '0.510638', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.489083', '0.540728', '0.508400', '0.531547', '0.488168']
         : correct/total = [(577, 1140), (581, 1158), (556, 1127), (580, 1158), (547, 1134), (587, 1145), (610, 1145), (531, 1127), (498, 1136), (576, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (560, 1145), (624, 1154), (575, 1131), (615, 1157), (557, 1141)]
         : compromised: 0.5018, honest: 0.5072
Round 008: test acc mean=0.4929 ± 0.0213 | min=0.4375 max=0.5226
         : test loss mean=nan ± nan
         : individual accs = ['0.471930', '0.491364', '0.493345', '0.493955', '0.477072', '0.514410', '0.455022', '0.497782', '0.437500', '0.478723', '0.478147', '0.514667', '0.522569', '0.506897', '0.517794', '0.487336', '0.515598', '0.508400', '0.498704', '0.496056']
         : correct/total = [(538, 1140), (569, 1158), (556, 1127), (572, 1158), (541, 1134), (589, 1145), (521, 1145), (561, 1127), (497, 1136), (540, 1128), (547, 1144), (579, 1125), (602, 1152), (588, 1160), (582, 1124), (558, 1145), (595, 1154), (575, 1131), (577, 1157), (566, 1141)]
         : compromised: 0.4989, honest: 0.4838
Round 009: test acc mean=0.5043 ± 0.0210 | min=0.4512 max=0.5396
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.513817', '0.493345', '0.478411', '0.522928', '0.485590', '0.520524', '0.503993', '0.539613', '0.491135', '0.521853', '0.514667', '0.522569', '0.506897', '0.517794', '0.482969', '0.482669', '0.491600', '0.451167', '0.516214']
         : correct/total = [(603, 1140), (595, 1158), (556, 1127), (554, 1158), (593, 1134), (556, 1145), (596, 1145), (568, 1127), (613, 1136), (554, 1128), (597, 1144), (579, 1125), (602, 1152), (588, 1160), (582, 1124), (553, 1145), (557, 1154), (556, 1131), (522, 1157), (589, 1141)]
         : compromised: 0.4999, honest: 0.5110
Round 010: test acc mean=0.5064 ± 0.0202 | min=0.4428 max=0.5316
         : test loss mean=nan ± nan
         : individual accs = ['0.531579', '0.508636', '0.493345', '0.474957', '0.523810', '0.514410', '0.514410', '0.523514', '0.442782', '0.508865', '0.525350', '0.499556', '0.522569', '0.506897', '0.517794', '0.491703', '0.500000', '0.491600', '0.519447', '0.517090']
         : correct/total = [(606, 1140), (589, 1158), (556, 1127), (550, 1158), (594, 1134), (589, 1145), (589, 1145), (590, 1127), (503, 1136), (574, 1128), (601, 1144), (562, 1125), (602, 1152), (588, 1160), (582, 1124), (563, 1145), (577, 1154), (556, 1131), (601, 1157), (590, 1141)]
         : compromised: 0.4986, honest: 0.5181

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: d-fedavg
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.4986, Honest: 0.5181
Overall test accuracy: mean=0.5064 ± 0.0202
