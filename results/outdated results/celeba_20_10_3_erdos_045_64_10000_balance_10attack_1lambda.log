Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5158 ± 0.0167 | min=0.4911 max=0.5651
         : test loss mean=1.9635 ± 2.7382
         : individual accs = ['0.528947', '0.507772', '0.493345', '0.536269', '0.522046', '0.514410', '0.529258', '0.503993', '0.565141', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.508897', '0.517031', '0.515598', '0.511052', '0.522040', '0.495180']
         : correct/total = [(603, 1140), (588, 1158), (556, 1127), (621, 1158), (592, 1134), (589, 1145), (606, 1145), (568, 1127), (642, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (572, 1124), (592, 1145), (595, 1154), (578, 1131), (604, 1157), (565, 1141)]
         : compromised: 0.5107, honest: 0.5163
Round 002: test acc mean=0.5191 ± 0.0187 | min=0.4911 max=0.5679
         : test loss mean=2.5830 ± 5.9651
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.524017', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.516157', '0.515598', '0.511936', '0.522040', '0.567923']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (600, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (591, 1145), (595, 1154), (579, 1131), (604, 1157), (648, 1141)]
         : compromised: 0.5107, honest: 0.5201
Round 003: test acc mean=0.5181 ± 0.0170 | min=0.4911 max=0.5643
         : test loss mean=1.8805 ± 2.5312
         : individual accs = ['0.535088', '0.512090', '0.493345', '0.532815', '0.544974', '0.514410', '0.521397', '0.503993', '0.564261', '0.491135', '0.525350', '0.496000', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.516214']
         : correct/total = [(610, 1140), (593, 1158), (556, 1127), (617, 1158), (618, 1134), (589, 1145), (597, 1145), (568, 1127), (641, 1136), (554, 1128), (601, 1144), (558, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (589, 1141)]
         : compromised: 0.5107, honest: 0.5189
Round 004: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.3437 ± 0.4265
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 005: test acc mean=0.5153 ± 0.0130 | min=0.4911 max=0.5484
         : test loss mean=0.8775 ± 0.1287
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.518777', '0.503993', '0.548415', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.513585']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (594, 1145), (568, 1127), (623, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (586, 1141)]
         : compromised: 0.5107, honest: 0.5158
Round 006: test acc mean=0.5169 ± 0.0147 | min=0.4911 max=0.5625
         : test loss mean=1.8785 ± 1.8475
         : individual accs = ['0.528947', '0.508636', '0.497782', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.522530', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (561, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (603, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5176
Round 007: test acc mean=0.5493 ± 0.0405 | min=0.5069 max=0.6716
         : test loss mean=1.2339 ± 1.3272
         : individual accs = ['0.618421', '0.569948', '0.540373', '0.568221', '0.590829', '0.515284', '0.519651', '0.580302', '0.562500', '0.533688', '0.530594', '0.518222', '0.537326', '0.506897', '0.518683', '0.523144', '0.671577', '0.513705', '0.547969', '0.517967']
         : correct/total = [(705, 1140), (660, 1158), (609, 1127), (658, 1158), (670, 1134), (590, 1145), (595, 1145), (654, 1127), (639, 1136), (602, 1128), (607, 1144), (583, 1125), (619, 1152), (588, 1160), (583, 1124), (599, 1145), (775, 1154), (581, 1131), (634, 1157), (591, 1141)]
         : compromised: 0.5111, honest: 0.5535
Round 008: test acc mean=0.5852 ± 0.1066 | min=0.4987 max=0.8094
         : test loss mean=1.1967 ± 0.7403
         : individual accs = ['0.528947', '0.508636', '0.672582', '0.528497', '0.522046', '0.778166', '0.521397', '0.503993', '0.562500', '0.622340', '0.809441', '0.498667', '0.522569', '0.775862', '0.517794', '0.517031', '0.764298', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (758, 1127), (612, 1158), (592, 1134), (891, 1145), (597, 1145), (568, 1127), (639, 1136), (702, 1128), (926, 1144), (561, 1125), (602, 1152), (900, 1160), (582, 1124), (592, 1145), (882, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.7770, honest: 0.5638
Round 009: test acc mean=0.6002 ± 0.1215 | min=0.5009 max=0.8449
         : test loss mean=0.6851 ± 0.1791
         : individual accs = ['0.528947', '0.508636', '0.779059', '0.567358', '0.522046', '0.730131', '0.550218', '0.503993', '0.500880', '0.740248', '0.811189', '0.523556', '0.522569', '0.783621', '0.517794', '0.517031', '0.844887', '0.508400', '0.522040', '0.520596']
         : correct/total = [(603, 1140), (589, 1158), (878, 1127), (657, 1158), (592, 1134), (836, 1145), (630, 1145), (568, 1127), (569, 1136), (835, 1128), (928, 1144), (589, 1125), (602, 1152), (909, 1160), (582, 1124), (592, 1145), (975, 1154), (575, 1131), (604, 1157), (594, 1141)]
         : compromised: 0.7569, honest: 0.5827
Round 010: test acc mean=0.7143 ± 0.1240 | min=0.5164 max=0.9133
         : test loss mean=0.7658 ± 0.6957
         : individual accs = ['0.837719', '0.806563', '0.827862', '0.636442', '0.737213', '0.698690', '0.522271', '0.833185', '0.565141', '0.833333', '0.825175', '0.516444', '0.763889', '0.721552', '0.524911', '0.771179', '0.913345', '0.664014', '0.770095', '0.517967']
         : correct/total = [(955, 1140), (934, 1158), (933, 1127), (737, 1158), (836, 1134), (800, 1145), (598, 1145), (939, 1127), (642, 1136), (940, 1128), (944, 1144), (581, 1125), (880, 1152), (837, 1160), (590, 1124), (883, 1145), (1054, 1154), (751, 1131), (891, 1157), (591, 1141)]
         : compromised: 0.7101, honest: 0.7148

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.7101, Honest: 0.7148
Overall test accuracy: mean=0.7143 ± 0.1240

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.539s (42.2%)
  - Filtering time: 1.676s (45.9%)
  - Aggregation time: 0.435s (11.9%)
  - Total time: 3.651s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
