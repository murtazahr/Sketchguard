Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 002: test acc mean=0.5318 ± 0.0555 | min=0.4720 max=0.6912
         : test loss mean=15.8855 ± 22.0845
         : individual accs = ['0.530702', '0.683938', '0.691216', '0.528497', '0.523810', '0.514410', '0.479476', '0.503993', '0.563380', '0.491135', '0.525350', '0.472000', '0.504340', '0.506897', '0.515125', '0.539738', '0.510399', '0.508400', '0.525497', '0.517967']
         : correct/total = [(605, 1140), (792, 1158), (779, 1127), (612, 1158), (594, 1134), (589, 1145), (549, 1145), (568, 1127), (640, 1136), (554, 1128), (601, 1144), (531, 1125), (581, 1152), (588, 1160), (579, 1124), (618, 1145), (589, 1154), (575, 1131), (608, 1157), (591, 1141)]
         : compromised: 0.5085, honest: 0.5376
Round 003: test acc mean=0.5488 ± 0.0759 | min=0.4973 max=0.8299
         : test loss mean=0.9903 ± 0.4756
         : individual accs = ['0.661404', '0.829879', '0.617569', '0.528497', '0.522046', '0.569432', '0.521397', '0.503993', '0.565141', '0.497340', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.524891', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(754, 1140), (961, 1158), (696, 1127), (612, 1158), (592, 1134), (652, 1145), (597, 1145), (568, 1127), (642, 1136), (561, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (601, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5268, honest: 0.5543
Round 004: test acc mean=0.5772 ± 0.0925 | min=0.4947 max=0.8541
         : test loss mean=5.3092 ± 6.3805
         : individual accs = ['0.591228', '0.854059', '0.766637', '0.661485', '0.539683', '0.514410', '0.511790', '0.600710', '0.568662', '0.494681', '0.674825', '0.558222', '0.524306', '0.506897', '0.540925', '0.517031', '0.502600', '0.508400', '0.565255', '0.541630']
         : correct/total = [(674, 1140), (989, 1158), (864, 1127), (766, 1158), (612, 1134), (589, 1145), (586, 1145), (677, 1127), (646, 1136), (558, 1128), (772, 1144), (628, 1125), (604, 1152), (588, 1160), (608, 1124), (592, 1145), (580, 1154), (575, 1131), (654, 1157), (618, 1141)]
         : compromised: 0.5135, honest: 0.5931
Round 005: test acc mean=0.6328 ± 0.1365 | min=0.4987 max=0.8980
         : test loss mean=1.2408 ± 1.0528
         : individual accs = ['0.806140', '0.877375', '0.897959', '0.796200', '0.509700', '0.710044', '0.521397', '0.587400', '0.744718', '0.740248', '0.571678', '0.498667', '0.522569', '0.506897', '0.517794', '0.753712', '0.515598', '0.514589', '0.520311', '0.542507']
         : correct/total = [(919, 1140), (1016, 1158), (1012, 1127), (922, 1158), (578, 1134), (813, 1145), (597, 1145), (662, 1127), (846, 1136), (835, 1128), (654, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (863, 1145), (595, 1154), (582, 1131), (602, 1157), (619, 1141)]
         : compromised: 0.5635, honest: 0.6501
Round 006: test acc mean=0.6660 ± 0.1338 | min=0.4969 max=0.8964
         : test loss mean=2.2867 ± 2.5078
         : individual accs = ['0.821930', '0.896373', '0.882875', '0.664076', '0.581129', '0.514410', '0.543231', '0.700089', '0.857394', '0.779255', '0.814685', '0.496889', '0.533854', '0.506897', '0.636121', '0.632314', '0.623917', '0.508400', '0.574762', '0.751096']
         : correct/total = [(937, 1140), (1038, 1158), (995, 1127), (769, 1158), (659, 1134), (589, 1145), (622, 1145), (789, 1127), (974, 1136), (879, 1128), (932, 1144), (559, 1125), (615, 1152), (588, 1160), (715, 1124), (724, 1145), (720, 1154), (575, 1131), (665, 1157), (857, 1141)]
         : compromised: 0.5159, honest: 0.7035
Round 007: test acc mean=0.6795 ± 0.1644 | min=0.4987 max=0.9051
         : test loss mean=nan ± nan
         : individual accs = ['0.892982', '0.899827', '0.905058', '0.821244', '0.523810', '0.588646', '0.520524', '0.781721', '0.874120', '0.861702', '0.659965', '0.498667', '0.522569', '0.506897', '0.517794', '0.843668', '0.515598', '0.519010', '0.522040', '0.813322']
         : correct/total = [(1018, 1140), (1042, 1158), (1020, 1127), (951, 1158), (594, 1134), (674, 1145), (596, 1145), (881, 1127), (993, 1136), (972, 1128), (755, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (966, 1145), (595, 1154), (587, 1131), (604, 1157), (928, 1141)]
         : compromised: 0.5343, honest: 0.7158
Round 008: test acc mean=0.6893 ± 0.1316 | min=0.5084 max=0.8990
         : test loss mean=2.2034 ± 2.7907
         : individual accs = ['0.868421', '0.898964', '0.891748', '0.706390', '0.562610', '0.514410', '0.544978', '0.763975', '0.856514', '0.809397', '0.757867', '0.553778', '0.613715', '0.511207', '0.674377', '0.768559', '0.647314', '0.508400', '0.592913', '0.741455']
         : correct/total = [(990, 1140), (1041, 1158), (1005, 1127), (818, 1158), (638, 1134), (589, 1145), (624, 1145), (861, 1127), (973, 1136), (913, 1128), (867, 1144), (623, 1125), (707, 1152), (593, 1160), (758, 1124), (880, 1145), (747, 1154), (575, 1131), (686, 1157), (846, 1141)]
         : compromised: 0.5369, honest: 0.7275
Round 009: test acc mean=0.6885 ± 0.1735 | min=0.4987 max=0.9006
         : test loss mean=1.3637 ± 1.5081
         : individual accs = ['0.900000', '0.894646', '0.900621', '0.860967', '0.522928', '0.555459', '0.522271', '0.847382', '0.875000', '0.880319', '0.748252', '0.498667', '0.522569', '0.506897', '0.517794', '0.867249', '0.515598', '0.513705', '0.506482', '0.813322']
         : correct/total = [(1026, 1140), (1036, 1158), (1015, 1127), (997, 1158), (593, 1134), (636, 1145), (598, 1145), (955, 1127), (994, 1136), (993, 1128), (856, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (993, 1145), (595, 1154), (581, 1131), (586, 1157), (928, 1141)]
         : compromised: 0.5247, honest: 0.7295
Round 010: test acc mean=0.7067 ± 0.1538 | min=0.5069 max=0.9042
         : test loss mean=2.3436 ± 2.7993
         : individual accs = ['0.899123', '0.898100', '0.904170', '0.779793', '0.573192', '0.514410', '0.548472', '0.834073', '0.868838', '0.882092', '0.826049', '0.517333', '0.522569', '0.506897', '0.705516', '0.817467', '0.701040', '0.508400', '0.556612', '0.769500']
         : correct/total = [(1025, 1140), (1040, 1158), (1019, 1127), (903, 1158), (650, 1134), (589, 1145), (628, 1145), (940, 1127), (987, 1136), (995, 1128), (945, 1144), (582, 1125), (602, 1152), (588, 1160), (793, 1124), (936, 1145), (809, 1154), (575, 1131), (644, 1157), (878, 1141)]
         : compromised: 0.5131, honest: 0.7551

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.5131, Honest: 0.7551
Overall test accuracy: mean=0.7067 ± 0.1538

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.323s (31.8%)
  - Filtering time: 0.460s (45.2%)
  - Aggregation time: 0.234s (23.0%)
  - Total time: 1.017s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
