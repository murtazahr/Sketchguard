Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8482 ± 0.0828
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 002: test acc mean=0.5167 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7838 ± 0.0807
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.524017', '0.505768', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.519720']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (600, 1145), (570, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (593, 1141)]
         : compromised: 0.5167, honest: 0.5166
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 004: test acc mean=0.5021 ± 0.0191 | min=0.4437 max=0.5289
         : test loss mean=3865.1209 ± 10948.7948
         : individual accs = ['0.528947', '0.506045', '0.491571', '0.519862', '0.477954', '0.443668', '0.512664', '0.504880', '0.513204', '0.491135', '0.488636', '0.524444', '0.504340', '0.517241', '0.504448', '0.487336', '0.490468', '0.501326', '0.520311', '0.513585']
         : correct/total = [(603, 1140), (586, 1158), (554, 1127), (602, 1158), (542, 1134), (508, 1145), (587, 1145), (569, 1127), (583, 1136), (554, 1128), (559, 1144), (590, 1125), (581, 1152), (600, 1160), (567, 1124), (558, 1145), (566, 1154), (567, 1131), (602, 1157), (586, 1141)]
         : compromised: 0.5028, honest: 0.5010
Round 005: test acc mean=0.4971 ± 0.0210 | min=0.4375 max=0.5289
         : test loss mean=530.6845 ± 599.8061
         : individual accs = ['0.528947', '0.506045', '0.488909', '0.495682', '0.477954', '0.498690', '0.489083', '0.501331', '0.437500', '0.491135', '0.525350', '0.520889', '0.491319', '0.507759', '0.519573', '0.485590', '0.512998', '0.511936', '0.477960', '0.472393']
         : correct/total = [(603, 1140), (586, 1158), (551, 1127), (574, 1158), (542, 1134), (571, 1145), (560, 1145), (565, 1127), (497, 1136), (554, 1128), (601, 1144), (586, 1125), (566, 1152), (589, 1160), (584, 1124), (556, 1145), (592, 1154), (579, 1131), (553, 1157), (539, 1141)]
         : compromised: 0.4952, honest: 0.4999
Round 006: test acc mean=0.4980 ± 0.0303 | min=0.4375 max=0.5476
         : test loss mean=1241.4274 ± 3109.7210
         : individual accs = ['0.474561', '0.487910', '0.506655', '0.471503', '0.522046', '0.547598', '0.475983', '0.529725', '0.437500', '0.515071', '0.525350', '0.459556', '0.522569', '0.458621', '0.538256', '0.534498', '0.480936', '0.508400', '0.490061', '0.472393']
         : correct/total = [(541, 1140), (565, 1158), (571, 1127), (546, 1158), (592, 1134), (627, 1145), (545, 1145), (597, 1127), (497, 1136), (581, 1128), (601, 1144), (517, 1125), (602, 1152), (532, 1160), (605, 1124), (612, 1145), (555, 1154), (575, 1131), (567, 1157), (539, 1141)]
         : compromised: 0.4969, honest: 0.4995
Round 007: test acc mean=0.5148 ± 0.0166 | min=0.4911 max=0.5625
         : test loss mean=0.9303 ± 0.3970
         : individual accs = ['0.528947', '0.491364', '0.506655', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.501333', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.491600', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (569, 1158), (571, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (564, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5141, honest: 0.5158
Round 008: test acc mean=0.5162 ± 0.0152 | min=0.4911 max=0.5625
         : test loss mean=0.7219 ± 0.0448
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.491600', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5164, honest: 0.5158
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.6976 ± 0.0133
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 010: test acc mean=0.5149 ± 0.0158 | min=0.4911 max=0.5625
         : test loss mean=0.6933 ± 0.0018
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.492576', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (564, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5122

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.5167, Honest: 0.5122
Overall test accuracy: mean=0.5149 ± 0.0158

=== BALANCE SUMMARY ===
Node 0: acceptance=0.583
Node 1: acceptance=0.610
Node 2: acceptance=0.662
Node 3: acceptance=0.714
Node 4: acceptance=0.589
Node 5: acceptance=0.620
Node 6: acceptance=0.567
Node 7: acceptance=0.545
Node 8: acceptance=0.571
Node 9: acceptance=0.627
Node 10: acceptance=0.688
Node 11: acceptance=0.558
Node 12: acceptance=0.617
Node 13: acceptance=0.589
Node 14: acceptance=0.543
Node 15: acceptance=0.611
Node 16: acceptance=0.571
Node 17: acceptance=0.700
Node 18: acceptance=0.575
Node 19: acceptance=0.570

Performance Summary:
  - Distance computation time: 1.541s (43.2%)
  - Filtering time: 1.677s (47.1%)
  - Aggregation time: 0.346s (9.7%)
  - Total time: 3.563s
  - Mean acceptance rate: 0.606

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
