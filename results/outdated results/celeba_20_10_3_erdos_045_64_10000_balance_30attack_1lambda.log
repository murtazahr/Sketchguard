Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5056 ± 0.0229 | min=0.4671 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.517271', '0.493345', '0.515544', '0.490300', '0.515284', '0.478603', '0.503993', '0.562500', '0.491135', '0.487762', '0.513778', '0.522569', '0.535345', '0.475979', '0.509170', '0.515598', '0.474801', '0.513397', '0.467134']
         : correct/total = [(603, 1140), (599, 1158), (556, 1127), (597, 1158), (556, 1134), (590, 1145), (548, 1145), (568, 1127), (639, 1136), (554, 1128), (558, 1144), (578, 1125), (602, 1152), (621, 1160), (535, 1124), (583, 1145), (595, 1154), (537, 1131), (594, 1157), (533, 1141)]
         : compromised: 0.5062, honest: 0.5054
Round 002: test acc mean=0.5123 ± 0.0215 | min=0.4621 max=0.5529
         : test loss mean=5.0942 ± 9.5970
         : individual accs = ['0.519298', '0.538860', '0.499556', '0.531952', '0.489418', '0.508297', '0.514410', '0.501331', '0.462148', '0.491135', '0.525350', '0.552889', '0.522569', '0.505172', '0.492883', '0.495197', '0.512132', '0.508400', '0.522040', '0.552147']
         : correct/total = [(592, 1140), (624, 1158), (563, 1127), (616, 1158), (555, 1134), (582, 1145), (589, 1145), (565, 1127), (525, 1136), (554, 1128), (601, 1144), (622, 1125), (602, 1152), (586, 1160), (554, 1124), (567, 1145), (591, 1154), (575, 1131), (604, 1157), (630, 1141)]
         : compromised: 0.5099, honest: 0.5133
Round 003: test acc mean=0.5096 ± 0.0197 | min=0.4375 max=0.5289
         : test loss mean=0.7211 ± 0.0329
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.437500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.507117', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (497, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (570, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5136, honest: 0.5079
Round 004: test acc mean=0.5439 ± 0.0305 | min=0.5084 max=0.6313
         : test loss mean=8.9019 ± 7.9854
         : individual accs = ['0.528070', '0.532815', '0.563443', '0.631261', '0.557319', '0.576419', '0.519651', '0.508429', '0.558979', '0.558511', '0.555070', '0.568000', '0.532986', '0.508621', '0.517794', '0.519651', '0.515598', '0.508400', '0.536733', '0.579316']
         : correct/total = [(602, 1140), (617, 1158), (635, 1127), (731, 1158), (632, 1134), (660, 1145), (595, 1145), (573, 1127), (635, 1136), (630, 1128), (635, 1144), (639, 1125), (614, 1152), (590, 1160), (582, 1124), (595, 1145), (595, 1154), (575, 1131), (621, 1157), (661, 1141)]
         : compromised: 0.5302, honest: 0.5497
Round 005: test acc mean=0.5163 ± 0.0149 | min=0.4911 max=0.5616
         : test loss mean=0.7194 ± 0.0164
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.561620', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (638, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5167
Round 006: test acc mean=0.6111 ± 0.0793 | min=0.5102 max=0.8183
         : test loss mean=8.8308 ± 9.3538
         : individual accs = ['0.552632', '0.683938', '0.740905', '0.707254', '0.595238', '0.577293', '0.522271', '0.510204', '0.566021', '0.818262', '0.637238', '0.616000', '0.615451', '0.648276', '0.548932', '0.519651', '0.519064', '0.572944', '0.658600', '0.611744']
         : correct/total = [(630, 1140), (792, 1158), (835, 1127), (819, 1158), (675, 1134), (661, 1145), (598, 1145), (575, 1127), (643, 1136), (923, 1128), (729, 1144), (693, 1125), (709, 1152), (752, 1160), (617, 1124), (595, 1145), (599, 1154), (648, 1131), (762, 1157), (698, 1141)]
         : compromised: 0.6036, honest: 0.6143
Round 007: test acc mean=0.5161 ± 0.0141 | min=0.4911 max=0.5563
         : test loss mean=0.7269 ± 0.0152
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.556338', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (632, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5164
Round 008: test acc mean=0.6940 ± 0.1108 | min=0.5208 max=0.8839
         : test loss mean=6.0052 ± 6.5967
         : individual accs = ['0.671930', '0.785838', '0.779947', '0.817789', '0.718695', '0.737991', '0.572052', '0.540373', '0.576585', '0.883865', '0.813811', '0.669333', '0.795139', '0.768966', '0.651246', '0.521397', '0.520797', '0.675508', '0.812446', '0.566170']
         : correct/total = [(766, 1140), (910, 1158), (879, 1127), (947, 1158), (815, 1134), (845, 1145), (655, 1145), (609, 1127), (655, 1136), (997, 1128), (931, 1144), (753, 1125), (916, 1152), (892, 1160), (732, 1124), (597, 1145), (601, 1154), (764, 1131), (940, 1157), (646, 1141)]
         : compromised: 0.7402, honest: 0.6742
Round 009: test acc mean=0.5164 ± 0.0105 | min=0.4933 max=0.5381
         : test loss mean=0.7250 ± 0.0261
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.516725', '0.538121', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (587, 1136), (607, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5169
Round 010: test acc mean=0.6996 ± 0.1214 | min=0.5303 max=0.8989
         : test loss mean=6.0773 ± 7.0227
         : individual accs = ['0.621053', '0.862694', '0.794144', '0.837651', '0.701940', '0.680349', '0.548472', '0.566992', '0.565141', '0.898936', '0.842657', '0.695111', '0.790799', '0.790517', '0.609431', '0.534498', '0.530329', '0.747126', '0.813310', '0.560911']
         : correct/total = [(708, 1140), (999, 1158), (895, 1127), (970, 1158), (796, 1134), (779, 1145), (628, 1145), (639, 1127), (642, 1136), (1014, 1128), (964, 1144), (782, 1125), (911, 1152), (917, 1160), (685, 1124), (612, 1145), (612, 1154), (845, 1131), (941, 1157), (640, 1141)]
         : compromised: 0.7386, honest: 0.6829

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 30.0% compromised
Final accuracy - Compromised: 0.7386, Honest: 0.6829
Overall test accuracy: mean=0.6996 ± 0.1214

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.538s (41.9%)
  - Filtering time: 1.677s (45.7%)
  - Aggregation time: 0.452s (12.3%)
  - Total time: 3.667s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
