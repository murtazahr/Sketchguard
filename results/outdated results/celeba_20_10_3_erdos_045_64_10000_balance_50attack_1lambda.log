Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5109 ± 0.0185 | min=0.4828 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.505245', '0.498667', '0.518229', '0.482759', '0.517794', '0.517031', '0.515598', '0.485411', '0.484010', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (578, 1144), (561, 1125), (597, 1152), (560, 1160), (582, 1124), (592, 1145), (595, 1154), (549, 1131), (560, 1157), (591, 1141)]
         : compromised: 0.5020, honest: 0.5197
Round 002: test acc mean=0.5161 ± 0.0188 | min=0.4761 max=0.5590
         : test loss mean=3.6376 ± 3.7263
         : individual accs = ['0.519298', '0.500000', '0.511091', '0.539724', '0.515873', '0.530131', '0.524891', '0.531500', '0.558979', '0.476064', '0.480769', '0.535111', '0.522569', '0.496552', '0.513345', '0.515284', '0.519064', '0.508400', '0.519447', '0.504820']
         : correct/total = [(592, 1140), (579, 1158), (576, 1127), (625, 1158), (585, 1134), (607, 1145), (601, 1145), (599, 1127), (635, 1136), (537, 1128), (550, 1144), (602, 1125), (602, 1152), (576, 1160), (577, 1124), (590, 1145), (599, 1154), (575, 1131), (601, 1157), (576, 1141)]
         : compromised: 0.5152, honest: 0.5171
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1723 ± 0.2445
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 004: test acc mean=0.5520 ± 0.0320 | min=0.4960 max=0.6279
         : test loss mean=10.7491 ± 7.4994
         : individual accs = ['0.577193', '0.540587', '0.496007', '0.588946', '0.530864', '0.514410', '0.627948', '0.511091', '0.577465', '0.585106', '0.559441', '0.525333', '0.550347', '0.506897', '0.577402', '0.565066', '0.548527', '0.536693', '0.567848', '0.553024']
         : correct/total = [(658, 1140), (626, 1158), (559, 1127), (682, 1158), (602, 1134), (589, 1145), (719, 1145), (576, 1127), (656, 1136), (660, 1128), (640, 1144), (591, 1125), (634, 1152), (588, 1160), (649, 1124), (647, 1145), (633, 1154), (607, 1131), (657, 1157), (631, 1141)]
         : compromised: 0.5381, honest: 0.5660
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.0261 ± 0.2192
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 006: test acc mean=0.6159 ± 0.0625 | min=0.5223 max=0.7356
         : test loss mean=14.1097 ± 8.4876
         : individual accs = ['0.638596', '0.622625', '0.549246', '0.656304', '0.669312', '0.522271', '0.620961', '0.648625', '0.585387', '0.692376', '0.727273', '0.524444', '0.657986', '0.559483', '0.612989', '0.544105', '0.630849', '0.735632', '0.566119', '0.553024']
         : correct/total = [(728, 1140), (721, 1158), (619, 1127), (760, 1158), (759, 1134), (598, 1145), (711, 1145), (731, 1127), (665, 1136), (781, 1128), (832, 1144), (590, 1125), (758, 1152), (649, 1160), (689, 1124), (623, 1145), (728, 1154), (832, 1131), (655, 1157), (631, 1141)]
         : compromised: 0.5895, honest: 0.6423
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.0397 ± 0.2154
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 008: test acc mean=0.7263 ± 0.0623 | min=0.6082 max=0.8378
         : test loss mean=8.5071 ± 6.5825
         : individual accs = ['0.772807', '0.781520', '0.774623', '0.753022', '0.723986', '0.684716', '0.690830', '0.740018', '0.610035', '0.837766', '0.819930', '0.660444', '0.703125', '0.737931', '0.757117', '0.655022', '0.702773', '0.801945', '0.709594', '0.608238']
         : correct/total = [(881, 1140), (905, 1158), (873, 1127), (872, 1158), (821, 1134), (784, 1145), (791, 1145), (834, 1127), (693, 1136), (945, 1128), (938, 1144), (743, 1125), (810, 1152), (856, 1160), (851, 1124), (750, 1145), (811, 1154), (907, 1131), (821, 1157), (694, 1141)]
         : compromised: 0.7266, honest: 0.7259
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.0337 ± 0.2154
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 010: test acc mean=0.7605 ± 0.0666 | min=0.6004 max=0.8759
         : test loss mean=8.0218 ± 7.0240
         : individual accs = ['0.778070', '0.821244', '0.748891', '0.810017', '0.759259', '0.765066', '0.734498', '0.779947', '0.600352', '0.856383', '0.875874', '0.763556', '0.808160', '0.763793', '0.718861', '0.750218', '0.668111', '0.837312', '0.723423', '0.646801']
         : correct/total = [(887, 1140), (951, 1158), (844, 1127), (938, 1158), (861, 1134), (876, 1145), (841, 1145), (879, 1127), (682, 1136), (966, 1128), (1002, 1144), (859, 1125), (931, 1152), (886, 1160), (808, 1124), (859, 1145), (771, 1154), (947, 1131), (837, 1157), (738, 1141)]
         : compromised: 0.7701, honest: 0.7509

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.7701, Honest: 0.7509
Overall test accuracy: mean=0.7605 ± 0.0666

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.533s (41.8%)
  - Filtering time: 1.672s (45.6%)
  - Aggregation time: 0.459s (12.5%)
  - Total time: 3.665s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
