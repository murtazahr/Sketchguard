Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5168, honest: 0.5158
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.000']...
Round 002: test acc mean=0.6806 ± 0.1929 | min=0.4800 max=0.9152
         : test loss mean=nan ± nan
         : individual accs = ['0.914035', '0.881693', '0.493345', '0.528497', '0.481481', '0.549345', '0.913537', '0.911269', '0.562500', '0.914894', '0.915210', '0.768000', '0.480035', '0.492241', '0.482206', '0.517031', '0.506066', '0.508400', '0.879862', '0.912358']
         : correct/total = [(1042, 1140), (1021, 1158), (556, 1127), (612, 1158), (546, 1134), (629, 1145), (1046, 1145), (1027, 1127), (639, 1136), (1032, 1128), (1047, 1144), (864, 1125), (553, 1152), (571, 1160), (542, 1124), (592, 1145), (584, 1154), (575, 1131), (1018, 1157), (1041, 1141)]
         : compromised: 0.5953, honest: 0.8086
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.500']...
Round 003: test acc mean=0.5281 ± 0.0882 | min=0.4780 max=0.9031
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.497782', '0.524180', '0.477954', '0.903057', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.517361', '0.494828', '0.483986', '0.482969', '0.490468', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (561, 1127), (607, 1158), (542, 1134), (1034, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (596, 1152), (574, 1160), (544, 1124), (553, 1145), (566, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5420, honest: 0.5072
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=0.667', 'Node 2: acc_rate=0.667']...
Round 004: test acc mean=0.4963 ± 0.0290 | min=0.4376 max=0.5625
         : test loss mean=15982.8508 ± 64061.4080
         : individual accs = ['0.502632', '0.508636', '0.464064', '0.528497', '0.484127', '0.515284', '0.469869', '0.506655', '0.562500', '0.507979', '0.523601', '0.498667', '0.468750', '0.501724', '0.506228', '0.437555', '0.484402', '0.524315', '0.445981', '0.484663']
         : correct/total = [(573, 1140), (589, 1158), (523, 1127), (612, 1158), (549, 1134), (590, 1145), (538, 1145), (571, 1127), (639, 1136), (573, 1128), (599, 1144), (561, 1125), (540, 1152), (582, 1160), (569, 1124), (501, 1145), (559, 1154), (593, 1131), (516, 1157), (553, 1141)]
         : compromised: 0.4968, honest: 0.4955
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.750', 'Node 2: acc_rate=0.750']...
Round 005: test acc mean=0.4979 ± 0.0228 | min=0.4375 max=0.5415
         : test loss mean=18233.5162 ± 43908.9679
         : individual accs = ['0.527193', '0.491364', '0.486247', '0.527634', '0.477954', '0.485590', '0.541485', '0.496007', '0.437500', '0.508865', '0.482517', '0.501333', '0.527778', '0.494828', '0.494662', '0.489956', '0.484402', '0.508400', '0.477960', '0.517090']
         : correct/total = [(601, 1140), (569, 1158), (548, 1127), (611, 1158), (542, 1134), (556, 1145), (620, 1145), (559, 1127), (497, 1136), (574, 1128), (552, 1144), (564, 1125), (608, 1152), (574, 1160), (556, 1124), (561, 1145), (559, 1154), (575, 1131), (553, 1157), (590, 1141)]
         : compromised: 0.4936, honest: 0.5044
         : coarse stats = ['Node 0: acc_rate=0.800', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.800']...
Round 006: test acc mean=0.4932 ± 0.0207 | min=0.4375 max=0.5229
         : test loss mean=2289.1624 ± 3323.0120
         : individual accs = ['0.458772', '0.491364', '0.494232', '0.474093', '0.522928', '0.485590', '0.512664', '0.495120', '0.437500', '0.474291', '0.514860', '0.501333', '0.480903', '0.493103', '0.508897', '0.516157', '0.485269', '0.491600', '0.510804', '0.513585']
         : correct/total = [(523, 1140), (569, 1158), (557, 1127), (549, 1158), (593, 1134), (556, 1145), (587, 1145), (558, 1127), (497, 1136), (535, 1128), (589, 1144), (564, 1125), (554, 1152), (572, 1160), (572, 1124), (591, 1145), (560, 1154), (556, 1131), (591, 1157), (586, 1141)]
         : compromised: 0.4905, honest: 0.4972
         : coarse stats = ['Node 0: acc_rate=0.833', 'Node 1: acc_rate=0.833', 'Node 2: acc_rate=0.833']...
Round 007: test acc mean=0.4872 ± 0.0191 | min=0.4375 max=0.5220
         : test loss mean=104422.6402 ± 303740.5004
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.476684', '0.478836', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.512889', '0.481771', '0.502586', '0.481317', '0.482969', '0.464471', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (552, 1158), (543, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (577, 1125), (555, 1152), (583, 1160), (541, 1124), (553, 1145), (536, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.4908, honest: 0.4818
         : coarse stats = ['Node 0: acc_rate=0.786', 'Node 1: acc_rate=0.786', 'Node 2: acc_rate=0.714']...
Round 008: test acc mean=0.5015 ± 0.0200 | min=0.4525 max=0.5460
         : test loss mean=101997.3570 ± 249371.6735
         : individual accs = ['0.507018', '0.491364', '0.528838', '0.491364', '0.486772', '0.514410', '0.478603', '0.500444', '0.452465', '0.522163', '0.513112', '0.498667', '0.546007', '0.506897', '0.514235', '0.517031', '0.490468', '0.492485', '0.477960', '0.500438']
         : correct/total = [(578, 1140), (569, 1158), (596, 1127), (569, 1158), (552, 1134), (589, 1145), (548, 1145), (564, 1127), (514, 1136), (589, 1128), (587, 1144), (561, 1125), (629, 1152), (588, 1160), (578, 1124), (592, 1145), (566, 1154), (557, 1131), (553, 1157), (571, 1141)]
         : compromised: 0.5026, honest: 0.4999
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.750', 'Node 2: acc_rate=0.625']...
Round 009: test acc mean=0.4974 ± 0.0205 | min=0.4410 max=0.5338
         : test loss mean=8899.5059 ± 23821.1169
         : individual accs = ['0.477193', '0.491364', '0.509317', '0.471503', '0.509700', '0.485590', '0.503057', '0.474712', '0.441021', '0.511525', '0.504371', '0.501333', '0.519097', '0.493966', '0.522242', '0.482969', '0.533795', '0.509284', '0.508211', '0.498685']
         : correct/total = [(544, 1140), (569, 1158), (574, 1127), (546, 1158), (578, 1134), (556, 1145), (576, 1145), (535, 1127), (501, 1136), (577, 1128), (577, 1144), (564, 1125), (598, 1152), (573, 1160), (587, 1124), (553, 1145), (616, 1154), (576, 1131), (588, 1157), (569, 1141)]
         : compromised: 0.4947, honest: 0.5016
         : coarse stats = ['Node 0: acc_rate=0.722', 'Node 1: acc_rate=0.667', 'Node 2: acc_rate=0.556']...
Round 010: test acc mean=0.5005 ± 0.0299 | min=0.4393 max=0.5635
         : test loss mean=17220.9909 ± 40682.9323
         : individual accs = ['0.554386', '0.491364', '0.502218', '0.483592', '0.522046', '0.485590', '0.478603', '0.500444', '0.439261', '0.523936', '0.487762', '0.501333', '0.495660', '0.506897', '0.481317', '0.553712', '0.465338', '0.491600', '0.481417', '0.563541']
         : correct/total = [(632, 1140), (569, 1158), (566, 1127), (560, 1158), (592, 1134), (556, 1145), (548, 1145), (564, 1127), (499, 1136), (591, 1128), (558, 1144), (564, 1125), (571, 1152), (588, 1160), (541, 1124), (634, 1145), (537, 1154), (556, 1131), (557, 1157), (643, 1141)]
         : compromised: 0.4928, honest: 0.5120
         : coarse stats = ['Node 0: acc_rate=0.700', 'Node 1: acc_rate=0.650', 'Node 2: acc_rate=0.500']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: coarse
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.4928, Honest: 0.5120
Overall test accuracy: mean=0.5005 ± 0.0299

=== COARSE SUMMARY ===
Node 0: acceptance=0.700
Node 1: acceptance=0.650
Node 2: acceptance=0.500
Node 3: acceptance=0.400
Node 4: acceptance=0.500
Node 5: acceptance=0.250
Node 6: acceptance=0.500
Node 7: acceptance=0.550
Node 8: acceptance=0.400
Node 9: acceptance=0.700
Node 10: acceptance=0.700
Node 11: acceptance=0.550
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=0.450
Node 16: acceptance=0.500
Node 17: acceptance=0.500
Node 18: acceptance=0.650
Node 19: acceptance=0.700

Performance Summary:
  - Sketching time: 0.047s (20.0%)
  - Filtering time: 0.003s (1.3%)
  - Aggregation time: 0.185s (78.7%)
  - Total time: 0.236s
  - Mean acceptance rate: 0.535

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
