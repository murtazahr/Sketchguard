Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8476 ± 0.0784
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7675 ± 0.0486
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 004: test acc mean=0.4974 ± 0.0180 | min=0.4582 max=0.5289
         : test loss mean=67.6942 ± 128.8736
         : individual accs = ['0.528947', '0.491364', '0.507542', '0.521589', '0.489418', '0.497817', '0.512664', '0.494232', '0.514085', '0.483156', '0.474650', '0.501333', '0.477431', '0.498276', '0.458185', '0.482096', '0.515598', '0.493369', '0.523768', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (572, 1127), (604, 1158), (555, 1134), (570, 1145), (587, 1145), (557, 1127), (584, 1136), (545, 1128), (543, 1144), (564, 1125), (550, 1152), (578, 1160), (515, 1124), (552, 1145), (595, 1154), (558, 1131), (606, 1157), (550, 1141)]
         : compromised: 0.4917, honest: 0.4988
Round 005: test acc mean=0.5062 ± 0.0220 | min=0.4829 max=0.5739
         : test loss mean=28.5581 ± 37.0126
         : individual accs = ['0.535088', '0.490501', '0.496894', '0.511226', '0.522046', '0.506550', '0.511790', '0.496894', '0.573944', '0.491135', '0.525350', '0.501333', '0.520833', '0.493103', '0.484875', '0.482969', '0.484402', '0.490716', '0.522040', '0.482910']
         : correct/total = [(610, 1140), (568, 1158), (560, 1127), (592, 1158), (592, 1134), (580, 1145), (586, 1145), (560, 1127), (652, 1136), (554, 1128), (601, 1144), (564, 1125), (600, 1152), (572, 1160), (545, 1124), (553, 1145), (559, 1154), (555, 1131), (604, 1157), (551, 1141)]
         : compromised: 0.5028, honest: 0.5071
Round 006: test acc mean=0.5019 ± 0.0211 | min=0.4711 max=0.5572
         : test loss mean=6.5899 ± 17.4535
         : individual accs = ['0.471053', '0.491364', '0.493345', '0.528497', '0.477954', '0.514410', '0.521397', '0.496007', '0.557218', '0.491135', '0.479021', '0.501333', '0.477431', '0.506897', '0.517794', '0.517031', '0.484402', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (556, 1127), (612, 1158), (542, 1134), (589, 1145), (597, 1145), (559, 1127), (633, 1136), (554, 1128), (548, 1144), (564, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5018, honest: 0.5020
Round 007: test acc mean=0.5016 ± 0.0221 | min=0.4375 max=0.5289
         : test loss mean=0.7075 ± 0.0267
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.496007', '0.437500', '0.508865', '0.474650', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.484402', '0.508400', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5018, honest: 0.5015
Round 008: test acc mean=0.5112 ± 0.0208 | min=0.4774 max=0.5625
         : test loss mean=0.6968 ± 0.0120
         : individual accs = ['0.528947', '0.529361', '0.508429', '0.528497', '0.522046', '0.490830', '0.478603', '0.503993', '0.562500', '0.523050', '0.525350', '0.498667', '0.477431', '0.506897', '0.524021', '0.517031', '0.486135', '0.508400', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (613, 1158), (573, 1127), (612, 1158), (592, 1134), (562, 1145), (548, 1145), (568, 1127), (639, 1136), (590, 1128), (601, 1144), (561, 1125), (550, 1152), (588, 1160), (589, 1124), (592, 1145), (561, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.4959, honest: 0.5150
Round 009: test acc mean=0.5479 ± 0.0502 | min=0.4948 max=0.6646
         : test loss mean=0.6856 ± 0.0186
         : individual accs = ['0.528947', '0.533679', '0.582076', '0.529361', '0.522046', '0.514410', '0.521397', '0.504880', '0.562500', '0.633865', '0.525350', '0.523556', '0.494792', '0.506897', '0.664591', '0.523144', '0.655113', '0.508400', '0.522040', '0.601227']
         : correct/total = [(603, 1140), (618, 1158), (656, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (569, 1127), (639, 1136), (715, 1128), (601, 1144), (589, 1125), (570, 1152), (588, 1160), (747, 1124), (599, 1145), (756, 1154), (575, 1131), (604, 1157), (686, 1141)]
         : compromised: 0.5061, honest: 0.5584
Round 010: test acc mean=0.5927 ± 0.0731 | min=0.5049 max=0.7447
         : test loss mean=0.6650 ± 0.0311
         : individual accs = ['0.516667', '0.547496', '0.664596', '0.614853', '0.522046', '0.524017', '0.521397', '0.545697', '0.648768', '0.675532', '0.525350', '0.672000', '0.605903', '0.506897', '0.744662', '0.580786', '0.643847', '0.504863', '0.576491', '0.711656']
         : correct/total = [(589, 1140), (634, 1158), (749, 1127), (712, 1158), (592, 1134), (600, 1145), (597, 1145), (615, 1127), (737, 1136), (762, 1128), (601, 1144), (756, 1125), (698, 1152), (588, 1160), (837, 1124), (665, 1145), (743, 1154), (571, 1131), (667, 1157), (812, 1141)]
         : compromised: 0.5354, honest: 0.6070

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.5354, Honest: 0.6070
Overall test accuracy: mean=0.5927 ± 0.0731

=== BALANCE SUMMARY ===
Node 0: acceptance=0.838
Node 1: acceptance=0.873
Node 2: acceptance=0.883
Node 3: acceptance=0.863
Node 4: acceptance=0.873
Node 5: acceptance=0.820
Node 6: acceptance=0.779
Node 7: acceptance=0.821
Node 8: acceptance=0.820
Node 9: acceptance=0.946
Node 10: acceptance=0.800
Node 11: acceptance=0.821
Node 12: acceptance=0.883
Node 13: acceptance=0.915
Node 14: acceptance=0.807
Node 15: acceptance=0.864
Node 16: acceptance=0.831
Node 17: acceptance=0.878
Node 18: acceptance=0.863
Node 19: acceptance=0.794

Performance Summary:
  - Distance computation time: 1.959s (43.4%)
  - Filtering time: 2.096s (46.5%)
  - Aggregation time: 0.455s (10.1%)
  - Total time: 4.509s
  - Mean acceptance rate: 0.849

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
