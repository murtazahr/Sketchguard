Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5161, honest: 0.5176
Round 002: test acc mean=0.5133 ± 0.0202 | min=0.4715 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.542982', '0.508636', '0.511091', '0.528497', '0.479718', '0.514410', '0.521397', '0.497782', '0.562500', '0.505319', '0.483392', '0.523556', '0.523438', '0.507759', '0.471530', '0.517031', '0.516464', '0.508400', '0.524633', '0.517967']
         : correct/total = [(619, 1140), (589, 1158), (576, 1127), (612, 1158), (544, 1134), (589, 1145), (597, 1145), (561, 1127), (639, 1136), (570, 1128), (553, 1144), (589, 1125), (603, 1152), (589, 1160), (530, 1124), (592, 1145), (596, 1154), (575, 1131), (607, 1157), (591, 1141)]
         : compromised: 0.5143, honest: 0.5092
Round 003: test acc mean=0.4983 ± 0.0243 | min=0.4375 max=0.5530
         : test loss mean=2642.8024 ± 3608.5452
         : individual accs = ['0.501754', '0.491364', '0.506655', '0.528497', '0.477954', '0.485590', '0.482969', '0.498669', '0.437500', '0.495567', '0.521853', '0.534222', '0.477431', '0.513793', '0.482206', '0.482969', '0.485269', '0.508400', '0.499568', '0.553024']
         : correct/total = [(572, 1140), (569, 1158), (571, 1127), (612, 1158), (542, 1134), (556, 1145), (553, 1145), (562, 1127), (497, 1136), (559, 1128), (597, 1144), (601, 1125), (550, 1152), (596, 1160), (542, 1124), (553, 1145), (560, 1154), (575, 1131), (578, 1157), (631, 1141)]
         : compromised: 0.5001, honest: 0.4909
Round 004: test acc mean=0.5073 ± 0.0228 | min=0.4680 max=0.5625
         : test loss mean=12392.6012 ± 31781.8550
         : individual accs = ['0.528947', '0.484456', '0.519077', '0.489637', '0.501764', '0.485590', '0.483843', '0.503993', '0.562500', '0.524823', '0.525350', '0.494222', '0.476562', '0.518103', '0.501779', '0.497817', '0.534662', '0.529620', '0.514261', '0.468011']
         : correct/total = [(603, 1140), (561, 1158), (585, 1127), (567, 1158), (569, 1134), (556, 1145), (554, 1145), (568, 1127), (639, 1136), (592, 1128), (601, 1144), (556, 1125), (549, 1152), (601, 1160), (564, 1124), (570, 1145), (617, 1154), (599, 1131), (595, 1157), (534, 1141)]
         : compromised: 0.5047, honest: 0.5173
Round 005: test acc mean=0.5022 ± 0.0236 | min=0.4428 max=0.5469
         : test loss mean=64979.6825 ± 120255.0790
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.528497', '0.512346', '0.488210', '0.485590', '0.500444', '0.442782', '0.508865', '0.526224', '0.487111', '0.546875', '0.500862', '0.534698', '0.482969', '0.515598', '0.508400', '0.479689', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (612, 1158), (581, 1134), (559, 1145), (556, 1145), (564, 1127), (503, 1136), (574, 1128), (602, 1144), (548, 1125), (630, 1152), (581, 1160), (601, 1124), (553, 1145), (595, 1154), (575, 1131), (555, 1157), (550, 1141)]
         : compromised: 0.4992, honest: 0.5143
Round 006: test acc mean=0.5062 ± 0.0205 | min=0.4749 max=0.5502
         : test loss mean=9681.4386 ± 29353.9162
         : individual accs = ['0.528947', '0.491364', '0.526176', '0.526770', '0.478836', '0.486463', '0.478603', '0.504880', '0.550176', '0.492021', '0.525350', '0.482667', '0.515625', '0.491379', '0.520463', '0.502183', '0.474870', '0.508400', '0.522040', '0.516214']
         : correct/total = [(603, 1140), (569, 1158), (593, 1127), (610, 1158), (543, 1134), (557, 1145), (548, 1145), (569, 1127), (625, 1136), (555, 1128), (601, 1144), (543, 1125), (594, 1152), (570, 1160), (585, 1124), (575, 1145), (548, 1154), (575, 1131), (604, 1157), (589, 1141)]
         : compromised: 0.5085, honest: 0.4969
Round 007: test acc mean=0.5011 ± 0.0247 | min=0.4375 max=0.5503
         : test loss mean=71440.6767 ± 82362.9549
         : individual accs = ['0.461404', '0.475820', '0.507542', '0.518998', '0.509700', '0.509170', '0.521397', '0.503993', '0.437500', '0.470745', '0.485140', '0.498667', '0.550347', '0.497414', '0.513345', '0.492576', '0.514731', '0.508400', '0.516854', '0.527607']
         : correct/total = [(526, 1140), (551, 1158), (572, 1127), (601, 1158), (578, 1134), (583, 1145), (597, 1145), (568, 1127), (497, 1136), (531, 1128), (555, 1144), (561, 1125), (634, 1152), (577, 1160), (577, 1124), (564, 1145), (594, 1154), (575, 1131), (598, 1157), (602, 1141)]
         : compromised: 0.5020, honest: 0.4975
Round 008: test acc mean=0.5041 ± 0.0197 | min=0.4715 max=0.5634
         : test loss mean=55168.2036 ± 118833.9871
         : individual accs = ['0.486842', '0.508636', '0.522626', '0.471503', '0.522928', '0.514410', '0.502183', '0.496007', '0.563380', '0.508865', '0.476399', '0.496889', '0.500868', '0.516379', '0.497331', '0.482969', '0.505199', '0.503095', '0.487468', '0.517967']
         : correct/total = [(555, 1140), (589, 1158), (589, 1127), (546, 1158), (593, 1134), (589, 1145), (575, 1145), (559, 1127), (640, 1136), (574, 1128), (545, 1144), (559, 1125), (577, 1152), (599, 1160), (559, 1124), (553, 1145), (583, 1154), (569, 1131), (564, 1157), (591, 1141)]
         : compromised: 0.5044, honest: 0.5027
Round 009: test acc mean=0.4979 ± 0.0219 | min=0.4375 max=0.5371
         : test loss mean=38788.7356 ± 65041.7127
         : individual accs = ['0.470175', '0.505181', '0.531500', '0.537133', '0.515873', '0.514410', '0.478603', '0.503993', '0.437500', '0.487589', '0.489510', '0.499556', '0.512153', '0.508621', '0.496441', '0.510044', '0.489601', '0.508400', '0.478825', '0.482033']
         : correct/total = [(536, 1140), (585, 1158), (599, 1127), (622, 1158), (585, 1134), (589, 1145), (548, 1145), (568, 1127), (497, 1136), (550, 1128), (560, 1144), (562, 1125), (590, 1152), (590, 1160), (558, 1124), (584, 1145), (565, 1154), (575, 1131), (554, 1157), (550, 1141)]
         : compromised: 0.4986, honest: 0.4949
Round 010: test acc mean=0.5050 ± 0.0268 | min=0.4533 max=0.5597
         : test loss mean=13843.8996 ± 15930.4430
         : individual accs = ['0.527193', '0.508636', '0.500444', '0.471503', '0.530864', '0.514410', '0.509170', '0.470275', '0.548415', '0.491135', '0.500000', '0.453333', '0.478299', '0.506897', '0.503559', '0.517031', '0.484402', '0.559682', '0.484010', '0.539877']
         : correct/total = [(601, 1140), (589, 1158), (564, 1127), (546, 1158), (602, 1134), (589, 1145), (583, 1145), (530, 1127), (623, 1136), (554, 1128), (572, 1144), (510, 1125), (551, 1152), (588, 1160), (566, 1124), (592, 1145), (559, 1154), (633, 1131), (560, 1157), (616, 1141)]
         : compromised: 0.5054, honest: 0.5032

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.5054, Honest: 0.5032
Overall test accuracy: mean=0.5050 ± 0.0268

=== BALANCE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.450
Node 2: acceptance=0.500
Node 3: acceptance=0.450
Node 4: acceptance=0.500
Node 5: acceptance=0.450
Node 6: acceptance=0.500
Node 7: acceptance=0.500
Node 8: acceptance=0.500
Node 9: acceptance=0.500
Node 10: acceptance=0.500
Node 11: acceptance=0.500
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=0.450
Node 16: acceptance=0.500
Node 17: acceptance=0.450
Node 18: acceptance=0.500
Node 19: acceptance=0.450

Performance Summary:
  - Distance computation time: 0.326s (32.3%)
  - Filtering time: 0.457s (45.3%)
  - Aggregation time: 0.226s (22.4%)
  - Total time: 1.008s
  - Mean acceptance rate: 0.485

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
