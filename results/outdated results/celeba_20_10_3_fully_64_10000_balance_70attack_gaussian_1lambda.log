Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8492 ± 0.0737
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 002: test acc mean=0.5166 ± 0.0148 | min=0.4911 max=0.5625
         : test loss mean=0.7879 ± 0.0691
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.508429', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (573, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5153
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 004: test acc mean=0.5026 ± 0.0218 | min=0.4706 max=0.5529
         : test loss mean=138.0662 ± 80.1236
         : individual accs = ['0.523684', '0.491364', '0.516415', '0.470639', '0.552910', '0.485590', '0.475983', '0.496007', '0.503521', '0.537234', '0.474650', '0.500444', '0.522569', '0.482759', '0.521352', '0.476856', '0.503466', '0.508400', '0.492653', '0.516214']
         : correct/total = [(597, 1140), (569, 1158), (582, 1127), (545, 1158), (627, 1134), (556, 1145), (545, 1145), (559, 1127), (572, 1136), (606, 1128), (543, 1144), (563, 1125), (602, 1152), (560, 1160), (586, 1124), (546, 1145), (581, 1154), (575, 1131), (570, 1157), (589, 1141)]
         : compromised: 0.4975, honest: 0.5147
Round 005: test acc mean=0.4981 ± 0.0165 | min=0.4715 max=0.5299
         : test loss mean=177.9383 ± 128.7824
         : individual accs = ['0.518421', '0.513817', '0.481810', '0.471503', '0.519400', '0.510044', '0.478603', '0.508429', '0.529930', '0.490248', '0.474650', '0.498667', '0.490451', '0.498276', '0.484875', '0.513537', '0.483536', '0.496905', '0.514261', '0.485539']
         : correct/total = [(591, 1140), (595, 1158), (543, 1127), (546, 1158), (589, 1134), (584, 1145), (548, 1145), (573, 1127), (602, 1136), (553, 1128), (543, 1144), (561, 1125), (565, 1152), (578, 1160), (545, 1124), (588, 1145), (558, 1154), (562, 1131), (595, 1157), (554, 1141)]
         : compromised: 0.4977, honest: 0.4991
Round 006: test acc mean=0.4986 ± 0.0252 | min=0.4375 max=0.5530
         : test loss mean=168.7122 ± 140.8384
         : individual accs = ['0.519298', '0.510363', '0.506655', '0.483592', '0.525573', '0.514410', '0.475983', '0.502218', '0.437500', '0.483156', '0.467657', '0.474667', '0.552951', '0.500862', '0.514235', '0.482969', '0.484402', '0.491600', '0.525497', '0.518843']
         : correct/total = [(592, 1140), (591, 1158), (571, 1127), (560, 1158), (596, 1134), (589, 1145), (545, 1145), (566, 1127), (497, 1136), (545, 1128), (535, 1144), (534, 1125), (637, 1152), (581, 1160), (578, 1124), (553, 1145), (559, 1154), (556, 1131), (608, 1157), (592, 1141)]
         : compromised: 0.4993, honest: 0.4971
Round 007: test acc mean=0.5045 ± 0.0229 | min=0.4711 max=0.5625
         : test loss mean=0.8139 ± 0.1770
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.528497', '0.477954', '0.514410', '0.521397', '0.503993', '0.562500', '0.508865', '0.474650', '0.498667', '0.522569', '0.506897', '0.482206', '0.482969', '0.484402', '0.491600', '0.522040', '0.536372']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (612, 1158), (542, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (604, 1157), (612, 1141)]
         : compromised: 0.5120, honest: 0.4868
Round 008: test acc mean=0.4973 ± 0.0220 | min=0.4711 max=0.5625
         : test loss mean=0.7010 ± 0.0120
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.477954', '0.514410', '0.521397', '0.496007', '0.562500', '0.491135', '0.525350', '0.501333', '0.477431', '0.493103', '0.482206', '0.482969', '0.484402', '0.491600', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (589, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (601, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5000, honest: 0.4910
Round 009: test acc mean=0.5163 ± 0.0151 | min=0.4911 max=0.5625
         : test loss mean=0.7007 ± 0.0153
         : individual accs = ['0.528947', '0.508636', '0.496894', '0.528497', '0.522046', '0.514410', '0.530131', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.508211', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (560, 1127), (612, 1158), (592, 1134), (589, 1145), (607, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (588, 1157), (591, 1141)]
         : compromised: 0.5170, honest: 0.5145
Round 010: test acc mean=0.5222 ± 0.0203 | min=0.4911 max=0.5782
         : test loss mean=0.6960 ± 0.0083
         : individual accs = ['0.528947', '0.508636', '0.519077', '0.528497', '0.522046', '0.514410', '0.534498', '0.503993', '0.562500', '0.491135', '0.547203', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.578220', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (585, 1127), (612, 1158), (592, 1134), (589, 1145), (612, 1145), (568, 1127), (639, 1136), (554, 1128), (626, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (669, 1157), (591, 1141)]
         : compromised: 0.5239, honest: 0.5182

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.5239, Honest: 0.5182
Overall test accuracy: mean=0.5222 ± 0.0203

=== BALANCE SUMMARY ===
Node 0: acceptance=0.553
Node 1: acceptance=0.579
Node 2: acceptance=0.579
Node 3: acceptance=0.584
Node 4: acceptance=0.558
Node 5: acceptance=0.579
Node 6: acceptance=0.579
Node 7: acceptance=0.558
Node 8: acceptance=0.584
Node 9: acceptance=0.547
Node 10: acceptance=0.558
Node 11: acceptance=0.584
Node 12: acceptance=0.584
Node 13: acceptance=0.568
Node 14: acceptance=0.579
Node 15: acceptance=0.584
Node 16: acceptance=0.553
Node 17: acceptance=0.584
Node 18: acceptance=0.579
Node 19: acceptance=0.558

Performance Summary:
  - Distance computation time: 2.987s (45.1%)
  - Filtering time: 3.132s (47.3%)
  - Aggregation time: 0.502s (7.6%)
  - Total time: 6.621s
  - Mean acceptance rate: 0.572

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
