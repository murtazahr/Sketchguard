Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5165 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.494232', '0.529361', '0.523810', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (557, 1127), (613, 1158), (594, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5193
Round 002: test acc mean=0.7801 ± 0.1687 | min=0.4774 max=0.9140
         : test loss mean=155.9494 ± 588.7230
         : individual accs = ['0.914035', '0.508636', '0.905058', '0.903282', '0.894180', '0.514410', '0.906550', '0.894410', '0.563380', '0.618794', '0.869755', '0.768000', '0.477431', '0.498276', '0.901246', '0.912664', '0.913345', '0.846154', '0.879862', '0.912358']
         : correct/total = [(1042, 1140), (589, 1158), (1020, 1127), (1046, 1158), (1014, 1134), (589, 1145), (1038, 1145), (1008, 1127), (640, 1136), (698, 1128), (995, 1144), (864, 1125), (550, 1152), (578, 1160), (1013, 1124), (1045, 1145), (1054, 1154), (957, 1131), (1018, 1157), (1041, 1141)]
         : compromised: 0.6743, honest: 0.8507
Round 003: test acc mean=0.5843 ± 0.1317 | min=0.4933 max=0.9136
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.913644', '0.522046', '0.709170', '0.521397', '0.882875', '0.611796', '0.831560', '0.525350', '0.498667', '0.521701', '0.517241', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (1058, 1158), (592, 1134), (812, 1145), (597, 1145), (995, 1127), (695, 1136), (938, 1128), (601, 1144), (561, 1125), (601, 1152), (600, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5380, honest: 0.6151
Round 004: test acc mean=0.5422 ± 0.1104 | min=0.4693 max=0.8598
         : test loss mean=1519.9455 ± 2533.8019
         : individual accs = ['0.469298', '0.491364', '0.501331', '0.471503', '0.478836', '0.493450', '0.478603', '0.859805', '0.773768', '0.759752', '0.520979', '0.484444', '0.489583', '0.503448', '0.508897', '0.514410', '0.484402', '0.487179', '0.555748', '0.517967']
         : correct/total = [(535, 1140), (569, 1158), (565, 1127), (546, 1158), (543, 1134), (565, 1145), (548, 1145), (969, 1127), (879, 1136), (857, 1128), (596, 1144), (545, 1125), (564, 1152), (584, 1160), (572, 1124), (589, 1145), (559, 1154), (551, 1131), (643, 1157), (591, 1141)]
         : compromised: 0.5018, honest: 0.5692
Round 005: test acc mean=0.5637 ± 0.1324 | min=0.4699 max=0.8917
         : test loss mean=1063.9290 ± 1096.4045
         : individual accs = ['0.533333', '0.508636', '0.488909', '0.528497', '0.522928', '0.514410', '0.469869', '0.891748', '0.865317', '0.867908', '0.475524', '0.484444', '0.527778', '0.538793', '0.528470', '0.517031', '0.523397', '0.491600', '0.477960', '0.517967']
         : correct/total = [(608, 1140), (589, 1158), (551, 1127), (612, 1158), (593, 1134), (589, 1145), (538, 1145), (1005, 1127), (983, 1136), (979, 1128), (544, 1144), (545, 1125), (608, 1152), (625, 1160), (594, 1124), (592, 1145), (604, 1154), (556, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.5090, honest: 0.6002
Round 006: test acc mean=0.5505 ± 0.1486 | min=0.4480 max=0.9095
         : test loss mean=880.7398 ± 812.5971
         : individual accs = ['0.486842', '0.491364', '0.493345', '0.471503', '0.475309', '0.515284', '0.448035', '0.909494', '0.904049', '0.892730', '0.475524', '0.501333', '0.514757', '0.502586', '0.517794', '0.475983', '0.489601', '0.479222', '0.482282', '0.482033']
         : correct/total = [(555, 1140), (569, 1158), (556, 1127), (546, 1158), (539, 1134), (590, 1145), (513, 1145), (1025, 1127), (1027, 1136), (1007, 1128), (544, 1144), (564, 1125), (593, 1152), (583, 1160), (582, 1124), (545, 1145), (565, 1154), (542, 1131), (558, 1157), (550, 1141)]
         : compromised: 0.5006, honest: 0.5837
Round 007: test acc mean=0.5595 ± 0.1451 | min=0.4747 max=0.9113
         : test loss mean=79035.2196 ± 247956.8798
         : individual accs = ['0.528070', '0.491364', '0.493345', '0.528497', '0.477954', '0.485590', '0.478603', '0.911269', '0.901408', '0.895390', '0.474650', '0.498667', '0.508681', '0.495690', '0.505338', '0.482969', '0.484402', '0.508400', '0.522040', '0.517090']
         : correct/total = [(602, 1140), (569, 1158), (556, 1127), (612, 1158), (542, 1134), (556, 1145), (548, 1145), (1027, 1127), (1024, 1136), (1010, 1128), (543, 1144), (561, 1125), (586, 1152), (575, 1160), (568, 1124), (553, 1145), (559, 1154), (575, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.5020, honest: 0.5978
Round 008: test acc mean=0.5515 ± 0.1494 | min=0.4715 max=0.9130
         : test loss mean=635.1246 ± 2077.0759
         : individual accs = ['0.479825', '0.508636', '0.492458', '0.471503', '0.477954', '0.485590', '0.482096', '0.913043', '0.899648', '0.906028', '0.474650', '0.501333', '0.480903', '0.496552', '0.482206', '0.510044', '0.505199', '0.491600', '0.477960', '0.493427']
         : correct/total = [(547, 1140), (589, 1158), (555, 1127), (546, 1158), (542, 1134), (556, 1145), (552, 1145), (1029, 1127), (1022, 1136), (1022, 1128), (543, 1144), (564, 1125), (554, 1152), (576, 1160), (542, 1124), (584, 1145), (583, 1154), (556, 1131), (553, 1157), (563, 1141)]
         : compromised: 0.4906, honest: 0.5922
Round 009: test acc mean=0.5271 ± 0.0879 | min=0.4715 max=0.8979
         : test loss mean=1076.3224 ± 4129.4945
         : individual accs = ['0.535088', '0.508636', '0.493345', '0.471503', '0.477954', '0.485590', '0.519651', '0.503993', '0.897887', '0.482270', '0.527098', '0.524444', '0.522569', '0.529310', '0.482206', '0.510917', '0.496534', '0.491600', '0.561798', '0.518843']
         : correct/total = [(610, 1140), (589, 1158), (556, 1127), (546, 1158), (542, 1134), (556, 1145), (595, 1145), (568, 1127), (1020, 1136), (544, 1128), (603, 1144), (590, 1125), (602, 1152), (614, 1160), (542, 1124), (585, 1145), (573, 1154), (556, 1131), (650, 1157), (592, 1141)]
         : compromised: 0.5133, honest: 0.5363
Round 010: test acc mean=0.5213 ± 0.0484 | min=0.4505 max=0.6847
         : test loss mean=487.1295 ± 1609.8869
         : individual accs = ['0.476316', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.684716', '0.560781', '0.562500', '0.493794', '0.562063', '0.498667', '0.450521', '0.493966', '0.482206', '0.534498', '0.521664', '0.495137', '0.558341', '0.482910']
         : correct/total = [(543, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (784, 1145), (632, 1127), (639, 1136), (557, 1128), (643, 1144), (561, 1125), (519, 1152), (573, 1160), (542, 1124), (612, 1145), (602, 1154), (560, 1131), (646, 1157), (551, 1141)]
         : compromised: 0.5002, honest: 0.5353

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5002, Honest: 0.5353
Overall test accuracy: mean=0.5213 ± 0.0484

=== BALANCE SUMMARY ===
Node 0: acceptance=0.700
Node 1: acceptance=0.400
Node 2: acceptance=0.700
Node 3: acceptance=0.600
Node 4: acceptance=0.700
Node 5: acceptance=0.400
Node 6: acceptance=0.600
Node 7: acceptance=0.750
Node 8: acceptance=1.000
Node 9: acceptance=0.750
Node 10: acceptance=0.600
Node 11: acceptance=0.600
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.550
Node 15: acceptance=0.700
Node 16: acceptance=0.700
Node 17: acceptance=0.550
Node 18: acceptance=0.650
Node 19: acceptance=0.700

Performance Summary:
  - Distance computation time: 0.322s (32.2%)
  - Filtering time: 0.453s (45.3%)
  - Aggregation time: 0.225s (22.5%)
  - Total time: 1.001s
  - Mean acceptance rate: 0.632

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
