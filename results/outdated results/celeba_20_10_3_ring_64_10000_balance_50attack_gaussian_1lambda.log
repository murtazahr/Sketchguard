Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5165 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.494232', '0.529361', '0.523810', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (557, 1127), (613, 1158), (594, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5111, honest: 0.5220
Round 002: test acc mean=0.7235 ± 0.1819 | min=0.4774 max=0.9140
         : test loss mean=nan ± nan
         : individual accs = ['0.914035', '0.881693', '0.892635', '0.897237', '0.908289', '0.514410', '0.906550', '0.894410', '0.563380', '0.618794', '0.869755', '0.768000', '0.477431', '0.512931', '0.488434', '0.517031', '0.544194', '0.508400', '0.879862', '0.912358']
         : correct/total = [(1042, 1140), (1021, 1158), (1006, 1127), (1039, 1158), (1030, 1134), (589, 1145), (1038, 1145), (1008, 1127), (640, 1136), (698, 1128), (995, 1144), (864, 1125), (550, 1152), (595, 1160), (549, 1124), (592, 1145), (628, 1154), (575, 1131), (1018, 1157), (1041, 1141)]
         : compromised: 0.6441, honest: 0.8029
Round 003: test acc mean=0.5583 ± 0.1055 | min=0.4905 max=0.8829
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.626201', '0.521397', '0.882875', '0.611796', '0.831560', '0.525350', '0.498667', '0.490451', '0.528448', '0.517794', '0.517031', '0.500867', '0.491600', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (717, 1145), (597, 1145), (995, 1127), (695, 1136), (938, 1128), (601, 1144), (561, 1125), (565, 1152), (613, 1160), (582, 1124), (592, 1145), (578, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5194, honest: 0.5971
Round 004: test acc mean=0.5530 ± 0.1058 | min=0.4803 max=0.8598
         : test loss mean=21958.7102 ± 77375.1514
         : individual accs = ['0.503509', '0.494819', '0.507542', '0.494819', '0.497354', '0.514410', '0.521397', '0.859805', '0.773768', '0.759752', '0.536713', '0.498667', '0.562500', '0.521552', '0.519573', '0.482969', '0.497400', '0.517241', '0.515125', '0.480280']
         : correct/total = [(574, 1140), (573, 1158), (572, 1127), (573, 1158), (564, 1134), (589, 1145), (597, 1145), (969, 1127), (879, 1136), (857, 1128), (614, 1144), (561, 1125), (648, 1152), (605, 1160), (584, 1124), (553, 1145), (574, 1154), (585, 1131), (596, 1157), (548, 1141)]
         : compromised: 0.5134, honest: 0.5925
Round 005: test acc mean=0.5592 ± 0.1336 | min=0.4755 max=0.8917
         : test loss mean=1167.1076 ± 1350.9865
         : individual accs = ['0.491228', '0.493955', '0.493345', '0.480138', '0.522046', '0.514410', '0.527511', '0.891748', '0.865317', '0.867908', '0.475524', '0.519111', '0.518229', '0.503448', '0.478648', '0.482969', '0.516464', '0.508400', '0.522040', '0.511832']
         : correct/total = [(560, 1140), (572, 1158), (556, 1127), (556, 1158), (592, 1134), (589, 1145), (604, 1145), (1005, 1127), (983, 1136), (979, 1128), (544, 1144), (584, 1125), (597, 1152), (584, 1160), (538, 1124), (553, 1145), (596, 1154), (575, 1131), (604, 1157), (584, 1141)]
         : compromised: 0.5035, honest: 0.6150
Round 006: test acc mean=0.5541 ± 0.1477 | min=0.4637 max=0.9095
         : test loss mean=1972.8149 ± 4107.8971
         : individual accs = ['0.527193', '0.463731', '0.480035', '0.465458', '0.522046', '0.485590', '0.535371', '0.909494', '0.904049', '0.892730', '0.496503', '0.472000', '0.477431', '0.506897', '0.470641', '0.516157', '0.509532', '0.490716', '0.466724', '0.489921']
         : correct/total = [(601, 1140), (537, 1158), (541, 1127), (539, 1158), (592, 1134), (556, 1145), (613, 1145), (1025, 1127), (1027, 1136), (1007, 1128), (568, 1144), (531, 1125), (550, 1152), (588, 1160), (529, 1124), (591, 1145), (588, 1154), (555, 1131), (540, 1157), (559, 1141)]
         : compromised: 0.4830, honest: 0.6252
Round 007: test acc mean=0.5629 ± 0.1438 | min=0.4747 max=0.9113
         : test loss mean=131702.4229 ± 294922.8966
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.482096', '0.521397', '0.911269', '0.901408', '0.895390', '0.474650', '0.501333', '0.478299', '0.490517', '0.493772', '0.482969', '0.515598', '0.487179', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (552, 1145), (597, 1145), (1027, 1127), (1024, 1136), (1010, 1128), (543, 1144), (564, 1125), (551, 1152), (569, 1160), (555, 1124), (553, 1145), (595, 1154), (551, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.4940, honest: 0.6317
Round 008: test acc mean=0.5590 ± 0.1470 | min=0.4541 max=0.9130
         : test loss mean=311847.2061 ± 933474.4473
         : individual accs = ['0.528070', '0.508636', '0.509317', '0.481002', '0.477954', '0.524017', '0.521397', '0.913043', '0.899648', '0.906028', '0.474650', '0.501333', '0.494792', '0.506897', '0.487544', '0.503930', '0.454073', '0.493369', '0.477960', '0.516214']
         : correct/total = [(602, 1140), (589, 1158), (574, 1127), (557, 1158), (542, 1134), (600, 1145), (597, 1145), (1029, 1127), (1022, 1136), (1022, 1128), (543, 1144), (564, 1125), (570, 1152), (588, 1160), (548, 1124), (577, 1145), (524, 1154), (558, 1131), (553, 1157), (589, 1141)]
         : compromised: 0.5008, honest: 0.6172
Round 009: test acc mean=0.5263 ± 0.0864 | min=0.4808 max=0.8979
         : test loss mean=35331.9274 ± 127655.0021
         : individual accs = ['0.497368', '0.500000', '0.493345', '0.514680', '0.525573', '0.514410', '0.521397', '0.503993', '0.897887', '0.508865', '0.480769', '0.501333', '0.522569', '0.520690', '0.484875', '0.482969', '0.494801', '0.508400', '0.522040', '0.529360']
         : correct/total = [(567, 1140), (579, 1158), (556, 1127), (596, 1158), (596, 1134), (589, 1145), (597, 1145), (568, 1127), (1020, 1136), (574, 1128), (550, 1144), (564, 1125), (602, 1152), (604, 1160), (545, 1124), (553, 1145), (571, 1154), (575, 1131), (604, 1157), (604, 1141)]
         : compromised: 0.5051, honest: 0.5475
Round 010: test acc mean=0.5409 ± 0.0732 | min=0.4715 max=0.7179
         : test loss mean=37434.8928 ± 103450.1064
         : individual accs = ['0.491228', '0.491364', '0.506655', '0.471503', '0.509700', '0.514410', '0.717904', '0.570541', '0.562500', '0.685284', '0.712413', '0.501333', '0.521701', '0.493103', '0.517794', '0.495197', '0.477470', '0.536693', '0.522040', '0.518843']
         : correct/total = [(560, 1140), (569, 1158), (571, 1127), (546, 1158), (578, 1134), (589, 1145), (822, 1145), (643, 1127), (639, 1136), (773, 1128), (815, 1144), (564, 1125), (601, 1152), (572, 1160), (582, 1124), (567, 1145), (551, 1154), (607, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5100, honest: 0.5717

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.5100, Honest: 0.5717
Overall test accuracy: mean=0.5409 ± 0.0732

=== BALANCE SUMMARY ===
Node 0: acceptance=0.700
Node 1: acceptance=0.650
Node 2: acceptance=0.550
Node 3: acceptance=0.500
Node 4: acceptance=0.550
Node 5: acceptance=0.350
Node 6: acceptance=0.600
Node 7: acceptance=0.750
Node 8: acceptance=1.000
Node 9: acceptance=0.750
Node 10: acceptance=0.600
Node 11: acceptance=0.600
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=0.450
Node 16: acceptance=0.500
Node 17: acceptance=0.400
Node 18: acceptance=0.600
Node 19: acceptance=0.700

Performance Summary:
  - Distance computation time: 0.320s (32.2%)
  - Filtering time: 0.450s (45.3%)
  - Aggregation time: 0.223s (22.5%)
  - Total time: 0.993s
  - Mean acceptance rate: 0.587

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
