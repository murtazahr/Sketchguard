Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8754 ± 0.1082
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 002: test acc mean=0.5354 ± 0.0735 | min=0.4911 max=0.8477
         : test loss mean=0.7269 ± 0.1274
         : individual accs = ['0.532456', '0.512953', '0.500444', '0.530225', '0.523810', '0.514410', '0.521397', '0.574978', '0.847711', '0.491135', '0.527972', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.522349']
         : correct/total = [(607, 1140), (594, 1158), (564, 1127), (614, 1158), (594, 1134), (589, 1145), (597, 1145), (648, 1127), (963, 1136), (554, 1128), (604, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (596, 1141)]
         : compromised: 0.5154, honest: 0.5441
Round 003: test acc mean=0.5290 ± 0.0419 | min=0.4933 max=0.6880
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.584629', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.497340', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.687993']
         : correct/total = [(603, 1140), (677, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (561, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (785, 1141)]
         : compromised: 0.5154, honest: 0.5348
Round 004: test acc mean=0.5046 ± 0.0238 | min=0.4603 max=0.5700
         : test loss mean=3151.6557 ± 5640.0721
         : individual accs = ['0.499123', '0.508636', '0.490683', '0.471503', '0.529982', '0.514410', '0.469869', '0.506655', '0.485035', '0.570035', '0.490385', '0.503111', '0.521701', '0.491379', '0.514235', '0.460262', '0.512132', '0.511936', '0.523768', '0.517967']
         : correct/total = [(569, 1140), (589, 1158), (553, 1127), (546, 1158), (601, 1134), (589, 1145), (538, 1145), (571, 1127), (551, 1136), (643, 1128), (561, 1144), (566, 1125), (601, 1152), (570, 1160), (578, 1124), (527, 1145), (591, 1154), (579, 1131), (606, 1157), (591, 1141)]
         : compromised: 0.5129, honest: 0.5011
Round 005: test acc mean=0.5004 ± 0.0174 | min=0.4646 max=0.5276
         : test loss mean=880.8729 ± 1982.6835
         : individual accs = ['0.489474', '0.491364', '0.503106', '0.527634', '0.520282', '0.485590', '0.478603', '0.504880', '0.484155', '0.508865', '0.525350', '0.501333', '0.503472', '0.512069', '0.483986', '0.464629', '0.525997', '0.508400', '0.477960', '0.510079']
         : correct/total = [(558, 1140), (569, 1158), (567, 1127), (611, 1158), (590, 1134), (556, 1145), (548, 1145), (569, 1127), (550, 1136), (574, 1128), (601, 1144), (564, 1125), (580, 1152), (594, 1160), (544, 1124), (532, 1145), (607, 1154), (575, 1131), (553, 1157), (582, 1141)]
         : compromised: 0.4952, honest: 0.5026
Round 006: test acc mean=0.5048 ± 0.0275 | min=0.4566 max=0.5732
         : test loss mean=20117.7804 ± 81633.8487
         : individual accs = ['0.473684', '0.491364', '0.573203', '0.526770', '0.477954', '0.501310', '0.521397', '0.503106', '0.494718', '0.491135', '0.525350', '0.551111', '0.456597', '0.506034', '0.484875', '0.517031', '0.532929', '0.508400', '0.477960', '0.482033']
         : correct/total = [(540, 1140), (569, 1158), (646, 1127), (610, 1158), (542, 1134), (574, 1145), (597, 1145), (567, 1127), (562, 1136), (554, 1128), (601, 1144), (620, 1125), (526, 1152), (587, 1160), (545, 1124), (592, 1145), (615, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4892, honest: 0.5116
Round 007: test acc mean=0.4979 ± 0.0221 | min=0.4375 max=0.5289
         : test loss mean=1.1694 ± 0.7224
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.471503', '0.477954', '0.485590', '0.521397', '0.503993', '0.437500', '0.491135', '0.474650', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (546, 1158), (542, 1134), (556, 1145), (597, 1145), (568, 1127), (497, 1136), (554, 1128), (543, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5032, honest: 0.4956
Round 008: test acc mean=0.4974 ± 0.0220 | min=0.4715 max=0.5625
         : test loss mean=0.7551 ± 0.0679
         : individual accs = ['0.528947', '0.491364', '0.506655', '0.471503', '0.477954', '0.485590', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.477431', '0.493103', '0.517794', '0.482969', '0.515598', '0.508400', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (556, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (572, 1160), (582, 1124), (553, 1145), (595, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4934, honest: 0.4991
Round 009: test acc mean=0.4956 ± 0.0211 | min=0.4711 max=0.5625
         : test loss mean=0.7078 ± 0.0218
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.477954', '0.493450', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.477431', '0.493103', '0.482206', '0.517031', '0.484402', '0.508400', '0.489196', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (565, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (592, 1145), (559, 1154), (575, 1131), (566, 1157), (591, 1141)]
         : compromised: 0.4906, honest: 0.4977
Round 010: test acc mean=0.4971 ± 0.0220 | min=0.4715 max=0.5625
         : test loss mean=0.6996 ± 0.0115
         : individual accs = ['0.528947', '0.491364', '0.506655', '0.471503', '0.477954', '0.485590', '0.478603', '0.496007', '0.562500', '0.491135', '0.525350', '0.501333', '0.477431', '0.493103', '0.482206', '0.482969', '0.484402', '0.508400', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (556, 1145), (548, 1145), (559, 1127), (639, 1136), (554, 1128), (601, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4874, honest: 0.5012

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.4874, Honest: 0.5012
Overall test accuracy: mean=0.4971 ± 0.0220

=== BALANCE SUMMARY ===
Node 0: acceptance=0.683
Node 1: acceptance=0.567
Node 2: acceptance=0.760
Node 3: acceptance=0.750
Node 4: acceptance=0.625
Node 5: acceptance=0.580
Node 6: acceptance=0.800
Node 7: acceptance=0.620
Node 8: acceptance=0.650
Node 9: acceptance=0.567
Node 10: acceptance=0.725
Node 11: acceptance=0.714
Node 12: acceptance=0.686
Node 13: acceptance=0.775
Node 14: acceptance=0.614
Node 15: acceptance=0.583
Node 16: acceptance=0.640
Node 17: acceptance=0.680
Node 18: acceptance=0.525
Node 19: acceptance=0.600

Performance Summary:
  - Distance computation time: 0.758s (39.6%)
  - Filtering time: 0.890s (46.5%)
  - Aggregation time: 0.267s (14.0%)
  - Total time: 1.915s
  - Mean acceptance rate: 0.657

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
