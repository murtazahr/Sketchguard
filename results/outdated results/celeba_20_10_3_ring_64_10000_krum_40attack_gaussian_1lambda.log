Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 002: test acc mean=0.5044 ± 0.0433 | min=0.4533 max=0.6778
         : test loss mean=nan ± nan
         : individual accs = ['0.514912', '0.486183', '0.496894', '0.471503', '0.480600', '0.486463', '0.498690', '0.496007', '0.677817', '0.491135', '0.507867', '0.453333', '0.522569', '0.506897', '0.513345', '0.518777', '0.515598', '0.487179', '0.478825', '0.483786']
         : correct/total = [(587, 1140), (563, 1158), (560, 1127), (546, 1158), (545, 1134), (557, 1145), (571, 1145), (559, 1127), (770, 1136), (554, 1128), (581, 1144), (510, 1125), (602, 1152), (588, 1160), (577, 1124), (594, 1145), (595, 1154), (551, 1131), (554, 1157), (552, 1141)]
         : compromised: 0.4918, honest: 0.5128
Round 003: test acc mean=0.4987 ± 0.0206 | min=0.4375 max=0.5282
         : test loss mean=nan ± nan
         : individual accs = ['0.504386', '0.508636', '0.492458', '0.471503', '0.528219', '0.481223', '0.479476', '0.503993', '0.437500', '0.508865', '0.484266', '0.504889', '0.522569', '0.506897', '0.517794', '0.517031', '0.500867', '0.503979', '0.483146', '0.516214']
         : correct/total = [(575, 1140), (589, 1158), (555, 1127), (546, 1158), (599, 1134), (551, 1145), (549, 1145), (568, 1127), (497, 1136), (574, 1128), (554, 1144), (568, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (578, 1154), (570, 1131), (559, 1157), (589, 1141)]
         : compromised: 0.5036, honest: 0.4954
Round 004: test acc mean=0.5044 ± 0.0232 | min=0.4375 max=0.5372
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.485320', '0.505768', '0.528497', '0.477954', '0.526638', '0.515284', '0.496007', '0.437500', '0.508865', '0.499126', '0.495111', '0.522569', '0.506897', '0.510676', '0.517031', '0.526863', '0.481874', '0.479689', '0.537248']
         : correct/total = [(603, 1140), (562, 1158), (570, 1127), (612, 1158), (542, 1134), (603, 1145), (590, 1145), (559, 1127), (497, 1136), (574, 1128), (571, 1144), (557, 1125), (602, 1152), (588, 1160), (574, 1124), (592, 1145), (608, 1154), (545, 1131), (555, 1157), (613, 1141)]
         : compromised: 0.5011, honest: 0.5066
Round 005: test acc mean=0.5004 ± 0.0213 | min=0.4375 max=0.5386
         : test loss mean=nan ± nan
         : individual accs = ['0.538596', '0.497409', '0.507542', '0.471503', '0.500882', '0.495197', '0.506550', '0.496007', '0.437500', '0.508865', '0.473776', '0.498667', '0.522569', '0.506897', '0.531139', '0.499563', '0.493068', '0.496021', '0.506482', '0.518843']
         : correct/total = [(614, 1140), (576, 1158), (572, 1127), (546, 1158), (568, 1134), (567, 1145), (580, 1145), (559, 1127), (497, 1136), (574, 1128), (542, 1144), (561, 1125), (602, 1152), (588, 1160), (597, 1124), (572, 1145), (569, 1154), (561, 1131), (586, 1157), (592, 1141)]
         : compromised: 0.5068, honest: 0.4961
Round 006: test acc mean=0.4949 ± 0.0240 | min=0.4375 max=0.5342
         : test loss mean=nan ± nan
         : individual accs = ['0.485088', '0.493955', '0.493345', '0.471503', '0.512346', '0.485590', '0.450655', '0.496007', '0.437500', '0.508865', '0.502622', '0.534222', '0.522569', '0.506897', '0.486655', '0.515284', '0.515598', '0.525199', '0.471046', '0.482910']
         : correct/total = [(553, 1140), (572, 1158), (556, 1127), (546, 1158), (581, 1134), (556, 1145), (516, 1145), (559, 1127), (497, 1136), (574, 1128), (575, 1144), (601, 1125), (602, 1152), (588, 1160), (547, 1124), (590, 1145), (595, 1154), (594, 1131), (545, 1157), (551, 1141)]
         : compromised: 0.5033, honest: 0.4893
Round 007: test acc mean=0.5015 ± 0.0236 | min=0.4375 max=0.5310
         : test loss mean=nan ± nan
         : individual accs = ['0.528070', '0.468048', '0.507542', '0.528497', '0.521164', '0.497817', '0.531004', '0.496007', '0.437500', '0.508865', '0.475524', '0.500444', '0.522569', '0.506897', '0.515125', '0.517031', '0.474003', '0.503095', '0.476232', '0.513585']
         : correct/total = [(602, 1140), (542, 1158), (572, 1127), (612, 1158), (591, 1134), (570, 1145), (608, 1145), (559, 1127), (497, 1136), (574, 1128), (544, 1144), (563, 1125), (602, 1152), (588, 1160), (579, 1124), (592, 1145), (547, 1154), (569, 1131), (551, 1157), (586, 1141)]
         : compromised: 0.4988, honest: 0.5032
Round 008: test acc mean=0.5042 ± 0.0217 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.509499', '0.501331', '0.528497', '0.491182', '0.481223', '0.478603', '0.496007', '0.562500', '0.508865', '0.524476', '0.498667', '0.522569', '0.506897', '0.509786', '0.482969', '0.532929', '0.496905', '0.477096', '0.503944']
         : correct/total = [(537, 1140), (590, 1158), (565, 1127), (612, 1158), (557, 1134), (551, 1145), (548, 1145), (559, 1127), (639, 1136), (574, 1128), (600, 1144), (561, 1125), (602, 1152), (588, 1160), (573, 1124), (553, 1145), (615, 1154), (562, 1131), (552, 1157), (575, 1141)]
         : compromised: 0.5003, honest: 0.5069
Round 009: test acc mean=0.5084 ± 0.0220 | min=0.4751 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.539474', '0.508636', '0.506655', '0.528497', '0.477954', '0.536245', '0.475109', '0.503993', '0.562500', '0.508865', '0.483392', '0.498667', '0.522569', '0.506897', '0.482206', '0.500437', '0.485269', '0.500442', '0.522040', '0.518843']
         : correct/total = [(615, 1140), (589, 1158), (571, 1127), (612, 1158), (542, 1134), (614, 1145), (544, 1145), (568, 1127), (639, 1136), (574, 1128), (553, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (573, 1145), (560, 1154), (566, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5097, honest: 0.5076
Round 010: test acc mean=0.5084 ± 0.0219 | min=0.4703 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.529825', '0.508636', '0.490683', '0.471503', '0.532628', '0.501310', '0.518777', '0.503993', '0.562500', '0.491135', '0.470280', '0.524444', '0.522569', '0.506897', '0.524021', '0.482969', '0.498267', '0.490716', '0.522040', '0.514461']
         : correct/total = [(604, 1140), (589, 1158), (553, 1127), (546, 1158), (604, 1134), (574, 1145), (594, 1145), (568, 1127), (639, 1136), (554, 1128), (538, 1144), (590, 1125), (602, 1152), (588, 1160), (589, 1124), (553, 1145), (575, 1154), (555, 1131), (604, 1157), (587, 1141)]
         : compromised: 0.5126, honest: 0.5056

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: krum
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5126, Honest: 0.5056
Overall test accuracy: mean=0.5084 ± 0.0219
