Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8334 ± 0.0739
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7856 ± 0.0687
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.504880', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (569, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5191
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 004: test acc mean=0.5053 ± 0.0210 | min=0.4675 max=0.5625
         : test loss mean=67.9004 ± 42.5238
         : individual accs = ['0.467544', '0.515544', '0.502218', '0.528497', '0.522046', '0.513537', '0.484716', '0.495120', '0.562500', '0.487589', '0.483392', '0.501333', '0.510417', '0.499138', '0.482206', '0.515284', '0.485269', '0.525199', '0.521175', '0.503067']
         : correct/total = [(533, 1140), (597, 1158), (566, 1127), (612, 1158), (592, 1134), (588, 1145), (555, 1145), (558, 1127), (639, 1136), (550, 1128), (553, 1144), (564, 1125), (588, 1152), (579, 1160), (542, 1124), (590, 1145), (560, 1154), (594, 1131), (603, 1157), (574, 1141)]
         : compromised: 0.5086, honest: 0.5031
Round 005: test acc mean=0.4997 ± 0.0272 | min=0.4447 max=0.5546
         : test loss mean=26.2070 ± 22.4012
         : individual accs = ['0.459649', '0.507772', '0.517303', '0.540587', '0.522046', '0.518777', '0.512664', '0.491571', '0.554577', '0.484043', '0.486014', '0.512000', '0.491319', '0.444828', '0.492883', '0.499563', '0.514731', '0.444739', '0.494382', '0.503944']
         : correct/total = [(524, 1140), (588, 1158), (583, 1127), (626, 1158), (592, 1134), (594, 1145), (587, 1145), (554, 1127), (630, 1136), (546, 1128), (556, 1144), (576, 1125), (566, 1152), (516, 1160), (554, 1124), (572, 1145), (594, 1154), (503, 1131), (572, 1157), (575, 1141)]
         : compromised: 0.4883, honest: 0.5072
Round 006: test acc mean=0.4960 ± 0.0217 | min=0.4366 max=0.5226
         : test loss mean=14.6736 ± 20.1868
         : individual accs = ['0.471053', '0.508636', '0.506655', '0.472366', '0.478836', '0.514410', '0.521397', '0.493345', '0.436620', '0.508865', '0.472902', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.500867', '0.508400', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (589, 1158), (571, 1127), (547, 1158), (543, 1134), (589, 1145), (597, 1145), (556, 1127), (496, 1136), (574, 1128), (541, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (578, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5072, honest: 0.4885
Round 007: test acc mean=0.5011 ± 0.0222 | min=0.4774 max=0.5625
         : test loss mean=0.7567 ± 0.1082
         : individual accs = ['0.528947', '0.491364', '0.506655', '0.528497', '0.522046', '0.485590', '0.478603', '0.496007', '0.562500', '0.508865', '0.525350', '0.501333', '0.477431', '0.506897', '0.482206', '0.482969', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (571, 1127), (612, 1158), (592, 1134), (556, 1145), (548, 1145), (559, 1127), (639, 1136), (574, 1128), (601, 1144), (564, 1125), (550, 1152), (588, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4893, honest: 0.5089
Round 008: test acc mean=0.4908 ± 0.0202 | min=0.4375 max=0.5253
         : test loss mean=0.7020 ± 0.0119
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.522046', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.525350', '0.501333', '0.477431', '0.506897', '0.517794', '0.482969', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (592, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (601, 1144), (564, 1125), (550, 1152), (588, 1160), (582, 1124), (553, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4937, honest: 0.4889
Round 009: test acc mean=0.5194 ± 0.0323 | min=0.4711 max=0.6023
         : test loss mean=0.6901 ± 0.0079
         : individual accs = ['0.471053', '0.534542', '0.506655', '0.471503', '0.524691', '0.520524', '0.521397', '0.503993', '0.562500', '0.491135', '0.602273', '0.515556', '0.522569', '0.506897', '0.517794', '0.513537', '0.492201', '0.587975', '0.522040', '0.499562']
         : correct/total = [(537, 1140), (619, 1158), (571, 1127), (546, 1158), (595, 1134), (596, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (689, 1144), (580, 1125), (602, 1152), (588, 1160), (582, 1124), (588, 1145), (568, 1154), (665, 1131), (604, 1157), (570, 1141)]
         : compromised: 0.5285, honest: 0.5134
Round 010: test acc mean=0.5690 ± 0.0757 | min=0.4693 max=0.7719
         : test loss mean=0.6718 ± 0.0303
         : individual accs = ['0.469298', '0.585492', '0.514641', '0.528497', '0.547619', '0.618341', '0.539738', '0.538598', '0.479754', '0.513298', '0.771853', '0.679111', '0.521701', '0.504310', '0.542705', '0.550218', '0.626516', '0.674624', '0.522904', '0.651183']
         : correct/total = [(535, 1140), (678, 1158), (580, 1127), (612, 1158), (621, 1134), (708, 1145), (618, 1145), (607, 1127), (545, 1136), (579, 1128), (883, 1144), (764, 1125), (601, 1152), (585, 1160), (610, 1124), (630, 1145), (723, 1154), (763, 1131), (605, 1157), (743, 1141)]
         : compromised: 0.5811, honest: 0.5609

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5811, Honest: 0.5609
Overall test accuracy: mean=0.5690 ± 0.0757

=== BALANCE SUMMARY ===
Node 0: acceptance=0.747
Node 1: acceptance=0.716
Node 2: acceptance=0.679
Node 3: acceptance=0.747
Node 4: acceptance=0.747
Node 5: acceptance=0.716
Node 6: acceptance=0.747
Node 7: acceptance=0.747
Node 8: acceptance=0.747
Node 9: acceptance=0.679
Node 10: acceptance=0.747
Node 11: acceptance=0.705
Node 12: acceptance=0.711
Node 13: acceptance=0.716
Node 14: acceptance=0.711
Node 15: acceptance=0.721
Node 16: acceptance=0.747
Node 17: acceptance=0.716
Node 18: acceptance=0.711
Node 19: acceptance=0.679

Performance Summary:
  - Distance computation time: 2.967s (44.8%)
  - Filtering time: 3.110s (47.0%)
  - Aggregation time: 0.547s (8.3%)
  - Total time: 6.623s
  - Mean acceptance rate: 0.722

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
