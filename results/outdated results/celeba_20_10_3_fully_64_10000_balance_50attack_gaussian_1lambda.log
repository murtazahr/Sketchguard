Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8327 ± 0.0746
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8080 ± 0.0683
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.504880', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (569, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5218
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 004: test acc mean=0.4992 ± 0.0191 | min=0.4551 max=0.5377
         : test loss mean=105.4070 ± 70.4810
         : individual accs = ['0.521930', '0.508636', '0.493345', '0.484456', '0.508818', '0.485590', '0.482969', '0.537711', '0.455106', '0.479610', '0.514860', '0.496889', '0.526042', '0.500000', '0.510676', '0.517031', '0.504333', '0.488064', '0.477960', '0.489921']
         : correct/total = [(595, 1140), (589, 1158), (556, 1127), (561, 1158), (577, 1134), (556, 1145), (553, 1145), (606, 1127), (517, 1136), (541, 1128), (589, 1144), (559, 1125), (606, 1152), (580, 1160), (574, 1124), (592, 1145), (582, 1154), (552, 1131), (553, 1157), (559, 1141)]
         : compromised: 0.5004, honest: 0.4980
Round 005: test acc mean=0.5036 ± 0.0201 | min=0.4585 max=0.5396
         : test loss mean=54.4786 ± 40.4397
         : individual accs = ['0.471053', '0.510363', '0.526176', '0.458549', '0.524691', '0.496070', '0.491703', '0.503106', '0.539613', '0.502660', '0.497378', '0.519111', '0.522569', '0.506897', '0.520463', '0.482969', '0.485269', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (591, 1158), (593, 1127), (531, 1158), (595, 1134), (568, 1145), (563, 1145), (567, 1127), (613, 1136), (567, 1128), (569, 1144), (584, 1125), (602, 1152), (588, 1160), (585, 1124), (553, 1145), (560, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5115, honest: 0.4956
Round 006: test acc mean=0.5042 ± 0.0212 | min=0.4707 max=0.5590
         : test loss mean=66.1708 ± 67.5219
         : individual accs = ['0.537719', '0.508636', '0.492458', '0.529361', '0.522046', '0.485590', '0.486463', '0.504880', '0.558979', '0.504433', '0.503497', '0.501333', '0.476562', '0.490517', '0.518683', '0.470742', '0.486135', '0.497790', '0.489196', '0.518843']
         : correct/total = [(613, 1140), (589, 1158), (555, 1127), (613, 1158), (592, 1134), (556, 1145), (557, 1145), (569, 1127), (635, 1136), (569, 1128), (576, 1144), (564, 1125), (549, 1152), (569, 1160), (583, 1124), (539, 1145), (561, 1154), (563, 1131), (566, 1157), (592, 1141)]
         : compromised: 0.4932, honest: 0.5152
Round 007: test acc mean=0.4914 ± 0.0204 | min=0.4375 max=0.5220
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.491364', '0.493345', '0.471503', '0.522046', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.498667', '0.477431', '0.493103', '0.482206', '0.517031', '0.515598', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (556, 1127), (546, 1158), (592, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (561, 1125), (550, 1152), (572, 1160), (542, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.4969, honest: 0.4858
Round 008: test acc mean=0.4876 ± 0.0178 | min=0.4375 max=0.5170
         : test loss mean=0.8429 ± 0.5599
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.492063', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.501333', '0.477431', '0.506897', '0.482206', '0.517031', '0.484402', '0.508400', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (558, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (588, 1160), (542, 1124), (592, 1145), (559, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4955, honest: 0.4797
Round 009: test acc mean=0.4966 ± 0.0227 | min=0.4375 max=0.5319
         : test loss mean=0.7112 ± 0.0498
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.522046', '0.485590', '0.531878', '0.520852', '0.437500', '0.508865', '0.474650', '0.501333', '0.477431', '0.506897', '0.517794', '0.517031', '0.484402', '0.491600', '0.522040', '0.491674']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (592, 1134), (556, 1145), (609, 1145), (587, 1127), (497, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (559, 1154), (556, 1131), (604, 1157), (561, 1141)]
         : compromised: 0.5018, honest: 0.4914
Round 010: test acc mean=0.5142 ± 0.0437 | min=0.4393 max=0.6463
         : test loss mean=0.6959 ± 0.0227
         : individual accs = ['0.524561', '0.488774', '0.499556', '0.473230', '0.522046', '0.484716', '0.646288', '0.593611', '0.439261', '0.512411', '0.480769', '0.501333', '0.490451', '0.507759', '0.518683', '0.517031', '0.490468', '0.505747', '0.522904', '0.565294']
         : correct/total = [(598, 1140), (566, 1158), (563, 1127), (548, 1158), (592, 1134), (555, 1145), (740, 1145), (669, 1127), (499, 1136), (578, 1128), (550, 1144), (564, 1125), (565, 1152), (589, 1160), (583, 1124), (592, 1145), (566, 1154), (572, 1131), (605, 1157), (645, 1141)]
         : compromised: 0.5037, honest: 0.5248

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.5037, Honest: 0.5248
Overall test accuracy: mean=0.5142 ± 0.0437

=== BALANCE SUMMARY ===
Node 0: acceptance=0.684
Node 1: acceptance=0.716
Node 2: acceptance=0.716
Node 3: acceptance=0.684
Node 4: acceptance=0.684
Node 5: acceptance=0.611
Node 6: acceptance=0.684
Node 7: acceptance=0.684
Node 8: acceptance=0.684
Node 9: acceptance=0.684
Node 10: acceptance=0.684
Node 11: acceptance=0.453
Node 12: acceptance=0.716
Node 13: acceptance=0.716
Node 14: acceptance=0.716
Node 15: acceptance=0.674
Node 16: acceptance=0.684
Node 17: acceptance=0.716
Node 18: acceptance=0.716
Node 19: acceptance=0.684

Performance Summary:
  - Distance computation time: 3.013s (44.9%)
  - Filtering time: 3.158s (47.0%)
  - Aggregation time: 0.547s (8.1%)
  - Total time: 6.718s
  - Mean acceptance rate: 0.679

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
