Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8358 ± 0.0770
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 002: test acc mean=0.5164 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.7792 ± 0.0566
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.505768', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (570, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5171
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 004: test acc mean=0.5023 ± 0.0186 | min=0.4715 max=0.5247
         : test loss mean=9.7021 ± 6.0088
         : individual accs = ['0.471930', '0.508636', '0.505768', '0.471503', '0.524691', '0.512664', '0.478603', '0.503993', '0.515845', '0.513298', '0.472902', '0.475556', '0.519097', '0.509483', '0.521352', '0.517031', '0.516464', '0.502210', '0.522904', '0.482910']
         : correct/total = [(538, 1140), (589, 1158), (570, 1127), (546, 1158), (595, 1134), (587, 1145), (548, 1145), (568, 1127), (586, 1136), (579, 1128), (541, 1144), (535, 1125), (598, 1152), (591, 1160), (586, 1124), (592, 1145), (596, 1154), (568, 1131), (605, 1157), (551, 1141)]
         : compromised: 0.5111, honest: 0.5014
Round 005: test acc mean=0.5065 ± 0.0152 | min=0.4747 max=0.5316
         : test loss mean=8.7141 ± 5.7786
         : individual accs = ['0.531579', '0.493092', '0.505768', '0.528497', '0.520282', '0.514410', '0.478603', '0.503993', '0.507923', '0.491135', '0.474650', '0.501333', '0.513021', '0.507759', '0.517794', '0.521397', '0.515598', '0.491600', '0.493518', '0.517967']
         : correct/total = [(606, 1140), (571, 1158), (570, 1127), (612, 1158), (590, 1134), (589, 1145), (548, 1145), (568, 1127), (577, 1136), (554, 1128), (543, 1144), (564, 1125), (591, 1152), (589, 1160), (582, 1124), (597, 1145), (595, 1154), (556, 1131), (571, 1157), (591, 1141)]
         : compromised: 0.5111, honest: 0.5060
Round 006: test acc mean=0.5018 ± 0.0221 | min=0.4375 max=0.5289
         : test loss mean=0.7028 ± 0.0134
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.471503', '0.477954', '0.514410', '0.521397', '0.503993', '0.437500', '0.508865', '0.525350', '0.498667', '0.477431', '0.506897', '0.517794', '0.482969', '0.515598', '0.491600', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (546, 1158), (542, 1134), (589, 1145), (597, 1145), (568, 1127), (497, 1136), (574, 1128), (601, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (553, 1145), (595, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5008
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7214 ± 0.0377
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 008: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7525 ± 0.0482
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.517331', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (597, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5171
Round 009: test acc mean=0.5181 ± 0.0152 | min=0.4911 max=0.5625
         : test loss mean=0.7436 ± 0.0412
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.521352', '0.517031', '0.528596', '0.525199', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (586, 1124), (592, 1145), (610, 1154), (594, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5189
Round 010: test acc mean=0.5229 ± 0.0194 | min=0.4920 max=0.5659
         : test loss mean=0.7354 ± 0.0457
         : individual accs = ['0.534211', '0.508636', '0.497782', '0.528497', '0.522046', '0.515284', '0.521397', '0.503993', '0.564261', '0.492021', '0.529720', '0.498667', '0.529514', '0.506897', '0.536477', '0.518777', '0.565858', '0.543767', '0.522040', '0.517967']
         : correct/total = [(609, 1140), (589, 1158), (561, 1127), (612, 1158), (592, 1134), (590, 1145), (597, 1145), (568, 1127), (641, 1136), (555, 1128), (606, 1144), (561, 1125), (610, 1152), (588, 1160), (603, 1124), (594, 1145), (653, 1154), (615, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5111, honest: 0.5242

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 10.0% compromised
Final accuracy - Compromised: 0.5111, Honest: 0.5242
Overall test accuracy: mean=0.5229 ± 0.0194

=== BALANCE SUMMARY ===
Node 0: acceptance=0.926
Node 1: acceptance=0.926
Node 2: acceptance=0.926
Node 3: acceptance=0.926
Node 4: acceptance=0.926
Node 5: acceptance=0.963
Node 6: acceptance=0.926
Node 7: acceptance=0.926
Node 8: acceptance=0.926
Node 9: acceptance=0.926
Node 10: acceptance=0.926
Node 11: acceptance=0.926
Node 12: acceptance=0.926
Node 13: acceptance=0.963
Node 14: acceptance=0.926
Node 15: acceptance=0.926
Node 16: acceptance=0.926
Node 17: acceptance=0.926
Node 18: acceptance=0.926
Node 19: acceptance=0.926

Performance Summary:
  - Distance computation time: 2.992s (44.3%)
  - Filtering time: 3.134s (46.3%)
  - Aggregation time: 0.636s (9.4%)
  - Total time: 6.762s
  - Mean acceptance rate: 0.930

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
