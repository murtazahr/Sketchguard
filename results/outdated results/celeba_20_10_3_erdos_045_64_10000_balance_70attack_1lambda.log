Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5151 ± 0.0165 | min=0.4836 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.483643', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (547, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5145
Round 002: test acc mean=0.5057 ± 0.0260 | min=0.4569 max=0.5518
         : test loss mean=6.2435 ± 3.7513
         : individual accs = ['0.535965', '0.551813', '0.512866', '0.475820', '0.477954', '0.512664', '0.548472', '0.496007', '0.456866', '0.515071', '0.486888', '0.505778', '0.480035', '0.526724', '0.487544', '0.512664', '0.538995', '0.524315', '0.484010', '0.482910']
         : correct/total = [(611, 1140), (639, 1158), (578, 1127), (551, 1158), (542, 1134), (587, 1145), (628, 1145), (559, 1127), (519, 1136), (581, 1128), (557, 1144), (569, 1125), (553, 1152), (611, 1160), (548, 1124), (587, 1145), (622, 1154), (593, 1131), (560, 1157), (551, 1141)]
         : compromised: 0.5045, honest: 0.5085
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1324 ± 0.2876
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 004: test acc mean=0.5462 ± 0.0259 | min=0.5062 max=0.5927
         : test loss mean=7.7720 ± 2.6962
         : individual accs = ['0.588596', '0.579447', '0.583851', '0.549223', '0.564374', '0.532751', '0.537991', '0.551908', '0.506162', '0.522163', '0.592657', '0.534222', '0.523438', '0.516379', '0.537367', '0.521397', '0.511265', '0.571176', '0.554883', '0.545136']
         : correct/total = [(671, 1140), (671, 1158), (658, 1127), (636, 1158), (640, 1134), (610, 1145), (616, 1145), (622, 1127), (575, 1136), (589, 1128), (678, 1144), (601, 1125), (603, 1152), (599, 1160), (604, 1124), (597, 1145), (590, 1154), (646, 1131), (642, 1157), (622, 1141)]
         : compromised: 0.5424, honest: 0.5552
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7690 ± 0.0475
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 006: test acc mean=0.5422 ± 0.0448 | min=0.4577 max=0.6817
         : test loss mean=14.1636 ± 6.3330
         : individual accs = ['0.537719', '0.522453', '0.508429', '0.550950', '0.583774', '0.571179', '0.537991', '0.564330', '0.457746', '0.504433', '0.551573', '0.524444', '0.526042', '0.527586', '0.540036', '0.505677', '0.507799', '0.681698', '0.605013', '0.535495']
         : correct/total = [(613, 1140), (605, 1158), (573, 1127), (638, 1158), (662, 1134), (654, 1145), (616, 1145), (636, 1127), (520, 1136), (569, 1128), (631, 1144), (590, 1125), (606, 1152), (612, 1160), (607, 1124), (579, 1145), (586, 1154), (771, 1131), (700, 1157), (611, 1141)]
         : compromised: 0.5425, honest: 0.5416
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7843 ± 0.0497
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 008: test acc mean=0.5373 ± 0.0393 | min=0.4639 max=0.6348
         : test loss mean=15.1889 ± 6.4143
         : individual accs = ['0.534211', '0.521589', '0.499556', '0.567358', '0.552028', '0.551965', '0.529258', '0.574091', '0.463908', '0.502660', '0.576049', '0.495111', '0.533854', '0.552586', '0.524021', '0.513537', '0.508666', '0.634836', '0.603284', '0.506573']
         : correct/total = [(609, 1140), (604, 1158), (563, 1127), (657, 1158), (626, 1134), (632, 1145), (606, 1145), (647, 1127), (527, 1136), (567, 1128), (659, 1144), (557, 1125), (615, 1152), (641, 1160), (589, 1124), (588, 1145), (587, 1154), (718, 1131), (698, 1157), (578, 1141)]
         : compromised: 0.5355, honest: 0.5413
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8091 ± 0.0441
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 010: test acc mean=0.5383 ± 0.0398 | min=0.4498 max=0.6463
         : test loss mean=15.5149 ± 11.1725
         : individual accs = ['0.533333', '0.546632', '0.506655', '0.588083', '0.556437', '0.544978', '0.542358', '0.581189', '0.449824', '0.515071', '0.541084', '0.532444', '0.532118', '0.494828', '0.524021', '0.517904', '0.510399', '0.646331', '0.584270', '0.518843']
         : correct/total = [(608, 1140), (633, 1158), (571, 1127), (681, 1158), (631, 1134), (624, 1145), (621, 1145), (655, 1127), (511, 1136), (581, 1128), (619, 1144), (599, 1125), (613, 1152), (574, 1160), (589, 1124), (593, 1145), (589, 1154), (731, 1131), (676, 1157), (592, 1141)]
         : compromised: 0.5378, honest: 0.5396

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.5378, Honest: 0.5396
Overall test accuracy: mean=0.5383 ± 0.0398

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.530s (41.7%)
  - Filtering time: 1.669s (45.5%)
  - Aggregation time: 0.468s (12.8%)
  - Total time: 3.666s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
