Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4141 ± 0.0460 | min=0.2941 max=0.4756
         : test loss mean=3.7368 ± 0.0797
         : individual accs = ['0.436047', '0.403045', '0.442049', '0.380799', '0.456612', '0.431537', '0.451944', '0.466084', '0.402529', '0.382745', '0.427951', '0.475554', '0.415099', '0.325471', '0.429418', '0.449739', '0.401397', '0.451351', '0.294074', '0.358527']
         : correct/total = [(1800, 4128), (1694, 4203), (1804, 4081), (1650, 4333), (1868, 4091), (1850, 4287), (1895, 4193), (2027, 4349), (1687, 4191), (1637, 4277), (1773, 4143), (1994, 4193), (1699, 4093), (1366, 4197), (1740, 4052), (1812, 4029), (1667, 4153), (1888, 4183), (1201, 4084), (1480, 4128)]
         : compromised: 0.3785, honest: 0.4181
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.7011 ± 0.0307 | min=0.6271 max=0.7413
         : test loss mean=1.9653 ± 0.6733
         : individual accs = ['0.702519', '0.704973', '0.689782', '0.731595', '0.731606', '0.671798', '0.733604', '0.721085', '0.714388', '0.697218', '0.682114', '0.735750', '0.741266', '0.627115', '0.733712', '0.721023', '0.671563', '0.654554', '0.685113', '0.670300']
         : correct/total = [(2900, 4128), (2963, 4203), (2815, 4081), (3170, 4333), (2993, 4091), (2880, 4287), (3076, 4193), (3136, 4349), (2994, 4191), (2982, 4277), (2826, 4143), (3085, 4193), (3034, 4093), (2632, 4197), (2973, 4052), (2905, 4029), (2789, 4153), (2738, 4183), (2798, 4084), (2767, 4128)]
         : compromised: 0.6495, honest: 0.7068
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.7612 ± 0.0291 | min=0.6671 max=0.7913
         : test loss mean=1.2247 ± 0.5338
         : individual accs = ['0.773983', '0.760171', '0.757412', '0.790445', '0.777560', '0.667133', '0.791319', '0.788917', '0.780482', '0.768062', '0.741974', '0.778202', '0.784754', '0.713605', '0.780109', '0.773145', '0.744040', '0.746354', '0.745593', '0.760417']
         : correct/total = [(3195, 4128), (3195, 4203), (3091, 4081), (3425, 4333), (3181, 4091), (2860, 4287), (3318, 4193), (3431, 4349), (3271, 4191), (3285, 4277), (3074, 4143), (3263, 4193), (3212, 4093), (2995, 4197), (3161, 4052), (3115, 4029), (3090, 4153), (3122, 4183), (3045, 4084), (3139, 4128)]
         : compromised: 0.6904, honest: 0.7691
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.7955 ± 0.0150 | min=0.7541 max=0.8139
         : test loss mean=0.8926 ± 0.3769
         : individual accs = ['0.780766', '0.800857', '0.794168', '0.807524', '0.797116', '0.773968', '0.811829', '0.807772', '0.807922', '0.804536', '0.783732', '0.792034', '0.812363', '0.754110', '0.813919', '0.810375', '0.788105', '0.781018', '0.794074', '0.793605']
         : correct/total = [(3223, 4128), (3366, 4203), (3241, 4081), (3499, 4333), (3261, 4091), (3318, 4287), (3404, 4193), (3513, 4349), (3386, 4191), (3441, 4277), (3247, 4143), (3321, 4193), (3325, 4093), (3165, 4197), (3298, 4052), (3265, 4029), (3273, 4153), (3267, 4183), (3243, 4084), (3276, 4128)]
         : compromised: 0.7640, honest: 0.7990
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.8087 ± 0.0138 | min=0.7613 max=0.8259
         : test loss mean=0.7535 ± 0.2898
         : individual accs = ['0.803052', '0.810136', '0.800539', '0.823448', '0.810315', '0.792862', '0.825900', '0.815130', '0.822238', '0.818564', '0.801352', '0.811829', '0.815050', '0.761258', '0.817621', '0.820551', '0.809054', '0.801817', '0.808766', '0.803779']
         : correct/total = [(3315, 4128), (3405, 4203), (3267, 4081), (3568, 4333), (3315, 4091), (3399, 4287), (3463, 4193), (3545, 4349), (3446, 4191), (3501, 4277), (3320, 4143), (3404, 4193), (3336, 4093), (3195, 4197), (3313, 4052), (3306, 4029), (3360, 4153), (3354, 4183), (3303, 4084), (3318, 4128)]
         : compromised: 0.7771, honest: 0.8122
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.8210 ± 0.0088 | min=0.8001 max=0.8347
         : test loss mean=0.6724 ± 0.2323
         : individual accs = ['0.812016', '0.818701', '0.818427', '0.830372', '0.815937', '0.811756', '0.831386', '0.834675', '0.830351', '0.819266', '0.809076', '0.822561', '0.823601', '0.800095', '0.831441', '0.829486', '0.828558', '0.818790', '0.817826', '0.816376']
         : correct/total = [(3352, 4128), (3441, 4203), (3340, 4081), (3598, 4333), (3338, 4091), (3480, 4287), (3486, 4193), (3630, 4349), (3480, 4191), (3504, 4277), (3352, 4143), (3449, 4193), (3371, 4093), (3358, 4197), (3369, 4052), (3342, 4029), (3441, 4153), (3425, 4183), (3340, 4084), (3370, 4128)]
         : compromised: 0.8059, honest: 0.8227
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.8273 ± 0.0096 | min=0.7972 max=0.8408
         : test loss mean=0.6283 ± 0.2213
         : individual accs = ['0.817829', '0.833928', '0.826023', '0.832449', '0.825471', '0.822253', '0.831147', '0.839043', '0.840849', '0.829787', '0.818006', '0.834009', '0.831908', '0.797236', '0.833909', '0.834450', '0.831447', '0.820464', '0.828355', '0.816860']
         : correct/total = [(3376, 4128), (3505, 4203), (3371, 4081), (3607, 4333), (3377, 4091), (3525, 4287), (3485, 4193), (3649, 4349), (3524, 4191), (3549, 4277), (3389, 4143), (3497, 4193), (3405, 4093), (3346, 4197), (3379, 4052), (3362, 4029), (3453, 4153), (3432, 4183), (3383, 4084), (3372, 4128)]
         : compromised: 0.8097, honest: 0.8292
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8315 ± 0.0079 | min=0.8110 max=0.8426
         : test loss mean=0.5423 ± 0.0511
         : individual accs = ['0.815891', '0.834404', '0.832394', '0.842603', '0.833781', '0.830651', '0.838302', '0.834905', '0.831067', '0.825345', '0.825972', '0.836632', '0.835329', '0.833691', '0.842300', '0.841648', '0.824705', '0.827158', '0.831783', '0.811047']
         : correct/total = [(3368, 4128), (3507, 4203), (3397, 4081), (3651, 4333), (3411, 4091), (3561, 4287), (3515, 4193), (3631, 4349), (3483, 4191), (3530, 4277), (3422, 4143), (3508, 4193), (3419, 4093), (3499, 4197), (3413, 4052), (3391, 4029), (3425, 4153), (3460, 4183), (3397, 4084), (3348, 4128)]
         : compromised: 0.8322, honest: 0.8314
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8393 ± 0.0069 | min=0.8266 max=0.8533
         : test loss mean=0.5070 ± 0.0321
         : individual accs = ['0.826550', '0.841304', '0.835089', '0.843526', '0.832070', '0.839981', '0.849034', '0.849161', '0.853257', '0.840075', '0.834178', '0.838540', '0.843147', '0.836788', '0.843040', '0.845619', '0.839152', '0.829309', '0.838394', '0.828488']
         : correct/total = [(3412, 4128), (3536, 4203), (3408, 4081), (3655, 4333), (3404, 4091), (3601, 4287), (3560, 4193), (3693, 4349), (3576, 4191), (3593, 4277), (3456, 4143), (3516, 4193), (3451, 4093), (3512, 4197), (3416, 4052), (3407, 4029), (3485, 4153), (3469, 4183), (3424, 4084), (3420, 4128)]
         : compromised: 0.8384, honest: 0.8394
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8438 ± 0.0071 | min=0.8285 max=0.8554
         : test loss mean=0.4912 ± 0.0268
         : individual accs = ['0.834787', '0.847014', '0.839500', '0.847911', '0.835004', '0.842547', '0.854519', '0.855369', '0.849916', '0.845452', '0.833937', '0.842118', '0.849255', '0.843221', '0.846249', '0.854554', '0.846617', '0.840784', '0.839128', '0.828488']
         : correct/total = [(3446, 4128), (3560, 4203), (3426, 4081), (3674, 4333), (3416, 4091), (3612, 4287), (3583, 4193), (3720, 4349), (3562, 4191), (3616, 4277), (3455, 4143), (3531, 4193), (3476, 4093), (3539, 4197), (3429, 4052), (3443, 4029), (3516, 4153), (3517, 4183), (3427, 4084), (3420, 4128)]
         : compromised: 0.8429, honest: 0.8439
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: coarse
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.8429, Honest: 0.8439
Overall test accuracy: mean=0.8438 ± 0.0071

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=0.500
Node 5: acceptance=0.850
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=0.500
Node 13: acceptance=0.800
Node 14: acceptance=0.500
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 13.732s (98.8%)
  - Filtering time: 0.012s (0.1%)
  - Aggregation time: 0.158s (1.1%)
  - Total time: 13.902s
  - Mean acceptance rate: 0.882

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
