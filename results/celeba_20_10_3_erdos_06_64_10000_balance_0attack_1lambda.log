Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Degree statistics: avg=12.60, min=8, max=16
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6932 ± 0.0357 | min=0.6041 max=0.7362
         : test loss mean=0.6808 ± 0.0034
         : individual accs = ['0.712281', '0.665803', '0.655723', '0.723661', '0.604056', '0.710917', '0.698690', '0.623780', '0.724472', '0.707447', '0.673077', '0.728000', '0.700521', '0.706034', '0.675267', '0.736245', '0.727903', '0.697613', '0.731201', '0.660824']
         : correct/total = [(812, 1140), (771, 1158), (739, 1127), (838, 1158), (685, 1134), (814, 1145), (800, 1145), (703, 1127), (823, 1136), (798, 1128), (770, 1144), (819, 1125), (807, 1152), (819, 1160), (759, 1124), (843, 1145), (840, 1154), (789, 1131), (846, 1157), (754, 1141)]
Round 002: test acc mean=0.6478 ± 0.0510 | min=0.5265 max=0.7144
         : test loss mean=0.6778 ± 0.0054
         : individual accs = ['0.649123', '0.667530', '0.671695', '0.628670', '0.526455', '0.537118', '0.641921', '0.642413', '0.665493', '0.633865', '0.673077', '0.687111', '0.714410', '0.659483', '0.560498', '0.706550', '0.690641', '0.626879', '0.695765', '0.676599']
         : correct/total = [(740, 1140), (773, 1158), (757, 1127), (728, 1158), (597, 1134), (615, 1145), (735, 1145), (724, 1127), (756, 1136), (715, 1128), (770, 1144), (773, 1125), (823, 1152), (765, 1160), (630, 1124), (809, 1145), (797, 1154), (709, 1131), (805, 1157), (772, 1141)]
Round 003: test acc mean=0.6389 ± 0.0507 | min=0.5178 max=0.6963
         : test loss mean=0.6677 ± 0.0086
         : individual accs = ['0.600000', '0.671848', '0.673469', '0.674439', '0.565256', '0.564192', '0.584279', '0.613132', '0.696303', '0.674645', '0.654720', '0.675556', '0.652778', '0.683621', '0.517794', '0.679476', '0.689775', '0.581786', '0.670700', '0.654689']
         : correct/total = [(684, 1140), (778, 1158), (759, 1127), (781, 1158), (641, 1134), (646, 1145), (669, 1145), (691, 1127), (791, 1136), (761, 1128), (749, 1144), (760, 1125), (752, 1152), (793, 1160), (582, 1124), (778, 1145), (796, 1154), (658, 1131), (776, 1157), (747, 1141)]
Round 004: test acc mean=0.6830 ± 0.0304 | min=0.6068 max=0.7281
         : test loss mean=0.6325 ± 0.0119
         : individual accs = ['0.671930', '0.676166', '0.689441', '0.720207', '0.648148', '0.671616', '0.655022', '0.639752', '0.708627', '0.690603', '0.728147', '0.713778', '0.708333', '0.700000', '0.606762', '0.692576', '0.714905', '0.667551', '0.701815', '0.654689']
         : correct/total = [(766, 1140), (783, 1158), (777, 1127), (834, 1158), (735, 1134), (769, 1145), (750, 1145), (721, 1127), (805, 1136), (779, 1128), (833, 1144), (803, 1125), (816, 1152), (812, 1160), (682, 1124), (793, 1145), (825, 1154), (755, 1131), (812, 1157), (747, 1141)]
Round 005: test acc mean=0.7409 ± 0.0161 | min=0.7099 max=0.7657
         : test loss mean=0.5604 ± 0.0155
         : individual accs = ['0.720175', '0.746978', '0.714286', '0.757340', '0.709877', '0.757205', '0.759825', '0.732032', '0.752641', '0.741135', '0.765734', '0.756444', '0.737847', '0.739655', '0.726868', '0.758952', '0.733969', '0.738285', '0.719965', '0.748466']
         : correct/total = [(821, 1140), (865, 1158), (805, 1127), (877, 1158), (805, 1134), (867, 1145), (870, 1145), (825, 1127), (855, 1136), (836, 1128), (876, 1144), (851, 1125), (850, 1152), (858, 1160), (817, 1124), (869, 1145), (847, 1154), (835, 1131), (833, 1157), (854, 1141)]
Round 006: test acc mean=0.7758 ± 0.0167 | min=0.7374 max=0.7988
         : test loss mean=0.4867 ± 0.0181
         : individual accs = ['0.750877', '0.789292', '0.785271', '0.798791', '0.776896', '0.798253', '0.776419', '0.740905', '0.786092', '0.786348', '0.796329', '0.779556', '0.784722', '0.772414', '0.768683', '0.775546', '0.777296', '0.737401', '0.770959', '0.763365']
         : correct/total = [(856, 1140), (914, 1158), (885, 1127), (925, 1158), (881, 1134), (914, 1145), (889, 1145), (835, 1127), (893, 1136), (887, 1128), (911, 1144), (877, 1125), (904, 1152), (896, 1160), (864, 1124), (888, 1145), (897, 1154), (834, 1131), (892, 1157), (871, 1141)]
Round 007: test acc mean=0.8185 ± 0.0127 | min=0.7981 max=0.8364
         : test loss mean=0.4117 ± 0.0155
         : individual accs = ['0.804386', '0.835060', '0.828749', '0.822107', '0.802469', '0.834934', '0.822707', '0.804791', '0.822183', '0.835106', '0.835664', '0.836444', '0.809896', '0.820690', '0.809609', '0.805240', '0.798094', '0.816092', '0.802939', '0.822962']
         : correct/total = [(917, 1140), (967, 1158), (934, 1127), (952, 1158), (910, 1134), (956, 1145), (942, 1145), (907, 1127), (934, 1136), (942, 1128), (956, 1144), (941, 1125), (933, 1152), (952, 1160), (910, 1124), (922, 1145), (921, 1154), (923, 1131), (929, 1157), (939, 1141)]
Round 008: test acc mean=0.8491 ± 0.0107 | min=0.8228 max=0.8681
         : test loss mean=0.3497 ± 0.0116
         : individual accs = ['0.844737', '0.859240', '0.855368', '0.854059', '0.835097', '0.868122', '0.845415', '0.835847', '0.855634', '0.852837', '0.857517', '0.856889', '0.842882', '0.854310', '0.859431', '0.841048', '0.855286', '0.835544', '0.822818', '0.849255']
         : correct/total = [(963, 1140), (995, 1158), (964, 1127), (989, 1158), (947, 1134), (994, 1145), (968, 1145), (942, 1127), (972, 1136), (962, 1128), (981, 1144), (964, 1125), (971, 1152), (991, 1160), (966, 1124), (963, 1145), (987, 1154), (945, 1131), (952, 1157), (969, 1141)]
Round 009: test acc mean=0.8664 ± 0.0132 | min=0.8427 max=0.8860
         : test loss mean=0.3150 ± 0.0220
         : individual accs = ['0.867544', '0.886010', '0.843833', '0.873921', '0.852734', '0.878603', '0.878603', '0.871340', '0.867077', '0.875887', '0.879371', '0.881778', '0.866319', '0.867241', '0.864769', '0.845415', '0.863951', '0.845270', '0.842697', '0.874671']
         : correct/total = [(989, 1140), (1026, 1158), (951, 1127), (1012, 1158), (967, 1134), (1006, 1145), (1006, 1145), (982, 1127), (985, 1136), (988, 1128), (1006, 1144), (992, 1125), (998, 1152), (1006, 1160), (972, 1124), (968, 1145), (997, 1154), (956, 1131), (975, 1157), (998, 1141)]
Round 010: test acc mean=0.8789 ± 0.0089 | min=0.8548 max=0.8936
         : test loss mean=0.2901 ± 0.0153
         : individual accs = ['0.877193', '0.886010', '0.874002', '0.884283', '0.867725', '0.884716', '0.879476', '0.879326', '0.885563', '0.893617', '0.881119', '0.882667', '0.879340', '0.881897', '0.887900', '0.863755', '0.884749', '0.869142', '0.854797', '0.881683']
         : correct/total = [(1000, 1140), (1026, 1158), (985, 1127), (1024, 1158), (984, 1134), (1013, 1145), (1007, 1145), (991, 1127), (1006, 1136), (1008, 1128), (1008, 1144), (993, 1125), (1013, 1152), (1023, 1160), (998, 1124), (989, 1145), (1021, 1154), (983, 1131), (989, 1157), (1006, 1141)]

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Overall test accuracy: mean=0.8789 ± 0.0089

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.050s (78.0%)
    - Aggregation: 0.014s (22.0%)
  TOTALS:
    - Total computation: 0.064s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.064s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.031s
  - Aggregation: 0.007s
  - Model transfer: 0.000s
  - Total per node: 0.039s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.626s
  - Total aggregation: 0.149s
  - Total model transfer: 0.000s
  - Grand total: 0.775s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
