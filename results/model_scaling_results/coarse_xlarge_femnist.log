# Model Scaling Experiment
# Algorithm: coarse
# Model variant: xlarge
# Dataset: femnist
# Timestamp: 2025-09-23T00:40:56.868244
# Device: CPU (forced for consistent performance)
# Command: python decentralized_fl_sim.py --dataset femnist --model-variant xlarge --rounds 3 --local-epochs 1 --seed 42 --batch-size 32 --lr 0.01 --agg coarse --attack-percentage 0.5 --attack-type directed_deviation --verbose --graph ring --num-nodes 20
================================================================================

Device: cpu
Seed: 42
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [37676, 37670, 37261, 34625, 36810, 35667, 37466, 36404, 36175, 36710, 37122, 37538, 35969, 37590, 36705, 36474, 36699, 37182, 36951, 35769]
Test partition sizes: [4275, 4276, 4227, 3941, 4171, 4051, 4253, 4138, 4112, 4169, 4218, 4252, 4082, 4263, 4169, 4143, 4173, 4221, 4187, 4067]
  Client 0: 37676 train samples, 62 unique classes
  Client 1: 37670 train samples, 62 unique classes
  Client 2: 37261 train samples, 62 unique classes
  Client 3: 34625 train samples, 62 unique classes
  Client 4: 36810 train samples, 62 unique classes
  Client 5: 35667 train samples, 62 unique classes
  Client 6: 37466 train samples, 62 unique classes
  Client 7: 36404 train samples, 62 unique classes
  Client 8: 36175 train samples, 62 unique classes
  Client 9: 36710 train samples, 62 unique classes
  Client 10: 37122 train samples, 62 unique classes
  Client 11: 37538 train samples, 62 unique classes
  Client 12: 35969 train samples, 62 unique classes
  Client 13: 37590 train samples, 62 unique classes
  Client 14: 36705 train samples, 62 unique classes
  Client 15: 36474 train samples, 62 unique classes
  Client 16: 36699 train samples, 62 unique classes
  Client 17: 37182 train samples, 62 unique classes
  Client 18: 36951 train samples, 62 unique classes
  Client 19: 35769 train samples, 62 unique classes
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 10/20 nodes: [0, 1, 2, 3, 7, 8, 10, 11, 16, 17]
Attack type: directed_deviation, lambda: 1.0
Model variant: xlarge
Model parameters: 60,271,678
COARSE Node 0:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 60,271,678 → Sketch size: 1000
  Compression ratio: 60271.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 60,271,678 parameters
  - Sketch size: 1000
  - Compression ratio: 60271.7x
  - Complexity: O(d + N×k) = O(60,271,678 + 20×1000)
  - Theoretical speedup vs BALANCE: 20.0x
Initial test acc across nodes: mean=0.0190 ± 0.0176
Round 001: test acc mean=0.1674 ± 0.0821 | min=0.0045 max=0.3206
         : test loss mean=990956.5677 ± 2517887.4236
         : individual accs = ['0.153684', '0.005847', '0.004495', '0.184217', '0.124191', '0.107875', '0.186457', '0.160706', '0.172179', '0.004797', '0.240398', '0.320555', '0.245958', '0.190945', '0.223315', '0.238233', '0.152888', '0.218669', '0.203965', '0.208507']
         : correct/total = [(657, 4275), (25, 4276), (19, 4227), (726, 3941), (518, 4171), (437, 4051), (793, 4253), (665, 4138), (708, 4112), (20, 4169), (1014, 4218), (1363, 4252), (1004, 4082), (814, 4263), (931, 4169), (987, 4143), (638, 4173), (923, 4221), (854, 4187), (848, 4067)]
         : compromised: 0.1614, honest: 0.1734
         : coarse stats = ['Node 0: acc_rate=0.000', 'Node 1: acc_rate=0.000', 'Node 2: acc_rate=0.000']...
Round 002: test acc mean=0.4919 ± 0.3648 | min=0.0250 max=0.8111
         : test loss mean=nan ± nan
         : individual accs = ['0.049123', '0.047007', '0.046132', '0.049734', '0.811076', '0.788447', '0.777099', '0.790720', '0.025049', '0.049652', '0.047179', '0.050800', '0.786134', '0.778091', '0.803070', '0.806420', '0.733525', '0.785122', '0.811082', '0.803295']
         : correct/total = [(210, 4275), (201, 4276), (195, 4227), (196, 3941), (3383, 4171), (3194, 4051), (3305, 4253), (3272, 4138), (103, 4112), (207, 4169), (199, 4218), (216, 4252), (3209, 4082), (3317, 4263), (3348, 4169), (3341, 4143), (3061, 4173), (3314, 4221), (3396, 4187), (3267, 4067)]
         : compromised: 0.2624, honest: 0.7214
         : coarse stats = ['Node 0: acc_rate=0.000', 'Node 1: acc_rate=0.000', 'Node 2: acc_rate=0.000']...
Round 003: test acc mean=0.5176 ± 0.3825 | min=0.0461 max=0.8470
         : test loss mean=nan ± nan
         : individual accs = ['0.049123', '0.047007', '0.046132', '0.049734', '0.847039', '0.826463', '0.828356', '0.816820', '0.053988', '0.049652', '0.047179', '0.050800', '0.825086', '0.828759', '0.830895', '0.821385', '0.824826', '0.830609', '0.840220', '0.836981']
         : correct/total = [(210, 4275), (201, 4276), (195, 4227), (196, 3941), (3533, 4171), (3348, 4051), (3523, 4253), (3380, 4138), (222, 4112), (207, 4169), (199, 4218), (216, 4252), (3368, 4082), (3533, 4263), (3464, 4169), (3403, 4143), (3442, 4173), (3506, 4221), (3518, 4187), (3404, 4067)]
         : compromised: 0.2816, honest: 0.7535
         : coarse stats = ['Node 0: acc_rate=0.000', 'Node 1: acc_rate=0.000', 'Node 2: acc_rate=0.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: coarse
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.2816, Honest: 0.7535
Overall test accuracy: mean=0.5176 ± 0.3825

=== COARSE SUMMARY ===
Node 0: acceptance=0.000
Node 1: acceptance=0.000
Node 2: acceptance=0.000
Node 3: acceptance=0.167
Node 4: acceptance=0.333
Node 5: acceptance=1.000
Node 6: acceptance=0.500
Node 7: acceptance=0.167
Node 8: acceptance=0.167
Node 9: acceptance=0.000
Node 10: acceptance=0.167
Node 11: acceptance=0.167
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=0.500
Node 16: acceptance=0.333
Node 17: acceptance=0.333
Node 18: acceptance=0.333
Node 19: acceptance=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Sketch transfer: 0.000s (0.0%)
    - Model fetch (accepted): 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Sketching: 4.080s (87.8%)
    - Filtering: 0.003s (0.1%)
    - Aggregation: 0.562s (12.1%)
  TOTALS:
    - Total computation: 4.645s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 4.645s

=== PER-NODE AVERAGE TIME ===
  - Sketching: 3.162s
  - Filtering: 0.000s
  - Aggregation: 0.387s
  - Sketch transfer: 0.000s
  - Model fetch: 0.000s
  - Total per node: 3.550s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total sketching: 63.239s
  - Total filtering: 0.008s
  - Total aggregation: 7.745s
  - Total sketch transfer: 0.000s
  - Total model fetch: 0.000s
  - Grand total: 70.991s
  - Mean acceptance rate: 0.308

COARSE Algorithm Properties:
  - Original dimension: 60,271,678
  - Sketch size: 1000
  - Compression ratio: 20.0x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation


# Experiment completed successfully
