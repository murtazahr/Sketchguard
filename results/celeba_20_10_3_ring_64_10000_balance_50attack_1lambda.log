Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5163 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517090']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 002: test acc mean=0.5016 ± 0.0239 | min=0.4559 max=0.5634
         : test loss mean=11.5913 ± 17.8392
         : individual accs = ['0.531579', '0.518135', '0.492458', '0.490501', '0.490300', '0.514410', '0.455895', '0.503993', '0.563380', '0.491135', '0.488636', '0.479111', '0.493056', '0.475000', '0.467082', '0.517031', '0.510399', '0.507515', '0.521175', '0.520596']
         : correct/total = [(606, 1140), (600, 1158), (555, 1127), (568, 1158), (556, 1134), (589, 1145), (522, 1145), (568, 1127), (640, 1136), (554, 1128), (559, 1144), (539, 1125), (568, 1152), (551, 1160), (525, 1124), (592, 1145), (589, 1154), (574, 1131), (603, 1157), (594, 1141)]
         : compromised: 0.4985, honest: 0.5046
Round 003: test acc mean=0.5163 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9107 ± 0.2370
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.515284', '0.521397', '0.503993', '0.562500', '0.491135', '0.526224', '0.498667', '0.522569', '0.506897', '0.515125', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (590, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (602, 1144), (561, 1125), (602, 1152), (588, 1160), (579, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5108, honest: 0.5218
Round 004: test acc mean=0.5716 ± 0.0784 | min=0.5060 max=0.7729
         : test loss mean=5.9126 ± 5.0976
         : individual accs = ['0.573684', '0.525043', '0.673469', '0.772884', '0.770723', '0.514410', '0.572052', '0.635315', '0.562500', '0.527482', '0.550699', '0.536000', '0.517361', '0.506034', '0.516904', '0.517904', '0.506066', '0.536693', '0.554019', '0.562664']
         : correct/total = [(654, 1140), (608, 1158), (759, 1127), (895, 1158), (874, 1134), (589, 1145), (655, 1145), (716, 1127), (639, 1136), (595, 1128), (630, 1144), (603, 1125), (596, 1152), (587, 1160), (581, 1124), (593, 1145), (584, 1154), (607, 1131), (641, 1157), (642, 1141)]
         : compromised: 0.5398, honest: 0.6034
Round 005: test acc mean=0.5415 ± 0.0616 | min=0.4933 max=0.7509
         : test loss mean=0.9214 ± 0.3332
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.582533', '0.521397', '0.674357', '0.750880', '0.567376', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (667, 1145), (597, 1145), (760, 1127), (853, 1136), (640, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5178, honest: 0.5652
Round 006: test acc mean=0.6227 ± 0.1190 | min=0.5034 max=0.8299
         : test loss mean=4.8953 ± 4.1862
         : individual accs = ['0.609649', '0.556995', '0.788820', '0.829879', '0.822751', '0.514410', '0.593013', '0.788820', '0.811620', '0.703901', '0.616259', '0.510222', '0.519965', '0.503448', '0.514235', '0.517031', '0.517331', '0.507515', '0.636128', '0.592463']
         : correct/total = [(695, 1140), (645, 1158), (889, 1127), (961, 1158), (933, 1134), (589, 1145), (679, 1145), (889, 1127), (922, 1136), (794, 1128), (705, 1144), (574, 1125), (599, 1152), (584, 1160), (578, 1124), (592, 1145), (597, 1154), (574, 1131), (736, 1157), (676, 1141)]
         : compromised: 0.5569, honest: 0.6886
Round 007: test acc mean=0.5692 ± 0.1114 | min=0.4933 max=0.8873
         : test loss mean=0.9648 ± 0.4349
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.651528', '0.521397', '0.813665', '0.887324', '0.756206', '0.544580', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (746, 1145), (597, 1145), (917, 1127), (1008, 1136), (853, 1128), (623, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5247, honest: 0.6136
Round 008: test acc mean=0.6412 ± 0.1240 | min=0.5147 max=0.8829
         : test loss mean=4.1235 ± 4.2099
         : individual accs = ['0.590351', '0.561313', '0.800355', '0.823834', '0.832451', '0.515284', '0.611354', '0.835847', '0.882923', '0.742021', '0.673951', '0.514667', '0.559028', '0.575862', '0.516014', '0.543231', '0.537262', '0.556145', '0.577355', '0.574934']
         : correct/total = [(673, 1140), (650, 1158), (902, 1127), (954, 1158), (944, 1134), (590, 1145), (700, 1145), (942, 1127), (1003, 1136), (837, 1128), (771, 1144), (579, 1125), (644, 1152), (668, 1160), (580, 1124), (622, 1145), (620, 1154), (629, 1131), (668, 1157), (656, 1141)]
         : compromised: 0.5719, honest: 0.7105
Round 009: test acc mean=0.5778 ± 0.1216 | min=0.4933 max=0.8838
         : test loss mean=0.8695 ± 0.2617
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.672489', '0.529258', '0.843833', '0.883803', '0.828901', '0.590035', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (770, 1145), (606, 1145), (951, 1127), (1004, 1136), (935, 1128), (675, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5268, honest: 0.6289
Round 010: test acc mean=0.6572 ± 0.1202 | min=0.5153 max=0.8838
         : test loss mean=3.5636 ± 3.9154
         : individual accs = ['0.573684', '0.560449', '0.800355', '0.816926', '0.817460', '0.515284', '0.648035', '0.851819', '0.883803', '0.797872', '0.687063', '0.564444', '0.532118', '0.562931', '0.552491', '0.663755', '0.551127', '0.600354', '0.601556', '0.561788']
         : correct/total = [(654, 1140), (649, 1158), (902, 1127), (946, 1158), (927, 1134), (590, 1145), (742, 1145), (960, 1127), (1004, 1136), (900, 1128), (786, 1144), (635, 1125), (613, 1152), (653, 1160), (621, 1124), (760, 1145), (636, 1154), (679, 1131), (696, 1157), (641, 1141)]
         : compromised: 0.5954, honest: 0.7190

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.5954, Honest: 0.7190
Overall test accuracy: mean=0.6572 ± 0.1202

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.316s (31.5%)
  - Filtering time: 0.449s (44.7%)
  - Aggregation time: 0.239s (23.8%)
  - Total time: 1.005s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
