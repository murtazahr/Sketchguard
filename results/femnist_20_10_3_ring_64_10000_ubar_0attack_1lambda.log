Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 6,603,710 parameters
  - Rho parameter: 1.0
  - Stage 1: Distance-based filtering (select 100% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4060 ± 0.0546 | min=0.2941 max=0.4815
         : test loss mean=3.6387 ± 0.0945
         : individual accs = ['0.347626', '0.447537', '0.442049', '0.359797', '0.404302', '0.441801', '0.451944', '0.468384', '0.347650', '0.322422', '0.427951', '0.481517', '0.415099', '0.344055', '0.429418', '0.399355', '0.460872', '0.475496', '0.294074', '0.358527']
         : correct/total = [(1435, 4128), (1881, 4203), (1804, 4081), (1559, 4333), (1654, 4091), (1894, 4287), (1895, 4193), (2037, 4349), (1457, 4191), (1379, 4277), (1773, 4143), (2019, 4193), (1699, 4093), (1444, 4197), (1740, 4052), (1609, 4029), (1914, 4153), (1989, 4183), (1201, 4084), (1480, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.500', 'Node 1: s1=1.000, s2=0.500', 'Node 2: s1=1.000, s2=1.000']...
Round 002: test acc mean=0.6846 ± 0.0616 | min=0.5468 max=0.7455
         : test loss mean=1.8773 ± 0.8175
         : individual accs = ['0.719234', '0.635498', '0.628767', '0.697669', '0.726473', '0.745510', '0.564274', '0.712578', '0.729897', '0.739069', '0.698769', '0.735750', '0.730760', '0.571360', '0.732231', '0.730951', '0.546834', '0.715276', '0.651812', '0.679990']
         : correct/total = [(2969, 4128), (2671, 4203), (2566, 4081), (3023, 4333), (2972, 4091), (3196, 4287), (2366, 4193), (3099, 4349), (3059, 4191), (3161, 4277), (2895, 4143), (3085, 4193), (2991, 4093), (2398, 4197), (2967, 4052), (2945, 4029), (2271, 4153), (2992, 4183), (2662, 4084), (2807, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.500', 'Node 1: s1=1.000, s2=0.500', 'Node 2: s1=1.000, s2=0.750']...
Round 003: test acc mean=0.7715 ± 0.0226 | min=0.7074 max=0.7953
         : test loss mean=1.0097 ± 0.4082
         : individual accs = ['0.774709', '0.773257', '0.774320', '0.778214', '0.775361', '0.791229', '0.707369', '0.790527', '0.795276', '0.790975', '0.772629', '0.780348', '0.786465', '0.775077', '0.773198', '0.780839', '0.777269', '0.775998', '0.738981', '0.718750']
         : correct/total = [(3198, 4128), (3250, 4203), (3160, 4081), (3372, 4333), (3172, 4091), (3392, 4287), (2966, 4193), (3438, 4349), (3333, 4191), (3383, 4277), (3201, 4143), (3272, 4193), (3219, 4093), (3253, 4197), (3133, 4052), (3146, 4029), (3228, 4153), (3246, 4183), (3018, 4084), (2967, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.667', 'Node 1: s1=1.000, s2=0.667', 'Node 2: s1=1.000, s2=0.667']...
Round 004: test acc mean=0.7936 ± 0.0284 | min=0.6937 max=0.8246
         : test loss mean=0.9772 ± 0.5047
         : individual accs = ['0.764293', '0.806091', '0.802744', '0.802908', '0.805182', '0.810590', '0.785595', '0.816510', '0.824624', '0.818097', '0.693700', '0.794658', '0.770584', '0.805099', '0.813179', '0.799454', '0.804719', '0.766675', '0.808031', '0.779312']
         : correct/total = [(3155, 4128), (3388, 4203), (3276, 4081), (3479, 4333), (3294, 4091), (3475, 4287), (3294, 4193), (3551, 4349), (3456, 4191), (3499, 4277), (2874, 4143), (3332, 4193), (3154, 4093), (3379, 4197), (3295, 4052), (3221, 4029), (3342, 4153), (3207, 4183), (3300, 4084), (3217, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.750', 'Node 1: s1=1.000, s2=0.750', 'Node 2: s1=1.000, s2=0.625']...
Round 005: test acc mean=0.8113 ± 0.0117 | min=0.7849 max=0.8370
         : test loss mean=0.6879 ± 0.2382
         : individual accs = ['0.800145', '0.804187', '0.811811', '0.784907', '0.817160', '0.821087', '0.810398', '0.825247', '0.837032', '0.825579', '0.804731', '0.793942', '0.811141', '0.817489', '0.816140', '0.814346', '0.813147', '0.804208', '0.815622', '0.797723']
         : correct/total = [(3303, 4128), (3380, 4203), (3313, 4081), (3401, 4333), (3343, 4091), (3520, 4287), (3398, 4193), (3589, 4349), (3508, 4191), (3531, 4277), (3334, 4143), (3329, 4193), (3320, 4093), (3431, 4197), (3307, 4052), (3281, 4029), (3377, 4153), (3364, 4183), (3331, 4084), (3293, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.800', 'Node 1: s1=1.000, s2=0.700', 'Node 2: s1=1.000, s2=0.600']...
Round 006: test acc mean=0.8224 ± 0.0115 | min=0.7975 max=0.8430
         : test loss mean=0.6616 ± 0.1849
         : individual accs = ['0.814438', '0.821794', '0.818917', '0.814216', '0.829137', '0.832517', '0.831863', '0.837894', '0.842997', '0.834697', '0.797490', '0.807775', '0.805277', '0.811770', '0.831194', '0.826508', '0.828076', '0.826918', '0.818805', '0.815165']
         : correct/total = [(3362, 4128), (3454, 4203), (3342, 4081), (3528, 4333), (3392, 4091), (3569, 4287), (3488, 4193), (3644, 4349), (3533, 4191), (3570, 4277), (3304, 4143), (3387, 4193), (3296, 4093), (3407, 4197), (3368, 4052), (3330, 4029), (3439, 4153), (3459, 4183), (3344, 4084), (3365, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.750', 'Node 1: s1=1.000, s2=0.750', 'Node 2: s1=1.000, s2=0.583']...
Round 007: test acc mean=0.8172 ± 0.0342 | min=0.7126 max=0.8513
         : test loss mean=0.8286 ± 0.7055
         : individual accs = ['0.816860', '0.831549', '0.828718', '0.816524', '0.830848', '0.836482', '0.726210', '0.712578', '0.851348', '0.835866', '0.807627', '0.818984', '0.826533', '0.840600', '0.831441', '0.837925', '0.812425', '0.828831', '0.832272', '0.820979']
         : correct/total = [(3372, 4128), (3495, 4203), (3382, 4081), (3538, 4333), (3399, 4091), (3586, 4287), (3045, 4193), (3099, 4349), (3568, 4191), (3575, 4277), (3346, 4143), (3434, 4193), (3383, 4093), (3528, 4197), (3369, 4052), (3376, 4029), (3374, 4153), (3467, 4183), (3399, 4084), (3389, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.714', 'Node 1: s1=1.000, s2=0.714', 'Node 2: s1=1.000, s2=0.643']...
Round 008: test acc mean=0.8321 ± 0.0103 | min=0.8050 max=0.8481
         : test loss mean=0.5390 ± 0.0576
         : individual accs = ['0.827035', '0.830835', '0.823083', '0.834757', '0.835981', '0.848146', '0.825423', '0.827777', '0.843713', '0.841478', '0.829109', '0.832101', '0.832397', '0.838933', '0.845262', '0.841152', '0.813147', '0.829309', '0.836435', '0.804990']
         : correct/total = [(3414, 4128), (3492, 4203), (3359, 4081), (3617, 4333), (3420, 4091), (3636, 4287), (3461, 4193), (3600, 4349), (3536, 4191), (3599, 4277), (3435, 4143), (3489, 4193), (3407, 4093), (3521, 4197), (3425, 4052), (3389, 4029), (3377, 4153), (3469, 4183), (3416, 4084), (3323, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.688', 'Node 1: s1=1.000, s2=0.688', 'Node 2: s1=1.000, s2=0.625']...
Round 009: test acc mean=0.8356 ± 0.0115 | min=0.8091 max=0.8580
         : test loss mean=0.5708 ± 0.1521
         : individual accs = ['0.828731', '0.842256', '0.830434', '0.819986', '0.809093', '0.848146', '0.834009', '0.841343', '0.858029', '0.850362', '0.832489', '0.824231', '0.839482', '0.844889', '0.846742', '0.844626', '0.826631', '0.829787', '0.835455', '0.825581']
         : correct/total = [(3421, 4128), (3540, 4203), (3389, 4081), (3553, 4333), (3310, 4091), (3636, 4287), (3497, 4193), (3659, 4349), (3596, 4191), (3637, 4277), (3449, 4143), (3456, 4193), (3436, 4093), (3546, 4197), (3431, 4052), (3403, 4029), (3433, 4153), (3471, 4183), (3412, 4084), (3408, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.667', 'Node 1: s1=1.000, s2=0.667', 'Node 2: s1=1.000, s2=0.611']...
Round 010: test acc mean=0.8399 ± 0.0096 | min=0.8178 max=0.8525
         : test loss mean=0.5678 ± 0.1876
         : individual accs = ['0.837936', '0.851297', '0.840970', '0.831295', '0.829626', '0.840914', '0.842833', '0.851920', '0.844906', '0.852467', '0.829592', '0.824946', '0.842903', '0.851799', '0.848223', '0.847357', '0.843968', '0.817834', '0.835700', '0.831880']
         : correct/total = [(3459, 4128), (3578, 4203), (3432, 4081), (3602, 4333), (3394, 4091), (3605, 4287), (3534, 4193), (3705, 4349), (3541, 4191), (3646, 4277), (3437, 4143), (3459, 4193), (3450, 4093), (3575, 4197), (3437, 4052), (3414, 4029), (3505, 4153), (3421, 4183), (3413, 4084), (3434, 4128)]
         : ubar stats = ['Node 0: s1=1.000, s2=0.650', 'Node 1: s1=1.000, s2=0.650', 'Node 2: s1=1.000, s2=0.600']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: ubar
Overall test accuracy: mean=0.8399 ± 0.0096

=== UBAR SUMMARY ===
Node 0: stage1=1.000, stage2=0.650, overall=0.650
Node 1: stage1=1.000, stage2=0.650, overall=0.650
Node 2: stage1=1.000, stage2=0.600, overall=0.600
Node 3: stage1=1.000, stage2=0.650, overall=0.650
Node 4: stage1=1.000, stage2=0.600, overall=0.600
Node 5: stage1=1.000, stage2=0.500, overall=0.500
Node 6: stage1=1.000, stage2=0.550, overall=0.550
Node 7: stage1=1.000, stage2=0.600, overall=0.600
Node 8: stage1=1.000, stage2=0.550, overall=0.550
Node 9: stage1=1.000, stage2=0.600, overall=0.600
Node 10: stage1=1.000, stage2=0.600, overall=0.600
Node 11: stage1=1.000, stage2=0.650, overall=0.650
Node 12: stage1=1.000, stage2=0.500, overall=0.500
Node 13: stage1=1.000, stage2=0.550, overall=0.550
Node 14: stage1=1.000, stage2=0.650, overall=0.650
Node 15: stage1=1.000, stage2=0.600, overall=0.600
Node 16: stage1=1.000, stage2=0.600, overall=0.600
Node 17: stage1=1.000, stage2=0.650, overall=0.650
Node 18: stage1=1.000, stage2=0.600, overall=0.600
Node 19: stage1=1.000, stage2=0.600, overall=0.600

Performance Summary:
  - Distance computation time: 0.268s (0.3%)
  - Loss computation time: 89.014s (99.5%)
  - Aggregation time: 0.141s (0.2%)
  - Total time: 89.423s
  - Mean Stage 1 acceptance rate: 1.000
  - Mean Stage 2 acceptance rate: 0.597
  - Overall acceptance rate: 0.597

UBAR Algorithm Properties:
  - Model dimension: 6,603,710
  - Rho parameter: 1.0
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 100% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
