Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5167 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.8755 ± 0.1448
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.512069', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (594, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5115, honest: 0.5218
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.400']...
Round 002: test acc mean=0.6904 ± 0.1769 | min=0.4911 max=0.9224
         : test loss mean=0.5517 ± 0.2587
         : individual accs = ['0.661404', '0.508636', '0.493345', '0.559585', '0.922399', '0.915284', '0.613100', '0.841171', '0.858275', '0.491135', '0.829545', '0.498667', '0.522569', '0.914655', '0.820285', '0.517031', '0.904679', '0.508400', '0.522040', '0.905346']
         : correct/total = [(754, 1140), (589, 1158), (556, 1127), (648, 1158), (1046, 1134), (1048, 1145), (702, 1145), (948, 1127), (975, 1136), (554, 1128), (949, 1144), (561, 1125), (602, 1152), (1061, 1160), (922, 1124), (592, 1145), (1044, 1154), (575, 1131), (604, 1157), (1033, 1141)]
         : compromised: 0.6221, honest: 0.7587
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.400']...
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
         : coarse stats = ['Node 0: acc_rate=0.778', 'Node 1: acc_rate=0.667', 'Node 2: acc_rate=0.600']...
Round 004: test acc mean=0.4954 ± 0.0221 | min=0.4419 max=0.5408
         : test loss mean=359676.5542 ± 954683.5721
         : individual accs = ['0.481579', '0.458549', '0.506655', '0.525907', '0.477954', '0.492576', '0.478603', '0.510204', '0.441901', '0.482270', '0.506119', '0.504000', '0.493924', '0.495690', '0.519573', '0.507424', '0.484402', '0.491600', '0.508211', '0.540754']
         : correct/total = [(549, 1140), (531, 1158), (571, 1127), (609, 1158), (542, 1134), (564, 1145), (548, 1145), (575, 1127), (502, 1136), (544, 1128), (579, 1144), (567, 1125), (569, 1152), (575, 1160), (584, 1124), (581, 1145), (559, 1154), (556, 1131), (588, 1157), (617, 1141)]
         : compromised: 0.4978, honest: 0.4930
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=0.625', 'Node 2: acc_rate=0.650']...
Round 005: test acc mean=0.4941 ± 0.0233 | min=0.4505 max=0.5607
         : test loss mean=23204.7173 ± 87250.5653
         : individual accs = ['0.528947', '0.484456', '0.485359', '0.471503', '0.475309', '0.485590', '0.484716', '0.496007', '0.560739', '0.495567', '0.474650', '0.498667', '0.450521', '0.518966', '0.482206', '0.499563', '0.484402', '0.490716', '0.522040', '0.492550']
         : correct/total = [(603, 1140), (561, 1158), (547, 1127), (546, 1158), (539, 1134), (556, 1145), (555, 1145), (559, 1127), (637, 1136), (559, 1128), (543, 1144), (561, 1125), (519, 1152), (602, 1160), (542, 1124), (572, 1145), (559, 1154), (555, 1131), (604, 1157), (562, 1141)]
         : compromised: 0.4918, honest: 0.4964
         : coarse stats = ['Node 0: acc_rate=0.733', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.640']...
Round 006: test acc mean=0.4908 ± 0.0228 | min=0.4375 max=0.5431
         : test loss mean=28625.9962 ± 86533.9523
         : individual accs = ['0.471053', '0.491364', '0.497782', '0.525043', '0.477954', '0.489956', '0.478603', '0.496007', '0.437500', '0.491135', '0.525350', '0.506667', '0.477431', '0.543103', '0.498221', '0.482969', '0.484402', '0.460654', '0.499568', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (561, 1127), (608, 1158), (542, 1134), (561, 1145), (548, 1145), (559, 1127), (497, 1136), (554, 1128), (601, 1144), (570, 1125), (550, 1152), (630, 1160), (560, 1124), (553, 1145), (559, 1154), (521, 1131), (578, 1157), (550, 1141)]
         : compromised: 0.4948, honest: 0.4869
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=0.667', 'Node 2: acc_rate=0.700']...
Round 007: test acc mean=0.4956 ± 0.0226 | min=0.4711 max=0.5625
         : test loss mean=939686.0823 ± 1485022.0513
         : individual accs = ['0.471053', '0.491364', '0.494232', '0.528497', '0.477954', '0.514410', '0.519651', '0.472050', '0.562500', '0.491135', '0.474650', '0.501333', '0.477431', '0.507759', '0.483096', '0.482969', '0.515598', '0.486295', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (557, 1127), (612, 1158), (542, 1134), (589, 1145), (595, 1145), (532, 1127), (639, 1136), (554, 1128), (543, 1144), (564, 1125), (550, 1152), (589, 1160), (543, 1124), (553, 1145), (595, 1154), (550, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4917, honest: 0.4995
         : coarse stats = ['Node 0: acc_rate=0.667', 'Node 1: acc_rate=0.643', 'Node 2: acc_rate=0.600']...
Round 008: test acc mean=0.4981 ± 0.0238 | min=0.4533 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.511404', '0.491364', '0.493345', '0.511226', '0.453263', '0.532751', '0.521397', '0.496007', '0.562500', '0.491135', '0.474650', '0.501333', '0.522569', '0.506897', '0.482206', '0.474236', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(583, 1140), (569, 1158), (556, 1127), (592, 1158), (514, 1134), (610, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (543, 1144), (564, 1125), (602, 1152), (588, 1160), (542, 1124), (543, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4974, honest: 0.4988
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.583', 'Node 2: acc_rate=0.525']...
Round 009: test acc mean=0.5049 ± 0.0206 | min=0.4780 max=0.5537
         : test loss mean=18547926.1503 ± 52956712.6500
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.528497', '0.522046', '0.485590', '0.478603', '0.496007', '0.553697', '0.488475', '0.525350', '0.501333', '0.522569', '0.493103', '0.482206', '0.517031', '0.510399', '0.483643', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (612, 1158), (592, 1134), (556, 1145), (548, 1145), (559, 1127), (629, 1136), (551, 1128), (601, 1144), (564, 1125), (602, 1152), (572, 1160), (542, 1124), (592, 1145), (589, 1154), (547, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4948, honest: 0.5150
         : coarse stats = ['Node 0: acc_rate=0.519', 'Node 1: acc_rate=0.519', 'Node 2: acc_rate=0.467']...
Round 010: test acc mean=0.5065 ± 0.0213 | min=0.4728 max=0.5625
         : test loss mean=83291.5805 ± 236302.0448
         : individual accs = ['0.472807', '0.508636', '0.493345', '0.528497', '0.522046', '0.485590', '0.478603', '0.503993', '0.562500', '0.508865', '0.525350', '0.498667', '0.522569', '0.506897', '0.478648', '0.517031', '0.484402', '0.491600', '0.522040', '0.517967']
         : correct/total = [(539, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (556, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (538, 1124), (592, 1145), (559, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5025, honest: 0.5105
         : coarse stats = ['Node 0: acc_rate=0.467', 'Node 1: acc_rate=0.467', 'Node 2: acc_rate=0.420']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.5025, Honest: 0.5105
Overall test accuracy: mean=0.5065 ± 0.0213

=== COARSE SUMMARY ===
Node 0: acceptance=0.467
Node 1: acceptance=0.467
Node 2: acceptance=0.420
Node 3: acceptance=0.500
Node 4: acceptance=0.475
Node 5: acceptance=0.460
Node 6: acceptance=0.460
Node 7: acceptance=0.440
Node 8: acceptance=0.450
Node 9: acceptance=0.500
Node 10: acceptance=0.500
Node 11: acceptance=0.457
Node 12: acceptance=0.486
Node 13: acceptance=0.450
Node 14: acceptance=0.429
Node 15: acceptance=0.467
Node 16: acceptance=0.420
Node 17: acceptance=0.500
Node 18: acceptance=0.475
Node 19: acceptance=0.700

Performance Summary:
  - Sketching time: 0.044s (14.2%)
  - Filtering time: 0.005s (1.5%)
  - Aggregation time: 0.260s (84.2%)
  - Total time: 0.309s
  - Mean acceptance rate: 0.476

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
