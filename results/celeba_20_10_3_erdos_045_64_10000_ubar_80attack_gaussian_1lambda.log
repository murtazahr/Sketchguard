Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Degree statistics: avg=9.90, min=7, max=14
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 2,219,692 parameters
  - Rho parameter: 0.19999999999999996
  - Stage 1: Distance-based filtering (select 20% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6231 ± 0.0551 | min=0.5232 max=0.7158
         : test loss mean=2785050.2231 ± 12139749.5293
         : individual accs = ['0.683333', '0.656304', '0.635315', '0.639896', '0.571429', '0.592140', '0.643668', '0.560781', '0.636444', '0.655142', '0.579545', '0.548444', '0.687500', '0.680172', '0.540036', '0.684716', '0.715771', '0.581786', '0.646500', '0.523225']
         : correct/total = [(779, 1140), (760, 1158), (716, 1127), (741, 1158), (648, 1134), (678, 1145), (737, 1145), (632, 1127), (723, 1136), (739, 1128), (663, 1144), (617, 1125), (792, 1152), (789, 1160), (607, 1124), (784, 1145), (826, 1154), (658, 1131), (748, 1157), (597, 1141)]
         : compromised: 0.6207, honest: 0.6328
         : ubar stats = ['Node 0: s1=0.167, s2=0.500', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 002: test acc mean=0.7015 ± 0.0643 | min=0.4961 max=0.7713
         : test loss mean=38429566399936379106686167678976.0000 ± 167510596381408835817747496566784.0000
         : individual accs = ['0.735965', '0.683074', '0.673469', '0.715889', '0.666667', '0.764192', '0.743231', '0.685004', '0.713028', '0.771277', '0.736888', '0.576000', '0.743056', '0.688793', '0.718861', '0.743231', '0.768631', '0.690539', '0.715644', '0.496056']
         : correct/total = [(839, 1140), (791, 1158), (759, 1127), (829, 1158), (756, 1134), (875, 1145), (851, 1145), (772, 1127), (810, 1136), (870, 1128), (843, 1144), (648, 1125), (856, 1152), (799, 1160), (808, 1124), (851, 1145), (887, 1154), (781, 1131), (828, 1157), (566, 1141)]
         : compromised: 0.6983, honest: 0.7141
         : ubar stats = ['Node 0: s1=0.167, s2=0.500', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 003: test acc mean=0.7970 ± 0.0669 | min=0.5180 max=0.8421
         : test loss mean=nan ± nan
         : individual accs = ['0.842105', '0.784974', '0.788820', '0.810017', '0.808642', '0.839301', '0.816594', '0.805679', '0.828345', '0.834220', '0.837413', '0.793778', '0.793403', '0.788793', '0.815836', '0.779913', '0.840555', '0.810787', '0.802939', '0.517967']
         : correct/total = [(960, 1140), (909, 1158), (889, 1127), (938, 1158), (917, 1134), (961, 1145), (935, 1145), (908, 1127), (941, 1136), (941, 1128), (958, 1144), (893, 1125), (914, 1152), (915, 1160), (917, 1124), (893, 1145), (970, 1154), (917, 1131), (929, 1157), (591, 1141)]
         : compromised: 0.7902, honest: 0.8242
         : ubar stats = ['Node 0: s1=0.167, s2=0.500', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 004: test acc mean=0.8425 ± 0.0782 | min=0.5180 max=0.8838
         : test loss mean=nan ± nan
         : individual accs = ['0.767544', '0.866149', '0.867791', '0.869603', '0.868607', '0.883843', '0.868122', '0.866903', '0.881162', '0.857270', '0.882867', '0.863111', '0.864583', '0.854310', '0.868327', '0.839301', '0.867418', '0.854111', '0.841832', '0.517967']
         : correct/total = [(875, 1140), (1003, 1158), (978, 1127), (1007, 1158), (985, 1134), (1012, 1145), (994, 1145), (977, 1127), (1001, 1136), (967, 1128), (1010, 1144), (971, 1125), (996, 1152), (991, 1160), (976, 1124), (961, 1145), (1001, 1154), (966, 1131), (974, 1157), (591, 1141)]
         : compromised: 0.8425, honest: 0.8426
         : ubar stats = ['Node 0: s1=0.167, s2=0.500', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 005: test acc mean=0.8503 ± 0.0770 | min=0.5180 max=0.8848
         : test loss mean=nan ± nan
         : individual accs = ['0.861404', '0.860104', '0.874002', '0.875648', '0.865079', '0.858515', '0.882969', '0.866903', '0.868838', '0.884752', '0.883741', '0.864000', '0.877604', '0.856897', '0.867438', '0.861135', '0.880416', '0.853227', '0.844425', '0.517967']
         : correct/total = [(982, 1140), (996, 1158), (985, 1127), (1014, 1158), (981, 1134), (983, 1145), (1011, 1145), (977, 1127), (987, 1136), (998, 1128), (1011, 1144), (972, 1125), (1011, 1152), (994, 1160), (975, 1124), (986, 1145), (1016, 1154), (965, 1131), (977, 1157), (591, 1141)]
         : compromised: 0.8457, honest: 0.8685
         : ubar stats = ['Node 0: s1=0.167, s2=0.600', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 006: test acc mean=0.8648 ± 0.0801 | min=0.5180 max=0.8950
         : test loss mean=nan ± nan
         : individual accs = ['0.877193', '0.894646', '0.879326', '0.889465', '0.885362', '0.888210', '0.870742', '0.890861', '0.887324', '0.891844', '0.891608', '0.881778', '0.872396', '0.882759', '0.895018', '0.865502', '0.890815', '0.883289', '0.860847', '0.517967']
         : correct/total = [(1000, 1140), (1036, 1158), (991, 1127), (1030, 1158), (1004, 1134), (1017, 1145), (997, 1145), (1004, 1127), (1008, 1136), (1006, 1128), (1020, 1144), (992, 1125), (1005, 1152), (1024, 1160), (1006, 1124), (991, 1145), (1028, 1154), (999, 1131), (996, 1157), (591, 1141)]
         : compromised: 0.8595, honest: 0.8861
         : ubar stats = ['Node 0: s1=0.167, s2=0.583', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 007: test acc mean=0.8737 ± 0.0821 | min=0.5180 max=0.9093
         : test loss mean=nan ± nan
         : individual accs = ['0.897368', '0.901554', '0.896185', '0.893782', '0.886243', '0.899563', '0.891703', '0.908607', '0.885563', '0.902482', '0.889860', '0.909333', '0.885417', '0.887069', '0.892349', '0.879476', '0.894281', '0.885057', '0.870354', '0.517967']
         : correct/total = [(1023, 1140), (1044, 1158), (1010, 1127), (1035, 1158), (1005, 1134), (1030, 1145), (1021, 1145), (1024, 1127), (1006, 1136), (1018, 1128), (1018, 1144), (1023, 1125), (1020, 1152), (1029, 1160), (1003, 1124), (1007, 1145), (1032, 1154), (1001, 1131), (1007, 1157), (591, 1141)]
         : compromised: 0.8680, honest: 0.8966
         : ubar stats = ['Node 0: s1=0.167, s2=0.571', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 008: test acc mean=0.8765 ± 0.0827 | min=0.5180 max=0.9111
         : test loss mean=nan ± nan
         : individual accs = ['0.897368', '0.893782', '0.893523', '0.898964', '0.895062', '0.903930', '0.895197', '0.909494', '0.882923', '0.892730', '0.894231', '0.911111', '0.897569', '0.889655', '0.908363', '0.888210', '0.895147', '0.885057', '0.879862', '0.517967']
         : correct/total = [(1023, 1140), (1035, 1158), (1007, 1127), (1041, 1158), (1015, 1134), (1035, 1145), (1025, 1145), (1025, 1127), (1003, 1136), (1007, 1128), (1023, 1144), (1025, 1125), (1034, 1152), (1032, 1160), (1021, 1124), (1017, 1145), (1033, 1154), (1001, 1131), (1018, 1157), (591, 1141)]
         : compromised: 0.8708, honest: 0.8993
         : ubar stats = ['Node 0: s1=0.167, s2=0.562', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 009: test acc mean=0.8784 ± 0.0835 | min=0.5180 max=0.9200
         : test loss mean=nan ± nan
         : individual accs = ['0.879825', '0.892919', '0.889086', '0.910190', '0.902116', '0.908297', '0.903057', '0.911269', '0.899648', '0.894504', '0.899476', '0.920000', '0.894097', '0.895690', '0.902135', '0.893450', '0.899480', '0.887710', '0.866897', '0.517967']
         : correct/total = [(1003, 1140), (1034, 1158), (1002, 1127), (1054, 1158), (1023, 1134), (1040, 1145), (1034, 1145), (1027, 1127), (1022, 1136), (1009, 1128), (1029, 1144), (1035, 1125), (1030, 1152), (1039, 1160), (1014, 1124), (1023, 1145), (1038, 1154), (1004, 1131), (1003, 1157), (591, 1141)]
         : compromised: 0.8734, honest: 0.8982
         : ubar stats = ['Node 0: s1=0.167, s2=0.556', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...
Round 010: test acc mean=0.8810 ± 0.0837 | min=0.5180 max=0.9175
         : test loss mean=nan ± nan
         : individual accs = ['0.903509', '0.896373', '0.897072', '0.905872', '0.904762', '0.905677', '0.892576', '0.917480', '0.893486', '0.907801', '0.895979', '0.904889', '0.899306', '0.906034', '0.911922', '0.897817', '0.897747', '0.885942', '0.878133', '0.517967']
         : correct/total = [(1030, 1140), (1038, 1158), (1011, 1127), (1049, 1158), (1026, 1134), (1037, 1145), (1022, 1145), (1034, 1127), (1015, 1136), (1024, 1128), (1025, 1144), (1018, 1125), (1036, 1152), (1051, 1160), (1025, 1124), (1028, 1145), (1036, 1154), (1002, 1131), (1016, 1157), (591, 1141)]
         : compromised: 0.8748, honest: 0.9059
         : ubar stats = ['Node 0: s1=0.167, s2=0.600', 'Node 1: s1=0.100, s2=1.000', 'Node 2: s1=0.125, s2=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: ubar
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.8748, Honest: 0.9059
Overall test accuracy: mean=0.8810 ± 0.0837

=== UBAR SUMMARY ===
Node 0: stage1=0.167, stage2=0.600, overall=0.100
Node 1: stage1=0.100, stage2=1.000, overall=0.100
Node 2: stage1=0.125, stage2=1.000, overall=0.125
Node 3: stage1=0.143, stage2=1.000, overall=0.143
Node 4: stage1=0.111, stage2=1.000, overall=0.111
Node 5: stage1=0.100, stage2=1.000, overall=0.100
Node 6: stage1=0.167, stage2=0.500, overall=0.083
Node 7: stage1=0.182, stage2=0.500, overall=0.091
Node 8: stage1=0.143, stage2=1.000, overall=0.143
Node 9: stage1=0.182, stage2=0.500, overall=0.091
Node 10: stage1=0.125, stage2=1.000, overall=0.125
Node 11: stage1=0.167, stage2=0.500, overall=0.083
Node 12: stage1=0.167, stage2=0.600, overall=0.100
Node 13: stage1=0.111, stage2=1.000, overall=0.111
Node 14: stage1=0.143, stage2=0.700, overall=0.100
Node 15: stage1=0.111, stage2=1.000, overall=0.111
Node 16: stage1=0.143, stage2=1.000, overall=0.143
Node 17: stage1=0.125, stage2=1.000, overall=0.125
Node 18: stage1=0.167, stage2=0.650, overall=0.108
Node 19: stage1=0.100, stage2=1.000, overall=0.100

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Distance computation: 0.034s (17.2%)
    - Loss computation: 0.159s (80.6%)
    - Aggregation: 0.004s (2.2%)
  TOTALS:
    - Total computation: 0.197s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.197s

=== PER-NODE AVERAGE TIME ===
  - Distance computation: 0.024s
  - Loss computation: 0.127s
  - Aggregation: 0.003s
  - Model transfer: 0.000s
  - Total per node: 0.153s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total distance computation: 0.472s
  - Total loss computation: 2.530s
  - Total aggregation: 0.050s
  - Total model transfer: 0.000s
  - Grand total: 3.052s
  - Mean Stage 1 acceptance rate: 0.139
  - Mean Stage 2 acceptance rate: 0.828
  - Overall acceptance rate: 0.115

UBAR Algorithm Properties:
  - Model dimension: 2,219,692
  - Rho parameter: 0.19999999999999996
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 20% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
