Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 6,603,710 parameters
  - Rho parameter: 0.5
  - Stage 1: Distance-based filtering (select 50% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3817 ± 0.1003 | min=0.1509 max=0.5328
         : test loss mean=3.6286 ± 0.0945
         : individual accs = ['0.408430', '0.404711', '0.421710', '0.417955', '0.494011', '0.352694', '0.410923', '0.163946', '0.413982', '0.420856', '0.150857', '0.481517', '0.303445', '0.334286', '0.532823', '0.349218', '0.442572', '0.475496', '0.230901', '0.424176']
         : correct/total = [(1686, 4128), (1701, 4203), (1721, 4081), (1811, 4333), (2021, 4091), (1512, 4287), (1723, 4193), (713, 4349), (1735, 4191), (1800, 4277), (625, 4143), (2019, 4193), (1242, 4093), (1403, 4197), (2159, 4052), (1407, 4029), (1838, 4153), (1989, 4183), (943, 4084), (1751, 4128)]
         : compromised: 0.3887, honest: 0.3748
         : ubar stats = ['Node 0: s1=0.500, s2=0.333', 'Node 1: s1=0.500, s2=0.333', 'Node 2: s1=0.400, s2=0.500']...
Round 002: test acc mean=0.6722 ± 0.0533 | min=0.5620 max=0.7433
         : test loss mean=1.9296 ± 0.8520
         : individual accs = ['0.686289', '0.617178', '0.686596', '0.743134', '0.661208', '0.680896', '0.615550', '0.676017', '0.743259', '0.732757', '0.695873', '0.564274', '0.688004', '0.693591', '0.695953', '0.598412', '0.663376', '0.562037', '0.735309', '0.704700']
         : correct/total = [(2833, 4128), (2594, 4203), (2802, 4081), (3220, 4333), (2705, 4091), (2919, 4287), (2581, 4193), (2940, 4349), (3115, 4191), (3134, 4277), (2883, 4143), (2366, 4193), (2816, 4093), (2911, 4197), (2820, 4052), (2411, 4029), (2755, 4153), (2351, 4183), (3003, 4084), (2909, 4128)]
         : compromised: 0.6522, honest: 0.6922
         : ubar stats = ['Node 0: s1=0.500, s2=0.333', 'Node 1: s1=0.500, s2=0.333', 'Node 2: s1=0.400, s2=0.500']...
Round 003: test acc mean=0.7714 ± 0.0278 | min=0.6869 max=0.8013
         : test loss mean=1.0864 ± 0.5861
         : individual accs = ['0.783430', '0.686890', '0.771380', '0.793446', '0.780983', '0.766037', '0.772001', '0.795125', '0.787879', '0.798457', '0.754526', '0.782018', '0.758368', '0.801287', '0.787512', '0.711095', '0.777269', '0.775520', '0.755632', '0.788760']
         : correct/total = [(3234, 4128), (2887, 4203), (3148, 4081), (3438, 4333), (3195, 4091), (3284, 4287), (3237, 4193), (3458, 4349), (3302, 4191), (3415, 4277), (3126, 4143), (3279, 4193), (3104, 4093), (3363, 4197), (3191, 4052), (2865, 4029), (3228, 4153), (3244, 4183), (3086, 4084), (3256, 4128)]
         : compromised: 0.7596, honest: 0.7832
         : ubar stats = ['Node 0: s1=0.500, s2=0.444', 'Node 1: s1=0.500, s2=0.556', 'Node 2: s1=0.400, s2=0.500']...
Round 004: test acc mean=0.7960 ± 0.0267 | min=0.7131 max=0.8218
         : test loss mean=0.9127 ± 0.5400
         : individual accs = ['0.801841', '0.713062', '0.800784', '0.821832', '0.807138', '0.809191', '0.783449', '0.816739', '0.814603', '0.819500', '0.798697', '0.802528', '0.776203', '0.819395', '0.811945', '0.793497', '0.799904', '0.792015', '0.736533', '0.802083']
         : correct/total = [(3310, 4128), (2997, 4203), (3268, 4081), (3561, 4333), (3302, 4091), (3469, 4287), (3285, 4193), (3552, 4349), (3414, 4191), (3505, 4277), (3309, 4143), (3365, 4193), (3177, 4093), (3439, 4197), (3290, 4052), (3197, 4029), (3322, 4153), (3313, 4183), (3008, 4084), (3311, 4128)]
         : compromised: 0.7855, honest: 0.8066
         : ubar stats = ['Node 0: s1=0.500, s2=0.500', 'Node 1: s1=0.500, s2=0.583', 'Node 2: s1=0.400, s2=0.500']...
Round 005: test acc mean=0.8154 ± 0.0105 | min=0.7944 max=0.8308
         : test loss mean=0.6463 ± 0.2188
         : individual accs = ['0.814438', '0.800857', '0.815241', '0.828525', '0.820826', '0.819687', '0.794419', '0.830766', '0.829874', '0.827683', '0.808834', '0.811114', '0.804056', '0.822731', '0.821323', '0.807396', '0.818685', '0.821181', '0.797258', '0.812984']
         : correct/total = [(3362, 4128), (3366, 4203), (3327, 4081), (3590, 4333), (3358, 4091), (3514, 4287), (3331, 4193), (3613, 4349), (3478, 4191), (3540, 4277), (3351, 4143), (3401, 4193), (3291, 4093), (3453, 4197), (3328, 4052), (3253, 4029), (3400, 4153), (3435, 4183), (3256, 4084), (3356, 4128)]
         : compromised: 0.8121, honest: 0.8187
         : ubar stats = ['Node 0: s1=0.500, s2=0.467', 'Node 1: s1=0.500, s2=0.533', 'Node 2: s1=0.400, s2=0.500']...
Round 006: test acc mean=0.8271 ± 0.0091 | min=0.8041 max=0.8427
         : test loss mean=0.6083 ± 0.1960
         : individual accs = ['0.821221', '0.826315', '0.820877', '0.834526', '0.823026', '0.832050', '0.814214', '0.838124', '0.834884', '0.834463', '0.817524', '0.830193', '0.817005', '0.842745', '0.830701', '0.826011', '0.832892', '0.834090', '0.804114', '0.826793']
         : correct/total = [(3390, 4128), (3473, 4203), (3350, 4081), (3616, 4333), (3367, 4091), (3567, 4287), (3414, 4193), (3645, 4349), (3499, 4191), (3569, 4277), (3387, 4143), (3481, 4193), (3344, 4093), (3537, 4197), (3366, 4052), (3328, 4029), (3459, 4153), (3489, 4183), (3284, 4084), (3413, 4128)]
         : compromised: 0.8264, honest: 0.8278
         : ubar stats = ['Node 0: s1=0.500, s2=0.444', 'Node 1: s1=0.500, s2=0.500', 'Node 2: s1=0.400, s2=0.500']...
Round 007: test acc mean=0.8232 ± 0.0302 | min=0.7369 max=0.8499
         : test loss mean=0.8938 ± 0.6844
         : individual accs = ['0.834302', '0.740899', '0.816467', '0.847911', '0.833781', '0.832050', '0.813737', '0.849161', '0.840849', '0.841244', '0.823316', '0.830670', '0.818471', '0.849893', '0.835884', '0.736907', '0.842523', '0.835764', '0.811459', '0.828004']
         : correct/total = [(3444, 4128), (3114, 4203), (3332, 4081), (3674, 4333), (3411, 4091), (3567, 4287), (3412, 4193), (3693, 4349), (3524, 4191), (3598, 4277), (3411, 4143), (3483, 4193), (3350, 4093), (3567, 4197), (3387, 4052), (2969, 4029), (3499, 4153), (3496, 4183), (3314, 4084), (3418, 4128)]
         : compromised: 0.8108, honest: 0.8355
         : ubar stats = ['Node 0: s1=0.500, s2=0.429', 'Node 1: s1=0.500, s2=0.476', 'Node 2: s1=0.400, s2=0.571']...
Round 008: test acc mean=0.8331 ± 0.0138 | min=0.8015 max=0.8499
         : test loss mean=0.6704 ± 0.3122
         : individual accs = ['0.828004', '0.821556', '0.801519', '0.847681', '0.840381', '0.843947', '0.822323', '0.848931', '0.842281', '0.848258', '0.826213', '0.834963', '0.832641', '0.849893', '0.843040', '0.801936', '0.837708', '0.838393', '0.824927', '0.826550']
         : correct/total = [(3418, 4128), (3453, 4203), (3271, 4081), (3673, 4333), (3438, 4091), (3618, 4287), (3448, 4193), (3692, 4349), (3530, 4191), (3628, 4277), (3423, 4143), (3501, 4193), (3408, 4093), (3567, 4197), (3416, 4052), (3231, 4029), (3479, 4153), (3507, 4183), (3369, 4084), (3412, 4128)]
         : compromised: 0.8293, honest: 0.8368
         : ubar stats = ['Node 0: s1=0.500, s2=0.417', 'Node 1: s1=0.500, s2=0.542', 'Node 2: s1=0.400, s2=0.625']...
Round 009: test acc mean=0.8377 ± 0.0143 | min=0.8011 max=0.8556
         : test loss mean=0.6201 ± 0.3098
         : individual accs = ['0.837452', '0.801094', '0.817202', '0.853681', '0.839648', '0.845580', '0.843549', '0.854219', '0.855643', '0.848726', '0.835385', '0.833532', '0.838505', '0.847987', '0.840326', '0.812112', '0.843968', '0.843892', '0.819050', '0.842539']
         : correct/total = [(3457, 4128), (3367, 4203), (3335, 4081), (3699, 4333), (3435, 4091), (3625, 4287), (3537, 4193), (3715, 4349), (3586, 4191), (3630, 4277), (3461, 4143), (3495, 4193), (3432, 4093), (3559, 4197), (3405, 4052), (3272, 4029), (3505, 4153), (3530, 4183), (3345, 4084), (3478, 4128)]
         : compromised: 0.8299, honest: 0.8455
         : ubar stats = ['Node 0: s1=0.500, s2=0.407', 'Node 1: s1=0.500, s2=0.519', 'Node 2: s1=0.400, s2=0.667']...
Round 010: test acc mean=0.8408 ± 0.0183 | min=0.7770 max=0.8588
         : test loss mean=0.6628 ± 0.5138
         : individual accs = ['0.839147', '0.822746', '0.840480', '0.858758', '0.841604', '0.843480', '0.851419', '0.856519', '0.855882', '0.855506', '0.841178', '0.777009', '0.843147', '0.855849', '0.849457', '0.835691', '0.843487', '0.850347', '0.813908', '0.840601']
         : correct/total = [(3464, 4128), (3458, 4203), (3430, 4081), (3721, 4333), (3443, 4091), (3616, 4287), (3570, 4193), (3725, 4349), (3587, 4191), (3659, 4277), (3485, 4143), (3258, 4193), (3451, 4093), (3592, 4197), (3442, 4052), (3367, 4029), (3503, 4153), (3557, 4183), (3324, 4084), (3470, 4128)]
         : compromised: 0.8332, honest: 0.8484
         : ubar stats = ['Node 0: s1=0.500, s2=0.400', 'Node 1: s1=0.500, s2=0.567', 'Node 2: s1=0.400, s2=0.650']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: ubar
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.8332, Honest: 0.8484
Overall test accuracy: mean=0.8408 ± 0.0183

=== UBAR SUMMARY ===
Node 0: stage1=0.500, stage2=0.400, overall=0.200
Node 1: stage1=0.500, stage2=0.567, overall=0.283
Node 2: stage1=0.400, stage2=0.650, overall=0.260
Node 3: stage1=0.500, stage2=0.550, overall=0.275
Node 4: stage1=0.500, stage2=0.500, overall=0.250
Node 5: stage1=0.400, stage2=0.500, overall=0.200
Node 6: stage1=0.400, stage2=0.600, overall=0.240
Node 7: stage1=0.400, stage2=0.550, overall=0.220
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.333, stage2=1.000, overall=0.333
Node 10: stage1=0.500, stage2=0.500, overall=0.250
Node 11: stage1=0.429, stage2=0.600, overall=0.257
Node 12: stage1=0.429, stage2=0.567, overall=0.243
Node 13: stage1=0.500, stage2=0.500, overall=0.250
Node 14: stage1=0.429, stage2=0.333, overall=0.143
Node 15: stage1=0.500, stage2=0.367, overall=0.183
Node 16: stage1=0.400, stage2=0.500, overall=0.200
Node 17: stage1=0.400, stage2=0.600, overall=0.240
Node 18: stage1=0.500, stage2=0.600, overall=0.300
Node 19: stage1=0.500, stage2=1.000, overall=0.500

Performance Summary:
  - Distance computation time: 0.485s (0.5%)
  - Loss computation time: 94.201s (99.4%)
  - Aggregation time: 0.126s (0.1%)
  - Total time: 94.812s
  - Mean Stage 1 acceptance rate: 0.451
  - Mean Stage 2 acceptance rate: 0.594
  - Overall acceptance rate: 0.268

UBAR Algorithm Properties:
  - Model dimension: 6,603,710
  - Rho parameter: 0.5
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 50% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
