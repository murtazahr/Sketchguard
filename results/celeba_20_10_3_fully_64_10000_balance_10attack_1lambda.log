Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5170 ± 0.0157 | min=0.4911 max=0.5625
         : test loss mean=1.0223 ± 0.3464
         : individual accs = ['0.528947', '0.508636', '0.495120', '0.528497', '0.522046', '0.514410', '0.518777', '0.503993', '0.562500', '0.491135', '0.524476', '0.498667', '0.540799', '0.511207', '0.517794', '0.509170', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (558, 1127), (612, 1158), (592, 1134), (589, 1145), (594, 1145), (568, 1127), (639, 1136), (554, 1128), (600, 1144), (561, 1125), (623, 1152), (593, 1160), (582, 1124), (583, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5128, honest: 0.5175
Round 002: test acc mean=0.5294 ± 0.0219 | min=0.4920 max=0.5760
         : test loss mean=0.7303 ± 0.0519
         : individual accs = ['0.526316', '0.509499', '0.526176', '0.567358', '0.521164', '0.514410', '0.520524', '0.550133', '0.551937', '0.492021', '0.564685', '0.576000', '0.526042', '0.506897', '0.529359', '0.519651', '0.515598', '0.506631', '0.542783', '0.520596']
         : correct/total = [(600, 1140), (590, 1158), (593, 1127), (657, 1158), (591, 1134), (589, 1145), (596, 1145), (620, 1127), (627, 1136), (555, 1128), (646, 1144), (648, 1125), (606, 1152), (588, 1160), (595, 1124), (595, 1145), (595, 1154), (573, 1131), (628, 1157), (594, 1141)]
         : compromised: 0.5107, honest: 0.5315
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8902 ± 0.0879
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 004: test acc mean=0.5151 ± 0.0167 | min=0.4823 max=0.5625
         : test loss mean=1.1565 ± 0.3697
         : individual accs = ['0.516667', '0.500000', '0.492458', '0.539724', '0.514109', '0.514410', '0.521397', '0.530612', '0.562500', '0.482270', '0.513112', '0.499556', '0.519097', '0.506897', '0.518683', '0.513537', '0.516464', '0.500442', '0.522040', '0.517090']
         : correct/total = [(589, 1140), (579, 1158), (555, 1127), (625, 1158), (583, 1134), (589, 1145), (597, 1145), (598, 1127), (639, 1136), (544, 1128), (587, 1144), (562, 1125), (598, 1152), (588, 1160), (583, 1124), (588, 1145), (596, 1154), (566, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.5107, honest: 0.5155
Round 005: test acc mean=0.5184 ± 0.0144 | min=0.4911 max=0.5625
         : test loss mean=0.7643 ± 0.0713
         : individual accs = ['0.528947', '0.508636', '0.533274', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (601, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5192
Round 006: test acc mean=0.5161 ± 0.0149 | min=0.4911 max=0.5616
         : test loss mean=1.4415 ± 0.3743
         : individual accs = ['0.528947', '0.507772', '0.493345', '0.527634', '0.522046', '0.514410', '0.521397', '0.503993', '0.561620', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.515284', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (588, 1158), (556, 1127), (611, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (638, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (590, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5168
Round 007: test acc mean=0.5166 ± 0.0152 | min=0.4911 max=0.5625
         : test loss mean=0.7833 ± 0.0576
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.532815', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (617, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5172
Round 008: test acc mean=0.5201 ± 0.0171 | min=0.4911 max=0.5634
         : test loss mean=0.9013 ± 0.1366
         : individual accs = ['0.547368', '0.510363', '0.493345', '0.533679', '0.522046', '0.515284', '0.521397', '0.508429', '0.563380', '0.491135', '0.539336', '0.501333', '0.537326', '0.512931', '0.522242', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(624, 1140), (591, 1158), (556, 1127), (618, 1158), (592, 1134), (590, 1145), (597, 1145), (573, 1127), (640, 1136), (554, 1128), (617, 1144), (564, 1125), (619, 1152), (595, 1160), (587, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5141, honest: 0.5207
Round 009: test acc mean=0.5166 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.9546 ± 0.1280
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.516157', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.510345', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (591, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (592, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5133, honest: 0.5170
Round 010: test acc mean=0.5948 ± 0.0670 | min=0.5239 max=0.8061
         : test loss mean=0.6403 ± 0.0397
         : individual accs = ['0.599123', '0.539724', '0.524401', '0.579447', '0.554674', '0.806114', '0.534498', '0.560781', '0.600352', '0.523936', '0.695804', '0.616889', '0.582465', '0.584483', '0.693060', '0.626201', '0.558925', '0.579134', '0.547105', '0.588081']
         : correct/total = [(683, 1140), (625, 1158), (591, 1127), (671, 1158), (629, 1134), (923, 1145), (612, 1145), (632, 1127), (682, 1136), (591, 1128), (796, 1144), (694, 1125), (671, 1152), (678, 1160), (779, 1124), (717, 1145), (645, 1154), (655, 1131), (633, 1157), (671, 1141)]
         : compromised: 0.6953, honest: 0.5836

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.6953, Honest: 0.5836
Overall test accuracy: mean=0.5948 ± 0.0670

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 2.929s (43.9%)
  - Filtering time: 3.072s (46.0%)
  - Aggregation time: 0.673s (10.1%)
  - Total time: 6.673s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
