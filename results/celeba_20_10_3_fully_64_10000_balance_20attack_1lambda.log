Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5119 ± 0.0212 | min=0.4624 max=0.5625
         : test loss mean=6.1203 ± 4.4061
         : individual accs = ['0.528947', '0.520725', '0.493345', '0.510363', '0.520282', '0.510917', '0.475983', '0.503993', '0.562500', '0.502660', '0.525350', '0.509333', '0.514757', '0.507759', '0.501779', '0.506550', '0.521664', '0.509284', '0.462403', '0.548642']
         : correct/total = [(603, 1140), (603, 1158), (556, 1127), (591, 1158), (590, 1134), (585, 1145), (545, 1145), (568, 1127), (639, 1136), (567, 1128), (601, 1144), (573, 1125), (593, 1152), (589, 1160), (564, 1124), (580, 1145), (602, 1154), (576, 1131), (535, 1157), (626, 1141)]
         : compromised: 0.5107, honest: 0.5122
Round 002: test acc mean=0.5171 ± 0.0147 | min=0.4925 max=0.5625
         : test loss mean=2.1454 ± 0.8756
         : individual accs = ['0.527193', '0.523316', '0.492458', '0.527634', '0.522046', '0.514410', '0.520524', '0.499556', '0.562500', '0.494681', '0.525350', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.521472']
         : correct/total = [(601, 1140), (606, 1158), (555, 1127), (611, 1158), (592, 1134), (589, 1145), (596, 1145), (563, 1127), (639, 1136), (558, 1128), (601, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (595, 1141)]
         : compromised: 0.5131, honest: 0.5182
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9895 ± 0.0794
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 004: test acc mean=0.5165 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=8.7475 ± 2.1298
         : individual accs = ['0.528947', '0.512953', '0.493345', '0.528497', '0.522046', '0.516157', '0.519651', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.516904', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (594, 1158), (556, 1127), (612, 1158), (592, 1134), (591, 1145), (595, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (581, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5135, honest: 0.5173
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8781 ± 0.0536
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 006: test acc mean=0.5338 ± 0.0301 | min=0.5022 max=0.6192
         : test loss mean=8.6474 ± 3.0029
         : individual accs = ['0.532456', '0.527634', '0.504880', '0.590674', '0.522928', '0.619214', '0.521397', '0.506655', '0.563380', '0.507979', '0.525350', '0.502222', '0.552951', '0.574138', '0.521352', '0.517031', '0.516464', '0.518126', '0.524633', '0.525855']
         : correct/total = [(607, 1140), (611, 1158), (569, 1127), (684, 1158), (593, 1134), (709, 1145), (597, 1145), (571, 1127), (640, 1136), (573, 1128), (601, 1144), (565, 1125), (637, 1152), (666, 1160), (586, 1124), (592, 1145), (596, 1154), (586, 1131), (607, 1157), (600, 1141)]
         : compromised: 0.5661, honest: 0.5257
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8567 ± 0.0516
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 008: test acc mean=0.7530 ± 0.0492 | min=0.6393 max=0.8638
         : test loss mean=3.1600 ± 1.2753
         : individual accs = ['0.733333', '0.759931', '0.716060', '0.770294', '0.793651', '0.863755', '0.783406', '0.765750', '0.757042', '0.741135', '0.698427', '0.750222', '0.811632', '0.807759', '0.760676', '0.639301', '0.688908', '0.784262', '0.694036', '0.739702']
         : correct/total = [(836, 1140), (880, 1158), (807, 1127), (892, 1158), (900, 1134), (989, 1145), (897, 1145), (863, 1127), (860, 1136), (836, 1128), (799, 1144), (844, 1125), (935, 1152), (937, 1160), (855, 1124), (732, 1145), (795, 1154), (887, 1131), (803, 1157), (844, 1141)]
         : compromised: 0.8169, honest: 0.7370
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8822 ± 0.0698
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 010: test acc mean=0.8141 ± 0.0358 | min=0.7267 max=0.8811
         : test loss mean=1.7982 ± 0.6759
         : individual accs = ['0.812281', '0.810881', '0.726708', '0.801382', '0.821869', '0.860262', '0.767686', '0.786158', '0.795775', '0.812943', '0.830420', '0.865778', '0.881076', '0.849138', '0.825623', '0.783406', '0.781629', '0.832891', '0.793431', '0.842244']
         : correct/total = [(926, 1140), (939, 1158), (819, 1127), (928, 1158), (932, 1134), (985, 1145), (879, 1145), (886, 1127), (904, 1136), (917, 1128), (950, 1144), (974, 1125), (1015, 1152), (985, 1160), (928, 1124), (897, 1145), (902, 1154), (942, 1131), (918, 1157), (961, 1141)]
         : compromised: 0.8558, honest: 0.8036

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.8558, Honest: 0.8036
Overall test accuracy: mean=0.8141 ± 0.0358

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 2.956s (43.8%)
  - Filtering time: 3.100s (46.0%)
  - Aggregation time: 0.690s (10.2%)
  - Total time: 6.746s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
