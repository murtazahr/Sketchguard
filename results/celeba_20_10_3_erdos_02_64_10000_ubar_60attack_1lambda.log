Device: cpu
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 2,219,692 parameters
  - Rho parameter: 0.4
  - Stage 1: Distance-based filtering (select 40% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.4978 ± 0.0207
Round 001: test acc mean=0.6164 ± 0.0548 | min=0.5060 max=0.7158
         : test loss mean=75.0255 ± 324.0925
         : individual accs = ['0.635088', '0.589810', '0.636202', '0.682211', '0.573192', '0.588646', '0.643668', '0.613132', '0.635563', '0.655142', '0.530594', '0.609778', '0.687500', '0.506034', '0.627224', '0.680349', '0.715771', '0.580902', '0.615385', '0.521472']
         : correct/total = [(724, 1140), (683, 1158), (717, 1127), (790, 1158), (650, 1134), (674, 1145), (737, 1145), (691, 1127), (722, 1136), (739, 1128), (607, 1144), (686, 1125), (792, 1152), (587, 1160), (705, 1124), (779, 1145), (826, 1154), (657, 1131), (712, 1157), (595, 1141)]
         : compromised: 0.6200, honest: 0.6110
         : ubar stats = ['Node 0: s1=0.333, s2=0.500', 'Node 1: s1=0.333, s2=0.500', 'Node 2: s1=0.400, s2=0.500']...
Round 002: test acc mean=0.7209 ± 0.0562 | min=0.5069 max=0.7787
         : test loss mean=nan ± nan
         : individual accs = ['0.702632', '0.727979', '0.680568', '0.744387', '0.687831', '0.716157', '0.763319', '0.736469', '0.747359', '0.765957', '0.771853', '0.778667', '0.723090', '0.506897', '0.712633', '0.739738', '0.740035', '0.709107', '0.701815', '0.762489']
         : correct/total = [(801, 1140), (843, 1158), (767, 1127), (862, 1158), (780, 1134), (820, 1145), (874, 1145), (830, 1127), (849, 1136), (864, 1128), (883, 1144), (876, 1125), (833, 1152), (588, 1160), (801, 1124), (847, 1145), (854, 1154), (802, 1131), (812, 1157), (870, 1141)]
         : compromised: 0.7074, honest: 0.7413
         : ubar stats = ['Node 0: s1=0.333, s2=0.500', 'Node 1: s1=0.333, s2=0.500', 'Node 2: s1=0.400, s2=0.750']...
Round 003: test acc mean=0.7848 ± 0.0742 | min=0.5069 max=0.8584
         : test loss mean=nan ± nan
         : individual accs = ['0.814035', '0.772021', '0.714286', '0.836788', '0.804233', '0.814847', '0.819214', '0.815439', '0.815141', '0.820035', '0.858392', '0.764444', '0.800347', '0.506897', '0.811388', '0.701310', '0.815425', '0.801061', '0.767502', '0.843996']
         : correct/total = [(928, 1140), (894, 1158), (805, 1127), (969, 1158), (912, 1134), (933, 1145), (938, 1145), (919, 1127), (926, 1136), (925, 1128), (982, 1144), (860, 1125), (922, 1152), (588, 1160), (912, 1124), (803, 1145), (941, 1154), (906, 1131), (888, 1157), (963, 1141)]
         : compromised: 0.7588, honest: 0.8238
         : ubar stats = ['Node 0: s1=0.333, s2=0.500', 'Node 1: s1=0.333, s2=0.500', 'Node 2: s1=0.400, s2=0.833']...
Round 004: test acc mean=0.8141 ± 0.0957 | min=0.5069 max=0.8855
         : test loss mean=nan ± nan
         : individual accs = ['0.856140', '0.867012', '0.653061', '0.861831', '0.847443', '0.867249', '0.862882', '0.857143', '0.868838', '0.875000', '0.885490', '0.783111', '0.851562', '0.506897', '0.836299', '0.807860', '0.850953', '0.646331', '0.823682', '0.872918']
         : correct/total = [(976, 1140), (1004, 1158), (736, 1127), (998, 1158), (961, 1134), (993, 1145), (988, 1145), (966, 1127), (987, 1136), (987, 1128), (1013, 1144), (881, 1125), (981, 1152), (588, 1160), (940, 1124), (925, 1145), (982, 1154), (731, 1131), (953, 1157), (996, 1141)]
         : compromised: 0.7811, honest: 0.8635
         : ubar stats = ['Node 0: s1=0.333, s2=0.500', 'Node 1: s1=0.333, s2=0.625', 'Node 2: s1=0.400, s2=0.875']...
Round 005: test acc mean=0.8433 ± 0.0809 | min=0.5069 max=0.8899
         : test loss mean=nan ± nan
         : individual accs = ['0.852632', '0.886874', '0.802130', '0.882556', '0.859788', '0.823581', '0.859389', '0.874002', '0.881162', '0.885638', '0.889860', '0.867556', '0.876736', '0.506897', '0.864769', '0.838428', '0.879549', '0.835544', '0.821089', '0.877301']
         : correct/total = [(972, 1140), (1027, 1158), (904, 1127), (1022, 1158), (975, 1134), (943, 1145), (984, 1145), (985, 1127), (1001, 1136), (999, 1128), (1018, 1144), (976, 1125), (1010, 1152), (588, 1160), (972, 1124), (960, 1145), (1015, 1154), (945, 1131), (950, 1157), (1001, 1141)]
         : compromised: 0.8239, honest: 0.8723
         : ubar stats = ['Node 0: s1=0.333, s2=0.600', 'Node 1: s1=0.333, s2=0.600', 'Node 2: s1=0.400, s2=0.800']...
Round 006: test acc mean=0.8551 ± 0.0866 | min=0.5069 max=0.8995
         : test loss mean=nan ± nan
         : individual accs = ['0.887719', '0.889465', '0.875776', '0.876511', '0.878307', '0.895197', '0.888210', '0.890861', '0.892606', '0.885638', '0.891608', '0.876444', '0.881944', '0.506897', '0.896797', '0.759825', '0.899480', '0.810787', '0.833189', '0.885188']
         : correct/total = [(1012, 1140), (1030, 1158), (987, 1127), (1015, 1158), (996, 1134), (1025, 1145), (1017, 1145), (1004, 1127), (1014, 1136), (999, 1128), (1020, 1144), (986, 1125), (1016, 1152), (588, 1160), (1008, 1124), (870, 1145), (1038, 1154), (917, 1131), (964, 1157), (1010, 1141)]
         : compromised: 0.8330, honest: 0.8884
         : ubar stats = ['Node 0: s1=0.333, s2=0.583', 'Node 1: s1=0.333, s2=0.583', 'Node 2: s1=0.400, s2=0.750']...
Round 007: test acc mean=0.8681 ± 0.0843 | min=0.5069 max=0.9012
         : test loss mean=nan ± nan
         : individual accs = ['0.894737', '0.896373', '0.888199', '0.898964', '0.876543', '0.899563', '0.896943', '0.889973', '0.885563', '0.897163', '0.901224', '0.855111', '0.889757', '0.506897', '0.899466', '0.842795', '0.898614', '0.884173', '0.867761', '0.893076']
         : correct/total = [(1020, 1140), (1038, 1158), (1001, 1127), (1041, 1158), (994, 1134), (1030, 1145), (1027, 1145), (1003, 1127), (1006, 1136), (1012, 1128), (1031, 1144), (962, 1125), (1025, 1152), (588, 1160), (1011, 1124), (965, 1145), (1037, 1154), (1000, 1131), (1004, 1157), (1019, 1141)]
         : compromised: 0.8512, honest: 0.8935
         : ubar stats = ['Node 0: s1=0.333, s2=0.571', 'Node 1: s1=0.333, s2=0.571', 'Node 2: s1=0.400, s2=0.714']...
Round 008: test acc mean=0.8642 ± 0.0928 | min=0.5069 max=0.9057
         : test loss mean=nan ± nan
         : individual accs = ['0.896491', '0.892919', '0.695652', '0.899827', '0.889771', '0.903057', '0.893450', '0.896185', '0.893486', '0.890957', '0.890734', '0.898667', '0.898438', '0.506897', '0.905694', '0.879476', '0.901213', '0.885942', '0.878133', '0.886941']
         : correct/total = [(1022, 1140), (1034, 1158), (784, 1127), (1042, 1158), (1009, 1134), (1034, 1145), (1023, 1145), (1010, 1127), (1015, 1136), (1005, 1128), (1019, 1144), (1011, 1125), (1035, 1152), (588, 1160), (1018, 1124), (1007, 1145), (1040, 1154), (1002, 1131), (1016, 1157), (1012, 1141)]
         : compromised: 0.8448, honest: 0.8932
         : ubar stats = ['Node 0: s1=0.333, s2=0.562', 'Node 1: s1=0.333, s2=0.625', 'Node 2: s1=0.400, s2=0.688']...
Round 009: test acc mean=0.8742 ± 0.0851 | min=0.5069 max=0.9066
         : test loss mean=nan ± nan
         : individual accs = ['0.900877', '0.891192', '0.858917', '0.903282', '0.898589', '0.903930', '0.906550', '0.905945', '0.897887', '0.887411', '0.904720', '0.904889', '0.894965', '0.506897', '0.893238', '0.884716', '0.900347', '0.881521', '0.870354', '0.888694']
         : correct/total = [(1027, 1140), (1032, 1158), (968, 1127), (1046, 1158), (1019, 1134), (1035, 1145), (1038, 1145), (1021, 1127), (1020, 1136), (1001, 1128), (1035, 1144), (1018, 1125), (1031, 1152), (588, 1160), (1004, 1124), (1013, 1145), (1039, 1154), (997, 1131), (1007, 1157), (1014, 1141)]
         : compromised: 0.8576, honest: 0.8991
         : ubar stats = ['Node 0: s1=0.333, s2=0.556', 'Node 1: s1=0.333, s2=0.611', 'Node 2: s1=0.400, s2=0.667']...
Round 010: test acc mean=0.8772 ± 0.0866 | min=0.5069 max=0.9119
         : test loss mean=nan ± nan
         : individual accs = ['0.908772', '0.903282', '0.834960', '0.911917', '0.896825', '0.901310', '0.902183', '0.908607', '0.901408', '0.903369', '0.905594', '0.896000', '0.903646', '0.506897', '0.908363', '0.888210', '0.907279', '0.889478', '0.874676', '0.892200']
         : correct/total = [(1036, 1140), (1046, 1158), (941, 1127), (1056, 1158), (1017, 1134), (1032, 1145), (1033, 1145), (1024, 1127), (1024, 1136), (1019, 1128), (1036, 1144), (1008, 1125), (1041, 1152), (588, 1160), (1021, 1124), (1017, 1145), (1047, 1154), (1006, 1131), (1012, 1157), (1018, 1141)]
         : compromised: 0.8600, honest: 0.9031
         : ubar stats = ['Node 0: s1=0.333, s2=0.550', 'Node 1: s1=0.333, s2=0.600', 'Node 2: s1=0.400, s2=0.700']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: ubar
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.8600, Honest: 0.9031
Overall test accuracy: mean=0.8772 ± 0.0866

=== UBAR SUMMARY ===
Node 0: stage1=0.333, stage2=0.550, overall=0.183
Node 1: stage1=0.333, stage2=0.600, overall=0.200
Node 2: stage1=0.400, stage2=0.700, overall=0.280
Node 3: stage1=0.250, stage2=1.000, overall=0.250
Node 4: stage1=0.250, stage2=1.000, overall=0.250
Node 5: stage1=0.400, stage2=0.500, overall=0.200
Node 6: stage1=0.400, stage2=0.500, overall=0.200
Node 7: stage1=0.400, stage2=0.600, overall=0.240
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.333, stage2=1.000, overall=0.333
Node 10: stage1=0.250, stage2=1.000, overall=0.250
Node 11: stage1=0.286, stage2=0.600, overall=0.171
Node 12: stage1=0.286, stage2=0.650, overall=0.186
Node 13: stage1=0.250, stage2=1.000, overall=0.250
Node 14: stage1=0.286, stage2=0.500, overall=0.143
Node 15: stage1=0.333, stage2=0.600, overall=0.200
Node 16: stage1=0.400, stage2=0.500, overall=0.200
Node 17: stage1=0.400, stage2=0.550, overall=0.220
Node 18: stage1=0.250, stage2=1.000, overall=0.250
Node 19: stage1=0.500, stage2=1.000, overall=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Distance computation: 0.024s (9.1%)
    - Loss computation: 0.233s (88.1%)
    - Aggregation: 0.007s (2.8%)
  TOTALS:
    - Total computation: 0.265s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.265s

=== PER-NODE AVERAGE TIME ===
  - Distance computation: 0.008s
  - Loss computation: 0.135s
  - Aggregation: 0.005s
  - Model transfer: 0.000s
  - Total per node: 0.148s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total distance computation: 0.155s
  - Total loss computation: 2.697s
  - Total aggregation: 0.098s
  - Total model transfer: 0.000s
  - Grand total: 2.951s
  - Mean Stage 1 acceptance rate: 0.342
  - Mean Stage 2 acceptance rate: 0.743
  - Overall acceptance rate: 0.254

UBAR Algorithm Properties:
  - Model dimension: 2,219,692
  - Rho parameter: 0.4
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 40% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
