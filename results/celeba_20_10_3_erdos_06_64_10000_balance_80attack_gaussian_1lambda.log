Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Degree statistics: avg=12.60, min=8, max=16
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6357 ± 0.0611 | min=0.5249 max=0.7196
         : test loss mean=0.6810 ± 0.0041
         : individual accs = ['0.698246', '0.666667', '0.590062', '0.639896', '0.617284', '0.537991', '0.611354', '0.590062', '0.563380', '0.709220', '0.625000', '0.666667', '0.719618', '0.700862', '0.524911', '0.567686', '0.718371', '0.651636', '0.717373', '0.596845']
         : correct/total = [(796, 1140), (772, 1158), (665, 1127), (741, 1158), (700, 1134), (616, 1145), (700, 1145), (665, 1127), (640, 1136), (800, 1128), (715, 1144), (750, 1125), (829, 1152), (813, 1160), (590, 1124), (650, 1145), (829, 1154), (737, 1131), (830, 1157), (681, 1141)]
         : compromised: 0.6306, honest: 0.6560
Round 002: test acc mean=0.6660 ± 0.0364 | min=0.5587 max=0.7210
         : test loss mean=0.6545 ± 0.0146
         : individual accs = ['0.672807', '0.669257', '0.664596', '0.705527', '0.673721', '0.666376', '0.631441', '0.685892', '0.681338', '0.648050', '0.706294', '0.633778', '0.668403', '0.651724', '0.558719', '0.609607', '0.720971', '0.690539', '0.703544', '0.676599']
         : correct/total = [(767, 1140), (775, 1158), (749, 1127), (817, 1158), (764, 1134), (763, 1145), (723, 1145), (773, 1127), (774, 1136), (731, 1128), (808, 1144), (713, 1125), (770, 1152), (756, 1160), (628, 1124), (698, 1145), (832, 1154), (781, 1131), (814, 1157), (772, 1141)]
         : compromised: 0.6604, honest: 0.6883
Round 003: test acc mean=0.7476 ± 0.0229 | min=0.6897 max=0.7852
         : test loss mean=0.5581 ± 0.0260
         : individual accs = ['0.768421', '0.722798', '0.745342', '0.774611', '0.751323', '0.785153', '0.745852', '0.763975', '0.746479', '0.751773', '0.778846', '0.761778', '0.725694', '0.721552', '0.712633', '0.748472', '0.755633', '0.747126', '0.689715', '0.755478']
         : correct/total = [(876, 1140), (837, 1158), (840, 1127), (897, 1158), (852, 1134), (899, 1145), (854, 1145), (861, 1127), (848, 1136), (848, 1128), (891, 1144), (857, 1125), (836, 1152), (837, 1160), (801, 1124), (857, 1145), (872, 1154), (845, 1131), (798, 1157), (862, 1141)]
         : compromised: 0.7446, honest: 0.7598
Round 004: test acc mean=0.8220 ± 0.0180 | min=0.7796 max=0.8531
         : test loss mean=0.4078 ± 0.0214
         : individual accs = ['0.821053', '0.833333', '0.816327', '0.830743', '0.824515', '0.841048', '0.829694', '0.826974', '0.817782', '0.814716', '0.853147', '0.846222', '0.811632', '0.819828', '0.813167', '0.781659', '0.832756', '0.808134', '0.779602', '0.837862']
         : correct/total = [(936, 1140), (965, 1158), (920, 1127), (962, 1158), (935, 1134), (963, 1145), (950, 1145), (932, 1127), (929, 1136), (919, 1128), (976, 1144), (952, 1125), (935, 1152), (951, 1160), (914, 1124), (895, 1145), (961, 1154), (914, 1131), (902, 1157), (956, 1141)]
         : compromised: 0.8209, honest: 0.8263
Round 005: test acc mean=0.8536 ± 0.0234 | min=0.7857 max=0.8782
         : test loss mean=0.3372 ± 0.0316
         : individual accs = ['0.829825', '0.878238', '0.860692', '0.862694', '0.850970', '0.803493', '0.862009', '0.841171', '0.870599', '0.877660', '0.870629', '0.848889', '0.857639', '0.855172', '0.867438', '0.847162', '0.876950', '0.854111', '0.785653', '0.870289']
         : correct/total = [(946, 1140), (1017, 1158), (970, 1127), (999, 1158), (965, 1134), (920, 1145), (987, 1145), (948, 1127), (989, 1136), (990, 1128), (996, 1144), (955, 1125), (988, 1152), (992, 1160), (975, 1124), (970, 1145), (1012, 1154), (966, 1131), (909, 1157), (993, 1141)]
         : compromised: 0.8545, honest: 0.8497
Round 006: test acc mean=0.8780 ± 0.0105 | min=0.8487 max=0.8926
         : test loss mean=0.2897 ± 0.0152
         : individual accs = ['0.880702', '0.886874', '0.876664', '0.882556', '0.865079', '0.892576', '0.880349', '0.874002', '0.892606', '0.882092', '0.886364', '0.876444', '0.881944', '0.876724', '0.880783', '0.860262', '0.889081', '0.868258', '0.848747', '0.877301']
         : correct/total = [(1004, 1140), (1027, 1158), (988, 1127), (1022, 1158), (981, 1134), (1022, 1145), (1008, 1145), (985, 1127), (1014, 1136), (995, 1128), (1014, 1144), (986, 1125), (1016, 1152), (1017, 1160), (990, 1124), (985, 1145), (1026, 1154), (982, 1131), (982, 1157), (1001, 1141)]
         : compromised: 0.8782, honest: 0.8772
Round 007: test acc mean=0.8899 ± 0.0079 | min=0.8712 max=0.8986
         : test loss mean=0.2709 ± 0.0154
         : individual accs = ['0.897368', '0.898100', '0.887311', '0.889465', '0.880071', '0.894323', '0.896070', '0.896185', '0.893486', '0.898050', '0.888112', '0.893333', '0.888021', '0.893103', '0.891459', '0.871616', '0.898614', '0.882405', '0.871219', '0.888694']
         : correct/total = [(1023, 1140), (1040, 1158), (1000, 1127), (1030, 1158), (998, 1134), (1024, 1145), (1026, 1145), (1010, 1127), (1015, 1136), (1013, 1128), (1016, 1144), (1005, 1125), (1023, 1152), (1036, 1160), (1002, 1124), (998, 1145), (1037, 1154), (998, 1131), (1008, 1157), (1014, 1141)]
         : compromised: 0.8890, honest: 0.8931
Round 008: test acc mean=0.8932 ± 0.0079 | min=0.8712 max=0.9057
         : test loss mean=0.2614 ± 0.0144
         : individual accs = ['0.897368', '0.897237', '0.883762', '0.891192', '0.893298', '0.900437', '0.897817', '0.897959', '0.895246', '0.897163', '0.895979', '0.901333', '0.894097', '0.896552', '0.905694', '0.880349', '0.896014', '0.884173', '0.871219', '0.886941']
         : correct/total = [(1023, 1140), (1039, 1158), (996, 1127), (1032, 1158), (1013, 1134), (1031, 1145), (1028, 1145), (1012, 1127), (1017, 1136), (1012, 1128), (1025, 1144), (1014, 1125), (1030, 1152), (1040, 1160), (1018, 1124), (1008, 1145), (1034, 1154), (1000, 1131), (1008, 1157), (1012, 1141)]
         : compromised: 0.8924, honest: 0.8962
Round 009: test acc mean=0.8942 ± 0.0104 | min=0.8583 max=0.9074
         : test loss mean=0.2561 ± 0.0184
         : individual accs = ['0.903509', '0.898100', '0.887311', '0.898964', '0.893298', '0.907424', '0.897817', '0.899734', '0.896127', '0.896277', '0.897727', '0.905778', '0.893229', '0.895690', '0.899466', '0.885590', '0.897747', '0.880637', '0.858254', '0.891323']
         : correct/total = [(1030, 1140), (1040, 1158), (1000, 1127), (1041, 1158), (1013, 1134), (1039, 1145), (1028, 1145), (1014, 1127), (1018, 1136), (1011, 1128), (1027, 1144), (1019, 1125), (1029, 1152), (1039, 1160), (1011, 1124), (1014, 1145), (1036, 1154), (996, 1131), (993, 1157), (1017, 1141)]
         : compromised: 0.8931, honest: 0.8986
Round 010: test acc mean=0.8986 ± 0.0085 | min=0.8790 max=0.9111
         : test loss mean=0.2484 ± 0.0158
         : individual accs = ['0.909649', '0.900691', '0.891748', '0.897237', '0.891534', '0.906550', '0.898690', '0.899734', '0.902289', '0.902482', '0.902972', '0.911111', '0.906250', '0.902586', '0.905694', '0.886463', '0.901213', '0.883289', '0.878997', '0.892200']
         : correct/total = [(1037, 1140), (1043, 1158), (1005, 1127), (1039, 1158), (1011, 1134), (1038, 1145), (1029, 1145), (1014, 1127), (1025, 1136), (1018, 1128), (1033, 1144), (1025, 1125), (1044, 1152), (1047, 1160), (1018, 1124), (1015, 1145), (1040, 1154), (999, 1131), (1017, 1157), (1018, 1141)]
         : compromised: 0.8981, honest: 0.9005

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.8981, Honest: 0.9005
Overall test accuracy: mean=0.8986 ± 0.0085

=== BALANCE SUMMARY ===
Node 0: acceptance=0.188
Node 1: acceptance=0.364
Node 2: acceptance=0.250
Node 3: acceptance=0.125
Node 4: acceptance=0.273
Node 5: acceptance=0.133
Node 6: acceptance=0.143
Node 7: acceptance=0.143
Node 8: acceptance=0.200
Node 9: acceptance=0.308
Node 10: acceptance=0.222
Node 11: acceptance=0.214
Node 12: acceptance=0.250
Node 13: acceptance=0.231
Node 14: acceptance=0.200
Node 15: acceptance=0.182
Node 16: acceptance=0.154
Node 17: acceptance=0.333
Node 18: acceptance=0.250
Node 19: acceptance=0.188

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.046s (83.9%)
    - Aggregation: 0.009s (16.1%)
  TOTALS:
    - Total computation: 0.055s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.055s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.031s
  - Aggregation: 0.004s
  - Model transfer: 0.000s
  - Total per node: 0.035s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.627s
  - Total aggregation: 0.073s
  - Total model transfer: 0.000s
  - Grand total: 0.700s
  - Mean acceptance rate: 0.217

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
