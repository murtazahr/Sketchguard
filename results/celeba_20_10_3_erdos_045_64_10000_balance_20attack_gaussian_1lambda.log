Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8217 ± 0.0913
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7781 ± 0.0759
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 004: test acc mean=0.5019 ± 0.0208 | min=0.4706 max=0.5431
         : test loss mean=132.3014 ± 182.9528
         : individual accs = ['0.471053', '0.504318', '0.493345', '0.470639', '0.477954', '0.514410', '0.517031', '0.516415', '0.543134', '0.491135', '0.477273', '0.512000', '0.477431', '0.506897', '0.515125', '0.520524', '0.487868', '0.509284', '0.492653', '0.539877']
         : correct/total = [(537, 1140), (584, 1158), (556, 1127), (545, 1158), (542, 1134), (589, 1145), (592, 1145), (582, 1127), (617, 1136), (554, 1128), (546, 1144), (576, 1125), (550, 1152), (588, 1160), (579, 1124), (596, 1145), (563, 1154), (576, 1131), (570, 1157), (616, 1141)]
         : compromised: 0.5020, honest: 0.5019
Round 005: test acc mean=0.5033 ± 0.0203 | min=0.4649 max=0.5475
         : test loss mean=129.3570 ± 197.6083
         : individual accs = ['0.528070', '0.510363', '0.493345', '0.482729', '0.520282', '0.514410', '0.521397', '0.547471', '0.501761', '0.491135', '0.474650', '0.464889', '0.515625', '0.506897', '0.493772', '0.475109', '0.515598', '0.508400', '0.518583', '0.482033']
         : correct/total = [(602, 1140), (591, 1158), (556, 1127), (559, 1158), (590, 1134), (589, 1145), (597, 1145), (617, 1127), (570, 1136), (554, 1128), (543, 1144), (523, 1125), (594, 1152), (588, 1160), (555, 1124), (544, 1145), (595, 1154), (575, 1131), (600, 1157), (550, 1141)]
         : compromised: 0.5113, honest: 0.5013
Round 006: test acc mean=0.5000 ± 0.0223 | min=0.4481 max=0.5328
         : test loss mean=82.3460 ± 201.1042
         : individual accs = ['0.471930', '0.482729', '0.506655', '0.487910', '0.516755', '0.532751', '0.521397', '0.495120', '0.448063', '0.491135', '0.474650', '0.502222', '0.522569', '0.493103', '0.520463', '0.508297', '0.467938', '0.530504', '0.518583', '0.507450']
         : correct/total = [(538, 1140), (559, 1158), (571, 1127), (565, 1158), (586, 1134), (610, 1145), (597, 1145), (558, 1127), (509, 1136), (554, 1128), (543, 1144), (565, 1125), (602, 1152), (572, 1160), (585, 1124), (582, 1145), (540, 1154), (600, 1131), (600, 1157), (579, 1141)]
         : compromised: 0.5197, honest: 0.4951
Round 007: test acc mean=0.5001 ± 0.0222 | min=0.4711 max=0.5625
         : test loss mean=0.8264 ± 0.1523
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.522046', '0.514410', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.477431', '0.493103', '0.517794', '0.517031', '0.484402', '0.508400', '0.477960', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (592, 1134), (589, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (572, 1160), (582, 1124), (592, 1145), (559, 1154), (575, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4983, honest: 0.5005
Round 008: test acc mean=0.4986 ± 0.0281 | min=0.4711 max=0.5776
         : test loss mean=0.7035 ± 0.0218
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.477954', '0.514410', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.477431', '0.577586', '0.482206', '0.482969', '0.484402', '0.508400', '0.477960', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (542, 1134), (589, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (670, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.5195, honest: 0.4934
Round 009: test acc mean=0.5338 ± 0.0345 | min=0.4911 max=0.6300
         : test loss mean=0.6884 ± 0.0106
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.595855', '0.522046', '0.514410', '0.521397', '0.496007', '0.562500', '0.491135', '0.555944', '0.554667', '0.522569', '0.567241', '0.547153', '0.517031', '0.629983', '0.508400', '0.522040', '0.516214']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (690, 1158), (592, 1134), (589, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (636, 1144), (624, 1125), (602, 1152), (658, 1160), (615, 1124), (592, 1145), (727, 1154), (575, 1131), (604, 1157), (589, 1141)]
         : compromised: 0.5282, honest: 0.5352
Round 010: test acc mean=0.5602 ± 0.0563 | min=0.4856 max=0.6606
         : test loss mean=0.6745 ± 0.0297
         : individual accs = ['0.530702', '0.508636', '0.521739', '0.660622', '0.522928', '0.485590', '0.510917', '0.587400', '0.562500', '0.488475', '0.626748', '0.599111', '0.523438', '0.642241', '0.646797', '0.544978', '0.638648', '0.490716', '0.565255', '0.546889']
         : correct/total = [(605, 1140), (589, 1158), (588, 1127), (765, 1158), (593, 1134), (556, 1145), (585, 1145), (662, 1127), (639, 1136), (551, 1128), (717, 1144), (674, 1125), (603, 1152), (745, 1160), (727, 1124), (624, 1145), (737, 1154), (555, 1131), (654, 1157), (624, 1141)]
         : compromised: 0.5355, honest: 0.5664

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.5355, Honest: 0.5664
Overall test accuracy: mean=0.5602 ± 0.0563

=== BALANCE SUMMARY ===
Node 0: acceptance=0.817
Node 1: acceptance=0.840
Node 2: acceptance=0.863
Node 3: acceptance=0.900
Node 4: acceptance=0.856
Node 5: acceptance=0.800
Node 6: acceptance=0.800
Node 7: acceptance=0.827
Node 8: acceptance=0.743
Node 9: acceptance=0.773
Node 10: acceptance=0.838
Node 11: acceptance=0.808
Node 12: acceptance=0.783
Node 13: acceptance=0.767
Node 14: acceptance=0.786
Node 15: acceptance=0.844
Node 16: acceptance=0.829
Node 17: acceptance=0.825
Node 18: acceptance=0.850
Node 19: acceptance=0.740

Performance Summary:
  - Distance computation time: 1.552s (42.8%)
  - Filtering time: 1.687s (46.5%)
  - Aggregation time: 0.389s (10.7%)
  - Total time: 3.629s
  - Mean acceptance rate: 0.814

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
