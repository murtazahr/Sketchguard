Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 002: test acc mean=0.4971 ± 0.0176 | min=0.4655 max=0.5396
         : test loss mean=3.6290 ± 1.8203
         : individual accs = ['0.476316', '0.491364', '0.510204', '0.499136', '0.489418', '0.465502', '0.478603', '0.490683', '0.539613', '0.521277', '0.509615', '0.498667', '0.481771', '0.475000', '0.509786', '0.491703', '0.506932', '0.486295', '0.504754', '0.516214']
         : correct/total = [(543, 1140), (569, 1158), (575, 1127), (578, 1158), (555, 1134), (533, 1145), (548, 1145), (553, 1127), (613, 1136), (588, 1128), (583, 1144), (561, 1125), (555, 1152), (551, 1160), (573, 1124), (563, 1145), (585, 1154), (550, 1131), (584, 1157), (589, 1141)]
         : compromised: 0.4987, honest: 0.4908
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9968 ± 0.1390
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 004: test acc mean=0.5137 ± 0.0212 | min=0.4795 max=0.5616
         : test loss mean=11.4287 ± 7.0567
         : individual accs = ['0.520175', '0.500000', '0.533274', '0.560449', '0.502646', '0.516157', '0.479476', '0.511979', '0.561620', '0.490248', '0.518357', '0.512000', '0.523438', '0.506897', '0.483986', '0.489956', '0.498267', '0.516357', '0.522040', '0.525855']
         : correct/total = [(593, 1140), (579, 1158), (601, 1127), (649, 1158), (570, 1134), (591, 1145), (549, 1145), (577, 1127), (638, 1136), (553, 1128), (593, 1144), (576, 1125), (603, 1152), (588, 1160), (544, 1124), (561, 1145), (575, 1154), (584, 1131), (604, 1157), (600, 1141)]
         : compromised: 0.5150, honest: 0.5083
Round 005: test acc mean=0.5145 ± 0.0164 | min=0.4852 max=0.5625
         : test loss mean=0.7056 ± 0.0102
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.519651', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.485243', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (595, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (559, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5137, honest: 0.5176
Round 006: test acc mean=0.5340 ± 0.0168 | min=0.5000 max=0.5704
         : test loss mean=10.6551 ± 2.5713
         : individual accs = ['0.525439', '0.537997', '0.519077', '0.535406', '0.537037', '0.564192', '0.544978', '0.537711', '0.570423', '0.507979', '0.554196', '0.537778', '0.520833', '0.522414', '0.500000', '0.529258', '0.538995', '0.540230', '0.539326', '0.517090']
         : correct/total = [(599, 1140), (623, 1158), (585, 1127), (620, 1158), (609, 1134), (646, 1145), (624, 1145), (606, 1127), (648, 1136), (573, 1128), (634, 1144), (605, 1125), (600, 1152), (606, 1160), (562, 1124), (606, 1145), (622, 1154), (611, 1131), (624, 1157), (590, 1141)]
         : compromised: 0.5338, honest: 0.5348
Round 007: test acc mean=0.5163 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7114 ± 0.0114
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.507515', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (574, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 008: test acc mean=0.5415 ± 0.0178 | min=0.4991 max=0.5825
         : test loss mean=12.3554 ± 2.8782
         : individual accs = ['0.530702', '0.543178', '0.538598', '0.575993', '0.543210', '0.555459', '0.582533', '0.529725', '0.558099', '0.499113', '0.548951', '0.536889', '0.547743', '0.543966', '0.531139', '0.525764', '0.536395', '0.547303', '0.526361', '0.528484']
         : correct/total = [(605, 1140), (629, 1158), (607, 1127), (667, 1158), (616, 1134), (636, 1145), (667, 1145), (597, 1127), (634, 1136), (563, 1128), (628, 1144), (604, 1125), (631, 1152), (631, 1160), (597, 1124), (602, 1145), (619, 1154), (619, 1131), (609, 1157), (603, 1141)]
         : compromised: 0.5431, honest: 0.5350
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7231 ± 0.0133
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 010: test acc mean=0.5586 ± 0.0203 | min=0.5160 max=0.6102
         : test loss mean=10.7522 ± 2.4265
         : individual accs = ['0.536842', '0.553541', '0.565217', '0.585492', '0.554674', '0.564192', '0.572052', '0.547471', '0.591549', '0.515957', '0.555944', '0.561778', '0.610243', '0.560345', '0.563167', '0.544978', '0.543328', '0.558798', '0.535869', '0.551271']
         : correct/total = [(612, 1140), (641, 1158), (637, 1127), (678, 1158), (629, 1134), (646, 1145), (655, 1145), (617, 1127), (672, 1136), (582, 1128), (636, 1144), (632, 1125), (703, 1152), (650, 1160), (633, 1124), (624, 1145), (627, 1154), (632, 1131), (620, 1157), (629, 1141)]
         : compromised: 0.5619, honest: 0.5456

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: directed_deviation, 80.0% compromised
Final accuracy - Compromised: 0.5619, Honest: 0.5456
Overall test accuracy: mean=0.5586 ± 0.0203

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 2.963s (43.3%)
  - Filtering time: 3.121s (45.6%)
  - Aggregation time: 0.756s (11.1%)
  - Total time: 6.839s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
