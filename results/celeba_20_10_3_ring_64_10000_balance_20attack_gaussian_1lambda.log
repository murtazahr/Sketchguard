Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5165 ± 0.0151 | min=0.4911 max=0.5625
         : test loss mean=0.8745 ± 0.1182
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.523810', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (594, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5173
Round 002: test acc mean=0.7665 ± 0.1593 | min=0.4911 max=0.9138
         : test loss mean=0.4409 ± 0.2213
         : individual accs = ['0.530702', '0.683938', '0.691216', '0.822107', '0.894180', '0.514410', '0.906550', '0.894410', '0.563380', '0.491135', '0.694930', '0.883556', '0.899306', '0.913793', '0.909253', '0.905677', '0.913345', '0.508400', '0.887640', '0.821209']
         : correct/total = [(605, 1140), (792, 1158), (779, 1127), (952, 1158), (1014, 1134), (589, 1145), (1038, 1145), (1008, 1127), (640, 1136), (554, 1128), (795, 1144), (994, 1125), (1036, 1152), (1060, 1160), (1022, 1124), (1037, 1145), (1054, 1154), (575, 1131), (1027, 1157), (937, 1141)]
         : compromised: 0.7090, honest: 0.7808
Round 003: test acc mean=0.6712 ± 0.1631 | min=0.4987 max=0.9144
         : test loss mean=nan ± nan
         : individual accs = ['0.858772', '0.829879', '0.668146', '0.886874', '0.522046', '0.709170', '0.521397', '0.882875', '0.611796', '0.648936', '0.863636', '0.498667', '0.522569', '0.506897', '0.517794', '0.914410', '0.515598', '0.508400', '0.522040', '0.913234']
         : correct/total = [(979, 1140), (961, 1158), (753, 1127), (1027, 1158), (592, 1134), (812, 1145), (597, 1145), (995, 1127), (695, 1136), (732, 1128), (988, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (1047, 1145), (595, 1154), (575, 1131), (604, 1157), (1042, 1141)]
         : compromised: 0.5618, honest: 0.6985
Round 004: test acc mean=0.6418 ± 0.1556 | min=0.4795 max=0.8826
         : test loss mean=811.3408 ± 1253.7133
         : individual accs = ['0.763158', '0.822107', '0.856256', '0.882556', '0.519400', '0.514410', '0.531878', '0.841171', '0.740317', '0.741135', '0.854895', '0.486222', '0.521701', '0.517241', '0.479537', '0.482969', '0.490468', '0.505747', '0.503889', '0.780018']
         : correct/total = [(870, 1140), (952, 1158), (965, 1127), (1022, 1158), (589, 1134), (589, 1145), (609, 1145), (948, 1127), (841, 1136), (836, 1128), (978, 1144), (547, 1125), (601, 1152), (600, 1160), (539, 1124), (553, 1145), (566, 1154), (572, 1131), (583, 1157), (890, 1141)]
         : compromised: 0.5148, honest: 0.6735
Round 005: test acc mean=0.6688 ± 0.1835 | min=0.4830 max=0.9033
         : test loss mean=526.3472 ± 972.9935
         : individual accs = ['0.861404', '0.899827', '0.884650', '0.901554', '0.502646', '0.514410', '0.500437', '0.903283', '0.838908', '0.812943', '0.881993', '0.502222', '0.508681', '0.496552', '0.503559', '0.482969', '0.501733', '0.508400', '0.522040', '0.847502']
         : correct/total = [(982, 1140), (1042, 1158), (997, 1127), (1044, 1158), (570, 1134), (589, 1145), (573, 1145), (1018, 1127), (953, 1136), (917, 1128), (1009, 1144), (565, 1125), (586, 1152), (576, 1160), (566, 1124), (553, 1145), (579, 1154), (575, 1131), (604, 1157), (967, 1141)]
         : compromised: 0.5070, honest: 0.7092
Round 006: test acc mean=0.6818 ± 0.1981 | min=0.4822 max=0.9105
         : test loss mean=851.8108 ± 1353.1420
         : individual accs = ['0.910526', '0.892055', '0.900621', '0.896373', '0.521164', '0.514410', '0.522271', '0.904170', '0.903169', '0.899823', '0.891608', '0.499556', '0.508681', '0.487931', '0.482206', '0.482969', '0.482669', '0.508400', '0.522040', '0.904470']
         : correct/total = [(1038, 1140), (1033, 1158), (1015, 1127), (1038, 1158), (591, 1134), (589, 1145), (598, 1145), (1019, 1127), (1026, 1136), (1015, 1128), (1020, 1144), (562, 1125), (586, 1152), (566, 1160), (542, 1124), (553, 1145), (557, 1154), (575, 1131), (604, 1157), (1032, 1141)]
         : compromised: 0.5049, honest: 0.7260
Round 007: test acc mean=0.6861 ± 0.2002 | min=0.4786 max=0.9237
         : test loss mean=5554.8837 ± 24210.3817
         : individual accs = ['0.923684', '0.907599', '0.900621', '0.913644', '0.522928', '0.514410', '0.478603', '0.903283', '0.911092', '0.901596', '0.902098', '0.499556', '0.523438', '0.523276', '0.517794', '0.482969', '0.484402', '0.491600', '0.521175', '0.899211']
         : correct/total = [(1053, 1140), (1051, 1158), (1015, 1127), (1058, 1158), (593, 1134), (589, 1145), (548, 1145), (1018, 1127), (1035, 1136), (1017, 1128), (1032, 1144), (562, 1125), (603, 1152), (607, 1160), (582, 1124), (553, 1145), (559, 1154), (556, 1131), (603, 1157), (1026, 1141)]
         : compromised: 0.5132, honest: 0.7294
Round 008: test acc mean=0.6871 ± 0.1977 | min=0.4822 max=0.9158
         : test loss mean=0.5723 ± 0.3810
         : individual accs = ['0.915789', '0.905872', '0.897959', '0.908463', '0.522046', '0.514410', '0.521397', '0.906832', '0.898768', '0.904255', '0.907343', '0.521778', '0.522569', '0.506897', '0.482206', '0.482969', '0.498267', '0.491600', '0.530683', '0.901840']
         : correct/total = [(1044, 1140), (1049, 1158), (1012, 1127), (1052, 1158), (592, 1134), (589, 1145), (597, 1145), (1022, 1127), (1021, 1136), (1020, 1128), (1038, 1144), (587, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (575, 1154), (556, 1131), (614, 1157), (1029, 1141)]
         : compromised: 0.5089, honest: 0.7317
Round 009: test acc mean=0.6094 ± 0.1709 | min=0.4600 max=0.9167
         : test loss mean=0.5979 ± 0.2029
         : individual accs = ['0.916667', '0.904145', '0.906832', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.890845', '0.902482', '0.525350', '0.497778', '0.522569', '0.506897', '0.459964', '0.517904', '0.514731', '0.491600', '0.522040', '0.517967']
         : correct/total = [(1045, 1140), (1047, 1158), (1022, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (1012, 1136), (1018, 1128), (601, 1144), (560, 1125), (602, 1152), (588, 1160), (517, 1124), (593, 1145), (594, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5089, honest: 0.6345
Round 010: test acc mean=0.6140 ± 0.1333 | min=0.4905 max=0.8964
         : test loss mean=0.6128 ± 0.1285
         : individual accs = ['0.528947', '0.896373', '0.493345', '0.685665', '0.765432', '0.514410', '0.771179', '0.604259', '0.563380', '0.491135', '0.555070', '0.829333', '0.522569', '0.493103', '0.518683', '0.496943', '0.490468', '0.510168', '0.777010', '0.772130']
         : correct/total = [(603, 1140), (1038, 1158), (556, 1127), (794, 1158), (868, 1134), (589, 1145), (883, 1145), (681, 1127), (640, 1136), (554, 1128), (635, 1144), (933, 1125), (602, 1152), (572, 1160), (583, 1124), (569, 1145), (566, 1154), (577, 1131), (899, 1157), (881, 1141)]
         : compromised: 0.5101, honest: 0.6400

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.5101, Honest: 0.6400
Overall test accuracy: mean=0.6140 ± 0.1333

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=0.750
Node 4: acceptance=0.600
Node 5: acceptance=0.500
Node 6: acceptance=0.600
Node 7: acceptance=0.750
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=0.750
Node 11: acceptance=0.600
Node 12: acceptance=0.600
Node 13: acceptance=0.550
Node 14: acceptance=0.700
Node 15: acceptance=0.600
Node 16: acceptance=0.700
Node 17: acceptance=0.450
Node 18: acceptance=0.600
Node 19: acceptance=0.750

Performance Summary:
  - Distance computation time: 0.324s (32.0%)
  - Filtering time: 0.461s (45.5%)
  - Aggregation time: 0.228s (22.5%)
  - Total time: 1.014s
  - Mean acceptance rate: 0.725

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
