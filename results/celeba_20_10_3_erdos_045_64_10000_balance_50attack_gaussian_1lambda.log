Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8461 ± 0.0809
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7755 ± 0.0558
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 004: test acc mean=0.5039 ± 0.0239 | min=0.4732 max=0.5643
         : test loss mean=15897.7917 ± 42267.8881
         : individual accs = ['0.528947', '0.517271', '0.511979', '0.473230', '0.503527', '0.485590', '0.520524', '0.474712', '0.564261', '0.491135', '0.525350', '0.476444', '0.475694', '0.511207', '0.517794', '0.492576', '0.496534', '0.495137', '0.477960', '0.538124']
         : correct/total = [(603, 1140), (599, 1158), (577, 1127), (548, 1158), (571, 1134), (556, 1145), (596, 1145), (535, 1127), (641, 1136), (554, 1128), (601, 1144), (536, 1125), (548, 1152), (593, 1160), (582, 1124), (564, 1145), (573, 1154), (560, 1131), (553, 1157), (614, 1141)]
         : compromised: 0.4962, honest: 0.5116
Round 005: test acc mean=0.5097 ± 0.0190 | min=0.4709 max=0.5449
         : test loss mean=371.8276 ± 523.0078
         : individual accs = ['0.471053', '0.511226', '0.506655', '0.528497', '0.470899', '0.534498', '0.519651', '0.498669', '0.544894', '0.503546', '0.511364', '0.504889', '0.522569', '0.493966', '0.517794', '0.482969', '0.515598', '0.508400', '0.531547', '0.515337']
         : correct/total = [(537, 1140), (592, 1158), (571, 1127), (612, 1158), (534, 1134), (612, 1145), (595, 1145), (562, 1127), (619, 1136), (568, 1128), (585, 1144), (568, 1125), (602, 1152), (573, 1160), (582, 1124), (553, 1145), (595, 1154), (575, 1131), (615, 1157), (588, 1141)]
         : compromised: 0.5115, honest: 0.5080
Round 006: test acc mean=0.5056 ± 0.0243 | min=0.4534 max=0.5625
         : test loss mean=540.5650 ± 953.1290
         : individual accs = ['0.471053', '0.502591', '0.506655', '0.528497', '0.522046', '0.475983', '0.521397', '0.453416', '0.562500', '0.491135', '0.522727', '0.501333', '0.480903', '0.505172', '0.500000', '0.515284', '0.484402', '0.520778', '0.530683', '0.516214']
         : correct/total = [(537, 1140), (582, 1158), (571, 1127), (612, 1158), (592, 1134), (545, 1145), (597, 1145), (511, 1127), (639, 1136), (554, 1128), (598, 1144), (564, 1125), (554, 1152), (586, 1160), (562, 1124), (590, 1145), (559, 1154), (589, 1131), (614, 1157), (589, 1141)]
         : compromised: 0.5039, honest: 0.5073
Round 007: test acc mean=0.5000 ± 0.0222 | min=0.4375 max=0.5253
         : test loss mean=0.8981 ± 0.2654
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.522046', '0.485590', '0.478603', '0.503993', '0.437500', '0.508865', '0.525350', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.484402', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (592, 1134), (556, 1145), (548, 1145), (568, 1127), (497, 1136), (574, 1128), (601, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5080, honest: 0.4921
Round 008: test acc mean=0.5028 ± 0.0220 | min=0.4375 max=0.5289
         : test loss mean=0.7217 ± 0.0485
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.528497', '0.522046', '0.485590', '0.521397', '0.503993', '0.437500', '0.508865', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.482969', '0.484402', '0.491600', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (612, 1158), (592, 1134), (556, 1145), (597, 1145), (568, 1127), (497, 1136), (574, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (553, 1145), (559, 1154), (556, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5013, honest: 0.5043
Round 009: test acc mean=0.5094 ± 0.0201 | min=0.4711 max=0.5625
         : test loss mean=0.6946 ± 0.0084
         : individual accs = ['0.471053', '0.491364', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.508865', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.482969', '0.484402', '0.491600', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (574, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (553, 1145), (559, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5042, honest: 0.5146
Round 010: test acc mean=0.5158 ± 0.0153 | min=0.4911 max=0.5625
         : test loss mean=0.6927 ± 0.0009
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.503466', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (581, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5205

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.5110, Honest: 0.5205
Overall test accuracy: mean=0.5158 ± 0.0153

=== BALANCE SUMMARY ===
Node 0: acceptance=0.608
Node 1: acceptance=0.620
Node 2: acceptance=0.662
Node 3: acceptance=0.729
Node 4: acceptance=0.578
Node 5: acceptance=0.620
Node 6: acceptance=0.608
Node 7: acceptance=0.591
Node 8: acceptance=0.571
Node 9: acceptance=0.673
Node 10: acceptance=0.713
Node 11: acceptance=0.583
Node 12: acceptance=0.625
Node 13: acceptance=0.656
Node 14: acceptance=0.564
Node 15: acceptance=0.622
Node 16: acceptance=0.571
Node 17: acceptance=0.725
Node 18: acceptance=0.625
Node 19: acceptance=0.610

Performance Summary:
  - Distance computation time: 1.545s (43.2%)
  - Filtering time: 1.681s (47.0%)
  - Aggregation time: 0.349s (9.8%)
  - Total time: 3.574s
  - Mean acceptance rate: 0.628

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
