Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Degree statistics: avg=19.00, min=19, max=19
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
COARSE Node 0:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 2,219,692 parameters
  - Config: COARSEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1, sketch_size=1000, network_seed=987654321, attack_detection_window=5)
  - Sketch size: 1000
  - Compression ratio: 2219.7x
  - Complexity: O(d + N×k) = O(2,219,692 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.8x
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6935 ± 0.0315 | min=0.5979 max=0.7269
         : test loss mean=0.6809 ± 0.0034
         : individual accs = ['0.714035', '0.678756', '0.667258', '0.703800', '0.597884', '0.715284', '0.702183', '0.639752', '0.713028', '0.715426', '0.695804', '0.721778', '0.709201', '0.710345', '0.668149', '0.701310', '0.719237', '0.707339', '0.726880', '0.662577']
         : correct/total = [(814, 1140), (786, 1158), (752, 1127), (815, 1158), (678, 1134), (819, 1145), (804, 1145), (721, 1127), (810, 1136), (807, 1128), (796, 1144), (812, 1125), (817, 1152), (824, 1160), (751, 1124), (803, 1145), (830, 1154), (800, 1131), (841, 1157), (756, 1141)]
         : compromised: 0.7105, honest: 0.6892
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 002: test acc mean=0.6469 ± 0.0518 | min=0.5220 max=0.7127
         : test loss mean=0.6792 ± 0.0048
         : individual accs = ['0.645614', '0.656304', '0.681455', '0.645078', '0.522046', '0.533624', '0.658515', '0.661934', '0.629401', '0.640071', '0.698427', '0.658667', '0.712674', '0.658621', '0.556050', '0.675109', '0.703640', '0.625995', '0.690579', '0.683611']
         : correct/total = [(736, 1140), (760, 1158), (768, 1127), (747, 1158), (592, 1134), (611, 1145), (754, 1145), (746, 1127), (715, 1136), (722, 1128), (799, 1144), (741, 1125), (821, 1152), (764, 1160), (625, 1124), (773, 1145), (812, 1154), (708, 1131), (799, 1157), (780, 1141)]
         : compromised: 0.6327, honest: 0.6504
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 003: test acc mean=0.6296 ± 0.0506 | min=0.5196 max=0.6932
         : test loss mean=0.6698 ± 0.0077
         : individual accs = ['0.603509', '0.658031', '0.670807', '0.651986', '0.522046', '0.543231', '0.606987', '0.625555', '0.675176', '0.671099', '0.630245', '0.652444', '0.644965', '0.673276', '0.519573', '0.626201', '0.693241', '0.587091', '0.683665', '0.653812']
         : correct/total = [(688, 1140), (762, 1158), (756, 1127), (755, 1158), (592, 1134), (622, 1145), (695, 1145), (705, 1127), (767, 1136), (757, 1128), (721, 1144), (734, 1125), (743, 1152), (781, 1160), (584, 1124), (717, 1145), (800, 1154), (664, 1131), (791, 1157), (746, 1141)]
         : compromised: 0.6121, honest: 0.6340
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 004: test acc mean=0.6823 ± 0.0246 | min=0.6423 max=0.7244
         : test loss mean=0.6325 ± 0.0107
         : individual accs = ['0.681579', '0.682211', '0.695652', '0.696028', '0.642857', '0.661135', '0.675109', '0.652174', '0.701585', '0.697695', '0.705420', '0.724444', '0.697049', '0.709483', '0.642349', '0.646288', '0.718371', '0.672856', '0.686258', '0.657318']
         : correct/total = [(777, 1140), (790, 1158), (784, 1127), (806, 1158), (729, 1134), (757, 1145), (773, 1145), (735, 1127), (797, 1136), (787, 1128), (807, 1144), (815, 1125), (803, 1152), (823, 1160), (722, 1124), (740, 1145), (829, 1154), (761, 1131), (794, 1157), (750, 1141)]
         : compromised: 0.6851, honest: 0.6816
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 005: test acc mean=0.7424 ± 0.0171 | min=0.7063 max=0.7668
         : test loss mean=0.5524 ± 0.0154
         : individual accs = ['0.719298', '0.753886', '0.706300', '0.746114', '0.720459', '0.766812', '0.748472', '0.731145', '0.737676', '0.756206', '0.756119', '0.760000', '0.729167', '0.750862', '0.735765', '0.752838', '0.764298', '0.748011', '0.712187', '0.752848']
         : correct/total = [(820, 1140), (873, 1158), (796, 1127), (864, 1158), (817, 1134), (878, 1145), (857, 1145), (824, 1127), (838, 1136), (853, 1128), (865, 1144), (855, 1125), (840, 1152), (871, 1160), (827, 1124), (862, 1145), (882, 1154), (846, 1131), (824, 1157), (859, 1141)]
         : compromised: 0.7487, honest: 0.7409
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 006: test acc mean=0.7822 ± 0.0160 | min=0.7586 max=0.8164
         : test loss mean=0.4726 ± 0.0148
         : individual accs = ['0.767544', '0.801382', '0.795918', '0.781520', '0.783069', '0.791266', '0.765066', '0.769299', '0.782570', '0.805851', '0.816434', '0.806222', '0.785590', '0.768103', '0.773132', '0.773799', '0.764298', '0.758621', '0.767502', '0.786152']
         : correct/total = [(875, 1140), (928, 1158), (897, 1127), (905, 1158), (888, 1134), (906, 1145), (876, 1145), (867, 1127), (889, 1136), (909, 1128), (934, 1144), (907, 1125), (905, 1152), (891, 1160), (869, 1124), (886, 1145), (882, 1154), (858, 1131), (888, 1157), (897, 1141)]
         : compromised: 0.7759, honest: 0.7837
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 007: test acc mean=0.8239 ± 0.0147 | min=0.7917 max=0.8454
         : test loss mean=0.3988 ± 0.0167
         : individual accs = ['0.820175', '0.845423', '0.827862', '0.819516', '0.809524', '0.840175', '0.831441', '0.814552', '0.836268', '0.842199', '0.843531', '0.845333', '0.809896', '0.824138', '0.813167', '0.807860', '0.812825', '0.812555', '0.791703', '0.829097']
         : correct/total = [(935, 1140), (979, 1158), (933, 1127), (949, 1158), (918, 1134), (962, 1145), (952, 1145), (918, 1127), (950, 1136), (950, 1128), (965, 1144), (951, 1125), (933, 1152), (956, 1160), (914, 1124), (925, 1145), (938, 1154), (919, 1131), (916, 1157), (946, 1141)]
         : compromised: 0.8217, honest: 0.8244
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 008: test acc mean=0.8538 ± 0.0111 | min=0.8271 max=0.8716
         : test loss mean=0.3427 ± 0.0141
         : individual accs = ['0.844737', '0.866149', '0.856256', '0.848877', '0.843034', '0.871616', '0.852402', '0.853594', '0.852113', '0.860816', '0.861888', '0.871111', '0.847222', '0.868103', '0.858541', '0.842795', '0.858752', '0.839080', '0.827139', '0.851008']
         : correct/total = [(963, 1140), (1003, 1158), (965, 1127), (983, 1158), (956, 1134), (998, 1145), (976, 1145), (962, 1127), (968, 1136), (971, 1128), (986, 1144), (980, 1125), (976, 1152), (1007, 1160), (965, 1124), (965, 1145), (991, 1154), (949, 1131), (957, 1157), (971, 1141)]
         : compromised: 0.8565, honest: 0.8531
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 009: test acc mean=0.8684 ± 0.0136 | min=0.8410 max=0.8871
         : test loss mean=0.3106 ± 0.0226
         : individual accs = ['0.870175', '0.886010', '0.850932', '0.875648', '0.854497', '0.879476', '0.877729', '0.877551', '0.870599', '0.880319', '0.883741', '0.887111', '0.861979', '0.868966', '0.864769', '0.845415', '0.867418', '0.848806', '0.840968', '0.876424']
         : correct/total = [(992, 1140), (1026, 1158), (959, 1127), (1014, 1158), (969, 1134), (1007, 1145), (1005, 1145), (989, 1127), (989, 1136), (993, 1128), (1011, 1144), (998, 1125), (993, 1152), (1008, 1160), (972, 1124), (968, 1145), (1001, 1154), (960, 1131), (973, 1157), (1000, 1141)]
         : compromised: 0.8648, honest: 0.8693
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 010: test acc mean=0.8835 ± 0.0092 | min=0.8600 max=0.8989
         : test loss mean=0.2850 ± 0.0159
         : individual accs = ['0.880702', '0.889465', '0.874889', '0.892919', '0.875661', '0.892576', '0.884716', '0.881988', '0.883803', '0.898936', '0.888986', '0.888000', '0.881076', '0.893103', '0.890569', '0.867249', '0.884749', '0.874447', '0.859983', '0.886065']
         : correct/total = [(1004, 1140), (1030, 1158), (986, 1127), (1034, 1158), (993, 1134), (1022, 1145), (1013, 1145), (994, 1127), (1004, 1136), (1014, 1128), (1017, 1144), (999, 1125), (1015, 1152), (1036, 1160), (1001, 1124), (993, 1145), (1021, 1154), (989, 1131), (995, 1157), (1011, 1141)]
         : compromised: 0.8853, honest: 0.8830
         : sketchguard stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: sketchguard
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.8853, Honest: 0.8830
Overall test accuracy: mean=0.8835 ± 0.0092

=== COARSE SUMMARY ===
Node 0: acceptance=0.789
Node 1: acceptance=0.789
Node 2: acceptance=0.789
Node 3: acceptance=0.789
Node 4: acceptance=0.789
Node 5: acceptance=0.842
Node 6: acceptance=0.789
Node 7: acceptance=0.789
Node 8: acceptance=0.789
Node 9: acceptance=0.789
Node 10: acceptance=0.789
Node 11: acceptance=0.789
Node 12: acceptance=0.842
Node 13: acceptance=0.842
Node 14: acceptance=0.789
Node 15: acceptance=0.789
Node 16: acceptance=0.789
Node 17: acceptance=0.842
Node 18: acceptance=0.789
Node 19: acceptance=0.789

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Sketch transfer: 0.000s (0.0%)
    - Model fetch (accepted): 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Sketching: 0.262s (89.8%)
    - Filtering: 0.001s (0.5%)
    - Aggregation: 0.028s (9.7%)
  TOTALS:
    - Total computation: 0.292s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.292s

=== PER-NODE AVERAGE TIME ===
  - Sketching: 0.181s
  - Filtering: 0.001s
  - Aggregation: 0.018s
  - Sketch transfer: 0.000s
  - Model fetch: 0.000s
  - Total per node: 0.200s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total sketching: 3.625s
  - Total filtering: 0.018s
  - Total aggregation: 0.357s
  - Total sketch transfer: 0.000s
  - Total model fetch: 0.000s
  - Grand total: 3.999s
  - Mean acceptance rate: 0.800

COARSE Algorithm Properties:
  - Original dimension: 2,219,692
  - Sketch size: 1000
  - Compression ratio: 19.8x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
