Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.5011 ± 0.0337 | min=0.4467 max=0.5550
         : test loss mean=3.7453 ± 0.0238
         : individual accs = ['0.554990', '0.502022', '0.524871', '0.513501', '0.468590', '0.550968', '0.489864', '0.500345', '0.532093', '0.463877', '0.465605', '0.540186', '0.466895', '0.467239', '0.507897', '0.526433', '0.452203', '0.544346', '0.502449', '0.446705']
         : correct/total = [(2291, 4128), (2110, 4203), (2142, 4081), (2225, 4333), (1917, 4091), (2362, 4287), (2054, 4193), (2176, 4349), (2230, 4191), (1984, 4277), (1929, 4143), (2265, 4193), (1911, 4093), (1961, 4197), (2058, 4052), (2121, 4029), (1878, 4153), (2277, 4183), (2052, 4084), (1844, 4128)]
         : compromised: 0.5103, honest: 0.4949
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 002: test acc mean=0.6742 ± 0.0194 | min=0.6289 max=0.7007
         : test loss mean=3.4233 ± 0.0620
         : individual accs = ['0.679021', '0.675946', '0.673119', '0.692361', '0.682229', '0.691859', '0.628905', '0.691423', '0.652112', '0.700725', '0.657977', '0.678273', '0.683118', '0.665237', '0.699901', '0.689005', '0.638334', '0.649773', '0.680950', '0.674661']
         : correct/total = [(2803, 4128), (2841, 4203), (2747, 4081), (3000, 4333), (2791, 4091), (2966, 4287), (2637, 4193), (3007, 4349), (2733, 4191), (2997, 4277), (2726, 4143), (2844, 4193), (2796, 4093), (2792, 4197), (2836, 4052), (2776, 4029), (2651, 4153), (2718, 4183), (2781, 4084), (2785, 4128)]
         : compromised: 0.6781, honest: 0.6717
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 003: test acc mean=0.6856 ± 0.0238 | min=0.6310 max=0.7362
         : test loss mean=3.0930 ± 0.1401
         : individual accs = ['0.711725', '0.662622', '0.678510', '0.736210', '0.675141', '0.630977', '0.706415', '0.713957', '0.702696', '0.668693', '0.666908', '0.675173', '0.697288', '0.676197', '0.708292', '0.689005', '0.686732', '0.651446', '0.676543', '0.696948']
         : correct/total = [(2938, 4128), (2785, 4203), (2769, 4081), (3190, 4333), (2762, 4091), (2705, 4287), (2962, 4193), (3105, 4349), (2945, 4191), (2860, 4277), (2763, 4143), (2831, 4193), (2854, 4093), (2838, 4197), (2870, 4052), (2776, 4029), (2852, 4153), (2725, 4183), (2763, 4084), (2877, 4128)]
         : compromised: 0.6723, honest: 0.6944
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 004: test acc mean=0.6544 ± 0.0413 | min=0.5661 max=0.7101
         : test loss mean=2.4588 ± 0.2069
         : individual accs = ['0.671027', '0.604330', '0.643225', '0.700208', '0.710095', '0.597387', '0.700453', '0.707289', '0.693629', '0.663315', '0.611875', '0.617696', '0.566088', '0.667620', '0.667572', '0.695210', '0.672285', '0.601004', '0.643732', '0.654797']
         : correct/total = [(2770, 4128), (2540, 4203), (2625, 4081), (3034, 4333), (2905, 4091), (2561, 4287), (2937, 4193), (3076, 4349), (2907, 4191), (2837, 4277), (2535, 4143), (2590, 4193), (2317, 4093), (2802, 4197), (2705, 4052), (2801, 4029), (2792, 4153), (2514, 4183), (2629, 4084), (2703, 4128)]
         : compromised: 0.6207, honest: 0.6770
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 005: test acc mean=0.6665 ± 0.0391 | min=0.5770 max=0.7248
         : test loss mean=1.6667 ± 0.1797
         : individual accs = ['0.674661', '0.576969', '0.656947', '0.693976', '0.674407', '0.665967', '0.685428', '0.724764', '0.696015', '0.701894', '0.660632', '0.632244', '0.637674', '0.643555', '0.639931', '0.671631', '0.721888', '0.579249', '0.692703', '0.698886']
         : correct/total = [(2785, 4128), (2425, 4203), (2681, 4081), (3007, 4333), (2759, 4091), (2855, 4287), (2874, 4193), (3152, 4349), (2917, 4191), (3002, 4277), (2737, 4143), (2651, 4193), (2610, 4093), (2701, 4197), (2593, 4052), (2706, 4029), (2998, 4153), (2423, 4183), (2829, 4084), (2885, 4128)]
         : compromised: 0.6335, honest: 0.6884
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 006: test acc mean=0.7741 ± 0.0121 | min=0.7395 max=0.7944
         : test loss mean=0.8841 ± 0.0621
         : individual accs = ['0.756541', '0.739472', '0.779711', '0.787676', '0.767783', '0.769303', '0.775817', '0.794436', '0.784777', '0.785130', '0.776008', '0.762938', '0.766675', '0.777937', '0.777394', '0.776868', '0.788827', '0.765957', '0.775220', '0.773498']
         : correct/total = [(3123, 4128), (3108, 4203), (3182, 4081), (3413, 4333), (3141, 4091), (3298, 4287), (3253, 4193), (3455, 4349), (3289, 4191), (3358, 4277), (3215, 4143), (3199, 4193), (3138, 4093), (3265, 4197), (3150, 4052), (3130, 4029), (3276, 4153), (3204, 4183), (3166, 4084), (3193, 4128)]
         : compromised: 0.7669, honest: 0.7789
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 007: test acc mean=0.8169 ± 0.0064 | min=0.8064 max=0.8296
         : test loss mean=0.6001 ± 0.0228
         : individual accs = ['0.806444', '0.825125', '0.813281', '0.822986', '0.807382', '0.815022', '0.820653', '0.823868', '0.829635', '0.820903', '0.808834', '0.814453', '0.809919', '0.820110', '0.818608', '0.819558', '0.822056', '0.812814', '0.818805', '0.808140']
         : correct/total = [(3329, 4128), (3468, 4203), (3319, 4081), (3566, 4333), (3303, 4091), (3494, 4287), (3441, 4193), (3583, 4349), (3477, 4191), (3511, 4277), (3351, 4143), (3415, 4193), (3315, 4093), (3442, 4197), (3317, 4052), (3302, 4029), (3414, 4153), (3400, 4183), (3344, 4084), (3336, 4128)]
         : compromised: 0.8169, honest: 0.8170
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 008: test acc mean=0.8279 ± 0.0065 | min=0.8108 max=0.8386
         : test loss mean=0.5307 ± 0.0188
         : individual accs = ['0.819767', '0.827266', '0.827738', '0.837064', '0.822048', '0.835783', '0.829716', '0.835364', '0.830112', '0.829787', '0.820661', '0.829001', '0.823846', '0.830117', '0.838598', '0.830727', '0.822056', '0.829548', '0.828844', '0.810804']
         : correct/total = [(3384, 4128), (3477, 4203), (3378, 4081), (3627, 4333), (3363, 4091), (3583, 4287), (3479, 4193), (3633, 4349), (3479, 4191), (3549, 4277), (3400, 4143), (3476, 4193), (3372, 4093), (3484, 4197), (3398, 4052), (3347, 4029), (3414, 4153), (3470, 4183), (3385, 4084), (3347, 4128)]
         : compromised: 0.8304, honest: 0.8263
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 009: test acc mean=0.8391 ± 0.0053 | min=0.8304 max=0.8513
         : test loss mean=0.4918 ± 0.0182
         : individual accs = ['0.830426', '0.843445', '0.835089', '0.840988', '0.831337', '0.839981', '0.843787', '0.841803', '0.851348', '0.847557', '0.834661', '0.833771', '0.835573', '0.838933', '0.843534', '0.843385', '0.834577', '0.837915', '0.837414', '0.835998']
         : correct/total = [(3428, 4128), (3545, 4203), (3408, 4081), (3644, 4333), (3401, 4091), (3601, 4287), (3538, 4193), (3661, 4349), (3568, 4191), (3625, 4277), (3458, 4143), (3496, 4193), (3420, 4093), (3521, 4197), (3418, 4052), (3398, 4029), (3466, 4153), (3505, 4183), (3420, 4084), (3451, 4128)]
         : compromised: 0.8388, honest: 0.8392
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...
Round 010: test acc mean=0.8450 ± 0.0056 | min=0.8325 max=0.8533
         : test loss mean=0.4714 ± 0.0192
         : individual accs = ['0.837936', '0.852724', '0.839010', '0.847450', '0.838915', '0.842547', '0.849273', '0.848931', '0.851110', '0.847089', '0.832489', '0.841164', '0.841681', '0.845604', '0.847483', '0.853313', '0.845172', '0.851781', '0.847453', '0.838905']
         : correct/total = [(3459, 4128), (3584, 4203), (3424, 4081), (3672, 4333), (3432, 4091), (3612, 4287), (3561, 4193), (3692, 4349), (3567, 4191), (3623, 4277), (3449, 4143), (3527, 4193), (3445, 4093), (3549, 4197), (3434, 4052), (3438, 4029), (3510, 4153), (3563, 4183), (3461, 4084), (3463, 4128)]
         : compromised: 0.8463, honest: 0.8441
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.632', 'Node 2: acc_rate=0.579']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: coarse
Attack: directed_deviation, 40.0% compromised
Final accuracy - Compromised: 0.8463, Honest: 0.8441
Overall test accuracy: mean=0.8450 ± 0.0056

=== COARSE SUMMARY ===
Node 0: acceptance=0.579
Node 1: acceptance=0.632
Node 2: acceptance=0.579
Node 3: acceptance=0.579
Node 4: acceptance=0.579
Node 5: acceptance=0.632
Node 6: acceptance=0.579
Node 7: acceptance=0.579
Node 8: acceptance=0.579
Node 9: acceptance=0.579
Node 10: acceptance=0.579
Node 11: acceptance=0.632
Node 12: acceptance=0.632
Node 13: acceptance=0.632
Node 14: acceptance=0.632
Node 15: acceptance=0.579
Node 16: acceptance=0.579
Node 17: acceptance=0.632
Node 18: acceptance=0.632
Node 19: acceptance=0.579

Performance Summary:
  - Sketching time: 15.234s (97.0%)
  - Filtering time: 0.029s (0.2%)
  - Aggregation time: 0.443s (2.8%)
  - Total time: 15.706s
  - Mean acceptance rate: 0.600

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
