Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5059 ± 0.0145 | min=0.4764 max=0.5431
         : test loss mean=nan ± nan
         : individual accs = ['0.506140', '0.508636', '0.493345', '0.511226', '0.514991', '0.510044', '0.492576', '0.519077', '0.543134', '0.493794', '0.476399', '0.477333', '0.506076', '0.503448', '0.517794', '0.510044', '0.515598', '0.505747', '0.512532', '0.500438']
         : correct/total = [(577, 1140), (589, 1158), (556, 1127), (592, 1158), (584, 1134), (584, 1145), (564, 1145), (585, 1127), (617, 1136), (557, 1128), (545, 1144), (537, 1125), (583, 1152), (584, 1160), (582, 1124), (584, 1145), (595, 1154), (572, 1131), (593, 1157), (571, 1141)]
         : compromised: 0.5039, honest: 0.5140
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.4963 ± 0.0168 | min=0.4710 max=0.5258
         : test loss mean=75.1550 ± 38.3498
         : individual accs = ['0.520175', '0.494819', '0.482697', '0.476684', '0.502646', '0.508297', '0.493450', '0.505768', '0.470951', '0.489362', '0.520979', '0.499556', '0.517361', '0.476724', '0.473310', '0.525764', '0.499133', '0.497790', '0.471046', '0.499562']
         : correct/total = [(593, 1140), (573, 1158), (544, 1127), (552, 1158), (570, 1134), (582, 1145), (565, 1145), (570, 1127), (535, 1136), (552, 1128), (596, 1144), (562, 1125), (596, 1152), (553, 1160), (532, 1124), (602, 1145), (576, 1154), (563, 1131), (545, 1157), (570, 1141)]
         : compromised: 0.4936, honest: 0.5069
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8713 ± 0.1237
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.5341 ± 0.0229 | min=0.4996 max=0.5904
         : test loss mean=25.3386 ± 9.8391
         : individual accs = ['0.590351', '0.514680', '0.499556', '0.546632', '0.561728', '0.542358', '0.520524', '0.512866', '0.562500', '0.555851', '0.525350', '0.524444', '0.562500', '0.508621', '0.517794', '0.517031', '0.518198', '0.528736', '0.522040', '0.550394']
         : correct/total = [(673, 1140), (596, 1158), (563, 1127), (633, 1158), (637, 1134), (621, 1145), (596, 1145), (578, 1127), (639, 1136), (627, 1128), (601, 1144), (590, 1125), (648, 1152), (590, 1160), (582, 1124), (592, 1145), (598, 1154), (598, 1131), (604, 1157), (628, 1141)]
         : compromised: 0.5312, honest: 0.5458
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1036 ± 0.0918
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.6129 ± 0.0362 | min=0.5303 max=0.6687
         : test loss mean=12.8060 ± 5.3292
         : individual accs = ['0.622807', '0.613126', '0.599823', '0.573402', '0.656085', '0.617467', '0.574672', '0.589175', '0.598592', '0.660461', '0.653846', '0.647111', '0.605903', '0.575862', '0.585409', '0.600873', '0.530329', '0.666667', '0.617113', '0.668712']
         : correct/total = [(710, 1140), (710, 1158), (676, 1127), (664, 1158), (744, 1134), (707, 1145), (658, 1145), (664, 1127), (680, 1136), (745, 1128), (748, 1144), (728, 1125), (698, 1152), (668, 1160), (658, 1124), (688, 1145), (612, 1154), (754, 1131), (714, 1157), (763, 1141)]
         : compromised: 0.6162, honest: 0.5996
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1168 ± 0.0749
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.6522 ± 0.0305 | min=0.5867 max=0.6967
         : test loss mean=9.8153 ± 3.2967
         : individual accs = ['0.642982', '0.677893', '0.669033', '0.602763', '0.677249', '0.692576', '0.653275', '0.636202', '0.642606', '0.692376', '0.675699', '0.692444', '0.625868', '0.633621', '0.622776', '0.632314', '0.586655', '0.696729', '0.649092', '0.642419']
         : correct/total = [(733, 1140), (785, 1158), (754, 1127), (698, 1158), (768, 1134), (793, 1145), (748, 1145), (717, 1127), (730, 1136), (781, 1128), (773, 1144), (779, 1125), (721, 1152), (735, 1160), (700, 1124), (724, 1145), (677, 1154), (788, 1131), (751, 1157), (733, 1141)]
         : compromised: 0.6563, honest: 0.6358
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1207 ± 0.0831
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.6492 ± 0.0264 | min=0.5927 max=0.6933
         : test loss mean=9.2941 ± 2.7203
         : individual accs = ['0.625439', '0.659758', '0.652174', '0.611399', '0.671076', '0.680349', '0.655895', '0.613132', '0.628521', '0.693262', '0.689685', '0.633778', '0.650174', '0.636207', '0.629893', '0.668122', '0.592721', '0.666667', '0.664650', '0.660824']
         : correct/total = [(713, 1140), (764, 1158), (735, 1127), (708, 1158), (761, 1134), (779, 1145), (751, 1145), (691, 1127), (714, 1136), (782, 1128), (789, 1144), (713, 1125), (749, 1152), (738, 1160), (708, 1124), (765, 1145), (684, 1154), (754, 1131), (769, 1157), (754, 1141)]
         : compromised: 0.6551, honest: 0.6256
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: directed_deviation, 80.0% compromised
Final accuracy - Compromised: 0.6551, Honest: 0.6256
Overall test accuracy: mean=0.6492 ± 0.0264

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 0.055s (5.6%)
  - Filtering time: 0.009s (1.0%)
  - Aggregation time: 0.908s (93.4%)
  - Total time: 0.972s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
