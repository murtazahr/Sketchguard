Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5165 ± 0.0151 | min=0.4911 max=0.5625
         : test loss mean=0.8542 ± 0.1068
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.523810', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (594, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5171
Round 002: test acc mean=0.6928 ± 0.1548 | min=0.4911 max=0.9097
         : test loss mean=0.5293 ± 0.2074
         : individual accs = ['0.530702', '0.683938', '0.691216', '0.822107', '0.894180', '0.514410', '0.906550', '0.894410', '0.563380', '0.491135', '0.527972', '0.756444', '0.909722', '0.506897', '0.909253', '0.841048', '0.603986', '0.609195', '0.655143', '0.544259']
         : correct/total = [(605, 1140), (792, 1158), (779, 1127), (952, 1158), (1014, 1134), (589, 1145), (1038, 1145), (1008, 1127), (640, 1136), (554, 1128), (604, 1144), (851, 1125), (1048, 1152), (588, 1160), (1022, 1124), (963, 1145), (697, 1154), (689, 1131), (758, 1157), (621, 1141)]
         : compromised: 0.5107, honest: 0.7130
Round 003: test acc mean=0.7055 ± 0.1391 | min=0.5078 max=0.8900
         : test loss mean=nan ± nan
         : individual accs = ['0.848246', '0.829879', '0.668146', '0.886874', '0.522046', '0.709170', '0.521397', '0.882875', '0.611796', '0.645390', '0.664336', '0.888889', '0.522569', '0.507759', '0.517794', '0.889956', '0.781629', '0.638373', '0.736387', '0.836109']
         : correct/total = [(967, 1140), (961, 1158), (753, 1127), (1027, 1158), (592, 1134), (812, 1145), (597, 1145), (995, 1127), (695, 1136), (728, 1128), (760, 1144), (1000, 1125), (602, 1152), (589, 1160), (582, 1124), (1019, 1145), (902, 1154), (722, 1131), (852, 1157), (954, 1141)]
         : compromised: 0.6085, honest: 0.7163
Round 004: test acc mean=0.7129 ± 0.1458 | min=0.4762 max=0.8898
         : test loss mean=387.6752 ± 886.4891
         : individual accs = ['0.800877', '0.833333', '0.856256', '0.882556', '0.476190', '0.485590', '0.524017', '0.841171', '0.737676', '0.684397', '0.838287', '0.889778', '0.517361', '0.506897', '0.517794', '0.809607', '0.810225', '0.755084', '0.700951', '0.790535']
         : correct/total = [(913, 1140), (965, 1158), (965, 1127), (1022, 1158), (540, 1134), (556, 1145), (600, 1145), (948, 1127), (838, 1136), (772, 1128), (959, 1144), (1001, 1125), (596, 1152), (588, 1160), (582, 1124), (927, 1145), (935, 1154), (854, 1131), (811, 1157), (902, 1141)]
         : compromised: 0.4962, honest: 0.7370
Round 005: test acc mean=0.7501 ± 0.1664 | min=0.4776 max=0.9033
         : test loss mean=756.1885 ± 1773.2867
         : individual accs = ['0.821053', '0.888601', '0.884650', '0.901554', '0.522046', '0.485590', '0.520524', '0.903283', '0.854754', '0.743794', '0.860140', '0.887111', '0.532986', '0.477586', '0.482206', '0.891703', '0.886482', '0.856764', '0.814175', '0.787029']
         : correct/total = [(936, 1140), (1029, 1158), (997, 1127), (1044, 1158), (592, 1134), (556, 1145), (596, 1145), (1018, 1127), (971, 1136), (839, 1128), (984, 1144), (998, 1125), (614, 1152), (554, 1160), (542, 1124), (1021, 1145), (1023, 1154), (969, 1131), (942, 1157), (898, 1141)]
         : compromised: 0.4816, honest: 0.7799
Round 006: test acc mean=0.7761 ± 0.1778 | min=0.4822 max=0.9104
         : test loss mean=394.3084 ± 1059.5291
         : individual accs = ['0.895614', '0.898100', '0.898846', '0.897237', '0.517637', '0.515284', '0.517904', '0.910382', '0.895246', '0.856383', '0.900350', '0.909333', '0.493924', '0.506897', '0.482206', '0.901310', '0.902946', '0.878868', '0.847018', '0.895706']
         : correct/total = [(1021, 1140), (1040, 1158), (1013, 1127), (1039, 1158), (587, 1134), (590, 1145), (593, 1145), (1026, 1127), (1017, 1136), (966, 1128), (1030, 1144), (1023, 1125), (569, 1152), (588, 1160), (542, 1124), (1032, 1145), (1042, 1154), (994, 1131), (980, 1157), (1022, 1141)]
         : compromised: 0.5111, honest: 0.8055
Round 007: test acc mean=0.7846 ± 0.1724 | min=0.5069 max=0.9147
         : test loss mean=16211.3674 ± 70661.3908
         : individual accs = ['0.909649', '0.904145', '0.901508', '0.898964', '0.522046', '0.514410', '0.541485', '0.913043', '0.900528', '0.863475', '0.898601', '0.914667', '0.529514', '0.506897', '0.517794', '0.892576', '0.913345', '0.880637', '0.872947', '0.894829']
         : correct/total = [(1037, 1140), (1047, 1158), (1016, 1127), (1041, 1158), (592, 1134), (589, 1145), (620, 1145), (1029, 1127), (1023, 1136), (974, 1128), (1028, 1144), (1029, 1125), (610, 1152), (588, 1160), (582, 1124), (1022, 1145), (1054, 1154), (996, 1131), (1010, 1157), (1021, 1141)]
         : compromised: 0.5107, honest: 0.8150
Round 008: test acc mean=0.7812 ± 0.1772 | min=0.4786 max=0.9147
         : test loss mean=0.4341 ± 0.2870
         : individual accs = ['0.907018', '0.900691', '0.906832', '0.913644', '0.522046', '0.514410', '0.478603', '0.905945', '0.892606', '0.866135', '0.906469', '0.914667', '0.522569', '0.513793', '0.517794', '0.899563', '0.906412', '0.890363', '0.874676', '0.870289']
         : correct/total = [(1034, 1140), (1043, 1158), (1022, 1127), (1058, 1158), (592, 1134), (589, 1145), (548, 1145), (1021, 1127), (1014, 1136), (977, 1128), (1037, 1144), (1029, 1125), (602, 1152), (596, 1160), (582, 1124), (1030, 1145), (1046, 1154), (1007, 1131), (1012, 1157), (993, 1141)]
         : compromised: 0.5141, honest: 0.8109
Round 009: test acc mean=0.7217 ± 0.1942 | min=0.4774 max=0.9138
         : test loss mean=0.4640 ± 0.2374
         : individual accs = ['0.908772', '0.905009', '0.905058', '0.528497', '0.522046', '0.511790', '0.478603', '0.496007', '0.890845', '0.887411', '0.902972', '0.913778', '0.477431', '0.514655', '0.522242', '0.517031', '0.897747', '0.883289', '0.877269', '0.893953']
         : correct/total = [(1036, 1140), (1048, 1158), (1020, 1127), (612, 1158), (592, 1134), (586, 1145), (548, 1145), (559, 1127), (1012, 1136), (1001, 1128), (1033, 1144), (1028, 1125), (550, 1152), (597, 1160), (587, 1124), (592, 1145), (1036, 1154), (999, 1131), (1015, 1157), (1020, 1141)]
         : compromised: 0.5132, honest: 0.7449
Round 010: test acc mean=0.7039 ± 0.1686 | min=0.4933 max=0.9102
         : test loss mean=0.5028 ± 0.2059
         : individual accs = ['0.909649', '0.905009', '0.493345', '0.575130', '0.782187', '0.514410', '0.671616', '0.661047', '0.564261', '0.882979', '0.890734', '0.910222', '0.507812', '0.506897', '0.581851', '0.547598', '0.517331', '0.886826', '0.870354', '0.899211']
         : correct/total = [(1037, 1140), (1048, 1158), (556, 1127), (666, 1158), (887, 1134), (589, 1145), (769, 1145), (745, 1127), (641, 1136), (996, 1128), (1019, 1144), (1024, 1125), (585, 1152), (588, 1160), (654, 1124), (627, 1145), (597, 1154), (1003, 1131), (1007, 1157), (1026, 1141)]
         : compromised: 0.5107, honest: 0.7254

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 10.0% compromised
Final accuracy - Compromised: 0.5107, Honest: 0.7254
Overall test accuracy: mean=0.7039 ± 0.1686

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=0.750
Node 4: acceptance=0.600
Node 5: acceptance=0.500
Node 6: acceptance=0.600
Node 7: acceptance=0.750
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=0.650
Node 12: acceptance=0.500
Node 13: acceptance=0.350
Node 14: acceptance=0.600
Node 15: acceptance=0.750
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.319s (31.9%)
  - Filtering time: 0.454s (45.3%)
  - Aggregation time: 0.229s (22.8%)
  - Total time: 1.001s
  - Mean acceptance rate: 0.802

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
