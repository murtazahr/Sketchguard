Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4202 ± 0.0392 | min=0.3441 max=0.4815
         : test loss mean=3.6967 ± 0.0964
         : individual accs = ['0.436047', '0.403045', '0.442049', '0.380799', '0.456612', '0.431537', '0.451944', '0.466084', '0.402529', '0.382745', '0.427951', '0.481517', '0.415099', '0.344055', '0.429418', '0.449739', '0.447628', '0.451351', '0.344515', '0.358527']
         : correct/total = [(1800, 4128), (1694, 4203), (1804, 4081), (1650, 4333), (1868, 4091), (1850, 4287), (1895, 4193), (2027, 4349), (1687, 4191), (1637, 4277), (1773, 4143), (2019, 4193), (1699, 4093), (1444, 4197), (1740, 4052), (1812, 4029), (1859, 4153), (1888, 4183), (1407, 4084), (1480, 4128)]
         : compromised: 0.4105, honest: 0.4226
Round 002: test acc mean=0.7090 ± 0.0345 | min=0.5802 max=0.7338
         : test loss mean=1.6878 ± 0.7224
         : individual accs = ['0.702519', '0.704973', '0.689782', '0.731595', '0.731606', '0.671798', '0.733604', '0.721085', '0.714388', '0.697218', '0.698769', '0.733842', '0.730760', '0.721468', '0.733712', '0.732936', '0.727908', '0.580206', '0.727963', '0.694767']
         : correct/total = [(2900, 4128), (2963, 4203), (2815, 4081), (3170, 4333), (2993, 4091), (2880, 4287), (3076, 4193), (3136, 4349), (2994, 4191), (2982, 4277), (2895, 4143), (3077, 4193), (2991, 4093), (3028, 4197), (2973, 4052), (2953, 4029), (3023, 4153), (2427, 4183), (2973, 4084), (2868, 4128)]
         : compromised: 0.6761, honest: 0.7173
Round 003: test acc mean=0.7644 ± 0.0435 | min=0.6139 max=0.7935
         : test loss mean=1.0944 ± 0.5667
         : individual accs = ['0.773740', '0.760171', '0.757412', '0.790445', '0.777560', '0.667133', '0.791319', '0.788917', '0.780482', '0.766191', '0.757181', '0.788934', '0.777914', '0.783893', '0.781589', '0.793497', '0.784012', '0.613913', '0.781832', '0.772045']
         : correct/total = [(3194, 4128), (3195, 4203), (3091, 4081), (3425, 4333), (3181, 4091), (2860, 4287), (3318, 4193), (3431, 4349), (3271, 4191), (3277, 4277), (3137, 4143), (3308, 4193), (3184, 4093), (3290, 4197), (3167, 4052), (3197, 4029), (3256, 4153), (2568, 4183), (3193, 4084), (3187, 4128)]
         : compromised: 0.7107, honest: 0.7778
Round 004: test acc mean=0.7996 ± 0.0184 | min=0.7368 max=0.8191
         : test loss mean=0.8326 ± 0.3987
         : individual accs = ['0.781250', '0.799667', '0.794168', '0.807524', '0.797116', '0.773968', '0.811829', '0.807772', '0.808160', '0.806173', '0.787594', '0.799189', '0.809919', '0.813915', '0.818361', '0.819062', '0.808331', '0.736792', '0.809990', '0.802083']
         : correct/total = [(3225, 4128), (3361, 4203), (3241, 4081), (3499, 4333), (3261, 4091), (3318, 4287), (3404, 4193), (3513, 4349), (3387, 4191), (3448, 4277), (3263, 4143), (3351, 4193), (3315, 4093), (3416, 4197), (3316, 4052), (3300, 4029), (3357, 4153), (3082, 4183), (3308, 4084), (3311, 4128)]
         : compromised: 0.7836, honest: 0.8036
Round 005: test acc mean=0.8130 ± 0.0115 | min=0.7817 max=0.8315
         : test loss mean=0.7107 ± 0.2948
         : individual accs = ['0.803779', '0.808470', '0.800294', '0.823448', '0.810315', '0.792862', '0.825900', '0.815130', '0.822954', '0.819967', '0.808834', '0.810160', '0.814073', '0.822254', '0.819842', '0.831472', '0.814833', '0.781736', '0.820519', '0.813953']
         : correct/total = [(3318, 4128), (3398, 4203), (3266, 4081), (3568, 4333), (3315, 4091), (3399, 4287), (3463, 4193), (3545, 4349), (3449, 4191), (3507, 4277), (3351, 4143), (3397, 4193), (3332, 4093), (3451, 4197), (3322, 4052), (3350, 4029), (3384, 4153), (3270, 4183), (3351, 4084), (3360, 4128)]
         : compromised: 0.8027, honest: 0.8156
Round 006: test acc mean=0.8241 ± 0.0110 | min=0.7961 max=0.8409
         : test loss mean=0.6449 ± 0.2526
         : individual accs = ['0.811773', '0.818701', '0.817202', '0.830833', '0.815937', '0.811756', '0.830909', '0.835364', '0.829158', '0.823007', '0.813662', '0.823992', '0.823113', '0.839647', '0.838845', '0.840903', '0.833855', '0.796079', '0.824437', '0.822674']
         : correct/total = [(3351, 4128), (3441, 4203), (3335, 4081), (3600, 4333), (3338, 4091), (3480, 4287), (3484, 4193), (3633, 4349), (3475, 4191), (3520, 4277), (3371, 4143), (3455, 4193), (3369, 4093), (3524, 4197), (3399, 4052), (3388, 4029), (3463, 4153), (3330, 4183), (3367, 4084), (3396, 4128)]
         : compromised: 0.8176, honest: 0.8257
Round 007: test acc mean=0.8312 ± 0.0100 | min=0.7997 max=0.8451
         : test loss mean=0.6040 ± 0.2387
         : individual accs = ['0.820979', '0.833928', '0.826268', '0.832449', '0.824737', '0.821554', '0.830909', '0.838584', '0.840134', '0.833762', '0.825730', '0.833771', '0.833130', '0.845127', '0.840819', '0.844130', '0.838189', '0.799665', '0.834966', '0.824855']
         : correct/total = [(3389, 4128), (3505, 4203), (3372, 4081), (3607, 4333), (3374, 4091), (3522, 4287), (3484, 4193), (3647, 4349), (3521, 4191), (3566, 4277), (3421, 4143), (3496, 4193), (3410, 4093), (3547, 4197), (3407, 4052), (3401, 4029), (3481, 4153), (3345, 4183), (3410, 4084), (3405, 4128)]
         : compromised: 0.8249, honest: 0.8328
Round 008: test acc mean=0.8331 ± 0.0083 | min=0.8190 max=0.8508
         : test loss mean=0.5211 ± 0.0508
         : individual accs = ['0.819041', '0.832501', '0.832884', '0.843065', '0.833781', '0.824819', '0.837586', '0.834905', '0.828919', '0.829553', '0.832489', '0.838063', '0.832885', '0.845842', '0.845015', '0.850831', '0.824223', '0.821420', '0.832027', '0.822432']
         : correct/total = [(3381, 4128), (3499, 4203), (3399, 4081), (3653, 4333), (3411, 4091), (3536, 4287), (3512, 4193), (3631, 4349), (3474, 4191), (3548, 4277), (3449, 4143), (3514, 4193), (3409, 4093), (3550, 4197), (3424, 4052), (3428, 4029), (3423, 4153), (3436, 4183), (3398, 4084), (3395, 4128)]
         : compromised: 0.8312, honest: 0.8336
Round 009: test acc mean=0.8408 ± 0.0066 | min=0.8268 max=0.8516
         : test loss mean=0.4887 ± 0.0276
         : individual accs = ['0.826793', '0.840352', '0.834109', '0.841680', '0.830359', '0.834616', '0.847365', '0.849851', '0.851587', '0.841478', '0.839006', '0.837348', '0.841925', '0.850846', '0.841807', '0.849839', '0.840838', '0.840306', '0.841577', '0.833818']
         : correct/total = [(3413, 4128), (3532, 4203), (3404, 4081), (3647, 4333), (3397, 4091), (3578, 4287), (3553, 4193), (3696, 4349), (3569, 4191), (3599, 4277), (3476, 4143), (3511, 4193), (3446, 4093), (3571, 4197), (3411, 4052), (3424, 4029), (3492, 4153), (3515, 4183), (3437, 4084), (3442, 4128)]
         : compromised: 0.8419, honest: 0.8405
Round 010: test acc mean=0.8451 ± 0.0071 | min=0.8343 max=0.8580
         : test loss mean=0.4746 ± 0.0238
         : individual accs = ['0.835998', '0.846776', '0.837785', '0.848835', '0.834270', '0.844647', '0.855950', '0.855369', '0.849916', '0.843114', '0.835144', '0.836155', '0.844368', '0.852275', '0.851678', '0.858029', '0.845654', '0.845804', '0.841087', '0.838905']
         : correct/total = [(3451, 4128), (3559, 4203), (3419, 4081), (3678, 4333), (3413, 4091), (3621, 4287), (3589, 4193), (3720, 4349), (3562, 4191), (3606, 4277), (3460, 4143), (3506, 4193), (3456, 4093), (3577, 4197), (3451, 4052), (3457, 4029), (3512, 4153), (3538, 4183), (3435, 4084), (3463, 4128)]
         : compromised: 0.8468, honest: 0.8447

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.8468, Honest: 0.8447
Overall test accuracy: mean=0.8451 ± 0.0071

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=0.500
Node 5: acceptance=0.850
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=0.500
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=1.000
Node 16: acceptance=0.500
Node 17: acceptance=0.800
Node 18: acceptance=0.500
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.282s (30.7%)
  - Filtering time: 0.423s (46.0%)
  - Aggregation time: 0.214s (23.3%)
  - Total time: 0.919s
  - Mean acceptance rate: 0.782

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
