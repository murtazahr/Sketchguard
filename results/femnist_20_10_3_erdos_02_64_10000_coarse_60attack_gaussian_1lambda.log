Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3987 ± 0.1112 | min=0.0081 max=0.5328
         : test loss mean=43493190.0845 ± 189582404.2034
         : individual accs = ['0.468750', '0.390435', '0.457731', '0.411032', '0.494011', '0.352694', '0.410923', '0.386526', '0.413982', '0.428805', '0.315955', '0.452182', '0.390667', '0.008101', '0.532823', '0.453959', '0.442572', '0.507530', '0.230901', '0.424176']
         : correct/total = [(1935, 4128), (1641, 4203), (1868, 4081), (1781, 4333), (2021, 4091), (1512, 4287), (1723, 4193), (1681, 4349), (1735, 4191), (1834, 4277), (1309, 4143), (1896, 4193), (1599, 4093), (34, 4197), (2159, 4052), (1829, 4029), (1838, 4153), (2123, 4183), (943, 4084), (1751, 4128)]
         : compromised: 0.3835, honest: 0.4215
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.400']...
Round 002: test acc mean=0.6612 ± 0.1435 | min=0.0477 max=0.7403
         : test loss mean=nan ± nan
         : individual accs = ['0.722384', '0.660719', '0.634403', '0.659589', '0.700073', '0.704455', '0.740281', '0.703610', '0.697447', '0.721534', '0.698286', '0.676127', '0.693379', '0.047653', '0.695953', '0.650782', '0.717313', '0.660770', '0.735309', '0.704215']
         : correct/total = [(2982, 4128), (2777, 4203), (2589, 4081), (2858, 4333), (2864, 4091), (3020, 4287), (3104, 4193), (3060, 4349), (2923, 4191), (3086, 4277), (2893, 4143), (2835, 4193), (2838, 4093), (200, 4197), (2820, 4052), (2622, 4029), (2979, 4153), (2764, 4183), (3003, 4084), (2907, 4128)]
         : compromised: 0.6264, honest: 0.7135
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.400']...
Round 003: test acc mean=0.7161 ± 0.1599 | min=0.0477 max=0.7934
         : test loss mean=nan ± nan
         : individual accs = ['0.793362', '0.715917', '0.704239', '0.744288', '0.779272', '0.774901', '0.785118', '0.788457', '0.782152', '0.774141', '0.757181', '0.619366', '0.754703', '0.047653', '0.790227', '0.680318', '0.779437', '0.689457', '0.774731', '0.787548']
         : correct/total = [(3275, 4128), (3009, 4203), (2874, 4081), (3225, 4333), (3188, 4091), (3322, 4287), (3292, 4193), (3429, 4349), (3278, 4191), (3311, 4277), (3137, 4143), (2597, 4193), (3089, 4093), (200, 4197), (3202, 4052), (2741, 4029), (3237, 4153), (2884, 4183), (3164, 4084), (3251, 4128)]
         : compromised: 0.6732, honest: 0.7806
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.400']...
Round 004: test acc mean=0.7562 ± 0.1642 | min=0.0477 max=0.8170
         : test loss mean=nan ± nan
         : individual accs = ['0.804264', '0.766833', '0.761088', '0.809370', '0.801760', '0.804059', '0.815645', '0.816050', '0.816989', '0.808043', '0.789283', '0.728595', '0.798925', '0.047653', '0.811945', '0.775379', '0.804479', '0.754961', '0.803869', '0.804990']
         : correct/total = [(3320, 4128), (3223, 4203), (3106, 4081), (3507, 4333), (3280, 4091), (3447, 4287), (3420, 4193), (3549, 4349), (3424, 4191), (3456, 4277), (3270, 4143), (3055, 4193), (3270, 4093), (200, 4197), (3290, 4052), (3124, 4029), (3341, 4153), (3158, 4183), (3283, 4084), (3323, 4128)]
         : compromised: 0.7233, honest: 0.8056
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.500', 'Node 2: acc_rate=0.400']...
Round 005: test acc mean=0.7719 ± 0.1671 | min=0.0477 max=0.8289
         : test loss mean=nan ± nan
         : individual accs = ['0.819283', '0.812039', '0.766969', '0.818832', '0.813982', '0.815489', '0.820892', '0.816969', '0.828919', '0.823942', '0.804972', '0.759838', '0.821647', '0.047653', '0.825518', '0.787540', '0.819408', '0.795601', '0.822723', '0.814922']
         : correct/total = [(3382, 4128), (3413, 4203), (3130, 4081), (3548, 4333), (3330, 4091), (3496, 4287), (3442, 4193), (3553, 4349), (3474, 4191), (3524, 4277), (3335, 4143), (3186, 4193), (3363, 4093), (200, 4197), (3345, 4052), (3173, 4029), (3403, 4153), (3328, 4183), (3360, 4084), (3364, 4128)]
         : compromised: 0.7419, honest: 0.8168
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.467', 'Node 2: acc_rate=0.400']...
Round 006: test acc mean=0.7841 ± 0.1693 | min=0.0477 max=0.8366
         : test loss mean=nan ± nan
         : individual accs = ['0.826793', '0.829170', '0.798334', '0.834526', '0.817893', '0.824353', '0.825662', '0.835364', '0.836555', '0.832827', '0.814386', '0.795612', '0.826777', '0.047653', '0.832675', '0.809382', '0.826391', '0.825006', '0.822233', '0.820252']
         : correct/total = [(3413, 4128), (3485, 4203), (3258, 4081), (3616, 4333), (3346, 4091), (3534, 4287), (3462, 4193), (3633, 4349), (3506, 4191), (3562, 4277), (3374, 4143), (3336, 4193), (3384, 4093), (200, 4197), (3374, 4052), (3261, 4029), (3432, 4153), (3451, 4183), (3358, 4084), (3386, 4128)]
         : compromised: 0.7569, honest: 0.8249
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.444', 'Node 2: acc_rate=0.400']...
Round 007: test acc mean=0.7942 ± 0.1715 | min=0.0477 max=0.8475
         : test loss mean=nan ± nan
         : individual accs = ['0.836483', '0.847490', '0.823083', '0.844911', '0.827915', '0.830651', '0.839494', '0.843872', '0.839418', '0.841945', '0.819937', '0.812783', '0.835084', '0.047653', '0.836377', '0.817324', '0.844691', '0.836242', '0.835945', '0.821705']
         : correct/total = [(3453, 4128), (3562, 4203), (3359, 4081), (3661, 4333), (3387, 4091), (3561, 4287), (3520, 4193), (3670, 4349), (3518, 4191), (3601, 4277), (3397, 4143), (3408, 4193), (3418, 4093), (200, 4197), (3389, 4052), (3293, 4029), (3508, 4153), (3498, 4183), (3414, 4084), (3392, 4128)]
         : compromised: 0.7672, honest: 0.8345
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.429', 'Node 2: acc_rate=0.371']...
Round 008: test acc mean=0.7984 ± 0.1724 | min=0.0477 max=0.8509
         : test loss mean=nan ± nan
         : individual accs = ['0.833818', '0.841542', '0.831414', '0.850912', '0.833293', '0.843247', '0.845695', '0.847551', '0.845860', '0.844517', '0.827178', '0.834009', '0.839971', '0.047653', '0.841560', '0.818317', '0.838189', '0.837915', '0.842801', '0.823159']
         : correct/total = [(3442, 4128), (3537, 4203), (3393, 4081), (3687, 4333), (3409, 4091), (3615, 4287), (3546, 4193), (3686, 4349), (3545, 4191), (3612, 4277), (3427, 4143), (3497, 4193), (3438, 4093), (200, 4197), (3410, 4052), (3297, 4029), (3481, 4153), (3505, 4183), (3442, 4084), (3398, 4128)]
         : compromised: 0.7729, honest: 0.8367
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.417', 'Node 2: acc_rate=0.350']...
Round 009: test acc mean=0.8036 ± 0.1736 | min=0.0477 max=0.8561
         : test loss mean=nan ± nan
         : individual accs = ['0.837209', '0.855579', '0.839745', '0.854143', '0.834270', '0.841148', '0.849273', '0.852150', '0.856120', '0.851999', '0.839488', '0.832578', '0.845346', '0.047653', '0.837611', '0.839166', '0.841801', '0.841740', '0.835945', '0.838663']
         : correct/total = [(3456, 4128), (3596, 4203), (3427, 4081), (3701, 4333), (3413, 4091), (3606, 4287), (3561, 4193), (3706, 4349), (3588, 4191), (3644, 4277), (3478, 4143), (3491, 4193), (3460, 4093), (200, 4197), (3394, 4052), (3381, 4029), (3496, 4153), (3521, 4183), (3414, 4084), (3462, 4128)]
         : compromised: 0.7772, honest: 0.8431
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.407', 'Node 2: acc_rate=0.333']...
Round 010: test acc mean=0.8069 ± 0.1743 | min=0.0477 max=0.8563
         : test loss mean=nan ± nan
         : individual accs = ['0.846899', '0.856293', '0.851997', '0.853912', '0.836715', '0.835316', '0.854042', '0.851230', '0.853257', '0.855506', '0.835868', '0.839494', '0.846812', '0.047653', '0.849704', '0.849590', '0.842283', '0.847478', '0.844760', '0.839147']
         : correct/total = [(3496, 4128), (3599, 4203), (3477, 4081), (3700, 4333), (3423, 4091), (3581, 4287), (3581, 4193), (3702, 4349), (3576, 4191), (3659, 4277), (3463, 4143), (3520, 4193), (3466, 4093), (200, 4197), (3443, 4052), (3423, 4029), (3498, 4153), (3545, 4183), (3450, 4084), (3464, 4128)]
         : compromised: 0.7814, honest: 0.8452
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.320']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.7814, Honest: 0.8452
Overall test accuracy: mean=0.8069 ± 0.1743

=== COARSE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.400
Node 2: acceptance=0.320
Node 3: acceptance=0.500
Node 4: acceptance=0.250
Node 5: acceptance=0.200
Node 6: acceptance=0.200
Node 7: acceptance=0.400
Node 8: acceptance=0.500
Node 9: acceptance=0.333
Node 10: acceptance=0.500
Node 11: acceptance=0.229
Node 12: acceptance=0.471
Node 13: acceptance=0.000
Node 14: acceptance=0.143
Node 15: acceptance=0.267
Node 16: acceptance=0.200
Node 17: acceptance=0.480
Node 18: acceptance=0.250
Node 19: acceptance=0.500

Performance Summary:
  - Sketching time: 20.209s (98.7%)
  - Filtering time: 0.018s (0.1%)
  - Aggregation time: 0.242s (1.2%)
  - Total time: 20.469s
  - Mean acceptance rate: 0.332

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
