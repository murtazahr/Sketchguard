Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8426 ± 0.0782
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7646 ± 0.0612
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.504880', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (569, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 004: test acc mean=0.5059 ± 0.0207 | min=0.4786 max=0.5634
         : test loss mean=34.3541 ± 45.8844
         : individual accs = ['0.489474', '0.492228', '0.506655', '0.528497', '0.522928', '0.514410', '0.478603', '0.496007', '0.563380', '0.489362', '0.523601', '0.501333', '0.480903', '0.506897', '0.483986', '0.517031', '0.484402', '0.491600', '0.522040', '0.524978']
         : correct/total = [(558, 1140), (570, 1158), (571, 1127), (612, 1158), (593, 1134), (589, 1145), (548, 1145), (559, 1127), (640, 1136), (552, 1128), (599, 1144), (564, 1125), (554, 1152), (588, 1160), (544, 1124), (592, 1145), (559, 1154), (556, 1131), (604, 1157), (599, 1141)]
         : compromised: 0.5107, honest: 0.5054
Round 005: test acc mean=0.5040 ± 0.0172 | min=0.4797 max=0.5431
         : test loss mean=13.0568 ± 10.7955
         : individual accs = ['0.513158', '0.500864', '0.493345', '0.490501', '0.479718', '0.486463', '0.497817', '0.496007', '0.483275', '0.484043', '0.503497', '0.543111', '0.513021', '0.505172', '0.517794', '0.483843', '0.515598', '0.533156', '0.522040', '0.517967']
         : correct/total = [(585, 1140), (580, 1158), (556, 1127), (568, 1158), (544, 1134), (557, 1145), (570, 1145), (559, 1127), (549, 1136), (546, 1128), (576, 1144), (611, 1125), (591, 1152), (586, 1160), (582, 1124), (554, 1145), (595, 1154), (603, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.4958, honest: 0.5049
Round 006: test acc mean=0.4909 ± 0.0191 | min=0.4393 max=0.5289
         : test loss mean=1.9599 ± 5.4136
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.476684', '0.522046', '0.485590', '0.478603', '0.503993', '0.439261', '0.508865', '0.485140', '0.501333', '0.477431', '0.506897', '0.482206', '0.482969', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (552, 1158), (592, 1134), (556, 1145), (548, 1145), (568, 1127), (499, 1136), (574, 1128), (555, 1144), (564, 1125), (550, 1152), (588, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4962, honest: 0.4903
Round 007: test acc mean=0.5033 ± 0.0367 | min=0.4366 max=0.6323
         : test loss mean=0.6983 ± 0.0065
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.471503', '0.477954', '0.485590', '0.478603', '0.503993', '0.436620', '0.508865', '0.525350', '0.498667', '0.522569', '0.506897', '0.482206', '0.632314', '0.515598', '0.491600', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (546, 1158), (542, 1134), (556, 1145), (548, 1145), (568, 1127), (496, 1136), (574, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (724, 1145), (595, 1154), (556, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4962, honest: 0.5040
Round 008: test acc mean=0.5583 ± 0.0589 | min=0.4987 max=0.7047
         : test loss mean=0.6886 ± 0.0136
         : individual accs = ['0.528947', '0.508636', '0.555457', '0.528497', '0.637566', '0.514410', '0.627074', '0.503993', '0.565141', '0.606383', '0.525350', '0.498667', '0.532986', '0.506897', '0.517794', '0.653275', '0.515598', '0.704686', '0.617113', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (626, 1127), (612, 1158), (723, 1134), (589, 1145), (718, 1145), (568, 1127), (642, 1136), (684, 1128), (601, 1144), (561, 1125), (614, 1152), (588, 1160), (582, 1124), (748, 1145), (595, 1154), (797, 1131), (714, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5636
Round 009: test acc mean=0.5692 ± 0.0665 | min=0.5040 max=0.7010
         : test loss mean=0.6747 ± 0.0219
         : individual accs = ['0.544737', '0.513817', '0.656610', '0.529361', '0.637566', '0.518777', '0.577293', '0.503993', '0.594190', '0.626773', '0.525350', '0.509333', '0.528646', '0.508621', '0.518683', '0.668122', '0.515598', '0.687887', '0.700951', '0.517967']
         : correct/total = [(621, 1140), (595, 1158), (740, 1127), (613, 1158), (723, 1134), (594, 1145), (661, 1145), (568, 1127), (675, 1136), (707, 1128), (601, 1144), (573, 1125), (609, 1152), (590, 1160), (583, 1124), (765, 1145), (595, 1154), (778, 1131), (811, 1157), (591, 1141)]
         : compromised: 0.5137, honest: 0.5754
Round 010: test acc mean=0.5911 ± 0.0750 | min=0.5103 max=0.7511
         : test loss mean=0.6529 ± 0.0284
         : individual accs = ['0.544737', '0.614853', '0.720497', '0.568221', '0.554674', '0.529258', '0.641048', '0.528838', '0.609155', '0.602837', '0.525350', '0.536000', '0.552083', '0.510345', '0.538256', '0.710917', '0.515598', '0.714412', '0.751080', '0.553024']
         : correct/total = [(621, 1140), (712, 1158), (812, 1127), (658, 1158), (629, 1134), (606, 1145), (734, 1145), (596, 1127), (692, 1136), (680, 1128), (601, 1144), (603, 1125), (636, 1152), (592, 1160), (605, 1124), (814, 1145), (595, 1154), (808, 1131), (869, 1157), (631, 1141)]
         : compromised: 0.5198, honest: 0.5990

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 10.0% compromised
Final accuracy - Compromised: 0.5198, Honest: 0.5990
Overall test accuracy: mean=0.5911 ± 0.0750

=== BALANCE SUMMARY ===
Node 0: acceptance=0.912
Node 1: acceptance=0.936
Node 2: acceptance=0.883
Node 3: acceptance=0.925
Node 4: acceptance=0.936
Node 5: acceptance=0.953
Node 6: acceptance=0.900
Node 7: acceptance=0.950
Node 8: acceptance=0.860
Node 9: acceptance=0.946
Node 10: acceptance=0.922
Node 11: acceptance=0.900
Node 12: acceptance=0.942
Node 13: acceptance=0.946
Node 14: acceptance=0.907
Node 15: acceptance=0.936
Node 16: acceptance=0.946
Node 17: acceptance=0.922
Node 18: acceptance=0.912
Node 19: acceptance=0.912

Performance Summary:
  - Distance computation time: 1.956s (43.2%)
  - Filtering time: 2.092s (46.2%)
  - Aggregation time: 0.481s (10.6%)
  - Total time: 4.529s
  - Mean acceptance rate: 0.922

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
