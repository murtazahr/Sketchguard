Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3750 ± 0.1222 | min=0.0050 max=0.5328
         : test loss mean=37773870.1472 ± 164652466.6733
         : individual accs = ['0.435320', '0.339044', '0.421710', '0.417955', '0.494011', '0.352694', '0.410923', '0.386526', '0.413982', '0.428805', '0.150857', '0.452182', '0.303445', '0.005004', '0.532823', '0.349218', '0.442572', '0.507530', '0.230901', '0.424176']
         : correct/total = [(1797, 4128), (1425, 4203), (1721, 4081), (1811, 4333), (2021, 4091), (1512, 4287), (1723, 4193), (1681, 4349), (1735, 4191), (1834, 4277), (625, 4143), (1896, 4193), (1242, 4093), (21, 4197), (2159, 4052), (1407, 4029), (1838, 4153), (2123, 4183), (943, 4084), (1751, 4128)]
         : compromised: 0.3687, honest: 0.3897
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 002: test acc mean=0.6664 ± 0.1436 | min=0.0477 max=0.7353
         : test loss mean=nan ± nan
         : individual accs = ['0.722384', '0.679515', '0.705954', '0.667898', '0.700073', '0.704455', '0.734081', '0.707979', '0.692675', '0.725509', '0.686459', '0.667780', '0.684828', '0.047653', '0.695953', '0.693721', '0.717554', '0.654315', '0.735309', '0.704700']
         : correct/total = [(2982, 4128), (2856, 4203), (2881, 4081), (2894, 4333), (2864, 4091), (3020, 4287), (3078, 4193), (3079, 4349), (2903, 4191), (3103, 4277), (2844, 4143), (2800, 4193), (2803, 4093), (200, 4197), (2820, 4052), (2795, 4029), (2980, 4153), (2737, 4183), (3003, 4084), (2909, 4128)]
         : compromised: 0.6478, honest: 0.7100
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 003: test acc mean=0.7243 ± 0.1629 | min=0.0477 max=0.7967
         : test loss mean=nan ± nan
         : individual accs = ['0.793120', '0.646919', '0.777996', '0.778214', '0.778049', '0.779100', '0.784880', '0.796735', '0.784300', '0.775777', '0.769973', '0.600048', '0.748839', '0.047653', '0.789980', '0.782576', '0.783771', '0.713125', '0.774731', '0.779554']
         : correct/total = [(3274, 4128), (2719, 4203), (3175, 4081), (3372, 4333), (3183, 4091), (3340, 4287), (3291, 4193), (3465, 4349), (3287, 4191), (3318, 4277), (3190, 4143), (2516, 4193), (3065, 4093), (200, 4197), (3201, 4052), (3153, 4029), (3255, 4153), (2983, 4183), (3164, 4084), (3218, 4128)]
         : compromised: 0.6991, honest: 0.7829
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 004: test acc mean=0.7621 ± 0.1654 | min=0.0477 max=0.8259
         : test loss mean=nan ± nan
         : individual accs = ['0.803779', '0.735427', '0.804950', '0.806601', '0.807138', '0.808024', '0.813260', '0.825937', '0.814126', '0.813654', '0.801110', '0.742666', '0.788664', '0.047653', '0.814659', '0.817076', '0.804960', '0.786995', '0.802889', '0.802326']
         : correct/total = [(3318, 4128), (3091, 4203), (3285, 4081), (3495, 4333), (3302, 4091), (3464, 4287), (3410, 4193), (3592, 4349), (3412, 4191), (3480, 4277), (3319, 4143), (3114, 4193), (3228, 4093), (200, 4197), (3301, 4052), (3292, 4029), (3343, 4153), (3292, 4183), (3279, 4084), (3312, 4128)]
         : compromised: 0.7418, honest: 0.8094
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 005: test acc mean=0.7769 ± 0.1680 | min=0.0477 max=0.8315
         : test loss mean=nan ± nan
         : individual accs = ['0.820010', '0.766357', '0.820387', '0.821140', '0.815937', '0.820854', '0.819461', '0.831456', '0.827965', '0.822305', '0.806903', '0.781064', '0.814561', '0.047653', '0.826259', '0.813601', '0.821093', '0.818073', '0.826151', '0.817103']
         : correct/total = [(3385, 4128), (3221, 4203), (3348, 4081), (3558, 4333), (3338, 4091), (3519, 4287), (3436, 4193), (3616, 4349), (3470, 4191), (3517, 4277), (3343, 4143), (3275, 4193), (3334, 4093), (200, 4197), (3348, 4052), (3278, 4029), (3410, 4153), (3422, 4183), (3374, 4084), (3373, 4128)]
         : compromised: 0.7586, honest: 0.8196
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 006: test acc mean=0.7876 ± 0.1701 | min=0.0477 max=0.8425
         : test loss mean=nan ± nan
         : individual accs = ['0.828973', '0.792291', '0.823083', '0.829218', '0.821071', '0.830418', '0.827093', '0.842493', '0.837986', '0.832593', '0.822110', '0.808013', '0.827510', '0.047653', '0.832922', '0.830975', '0.829762', '0.838872', '0.822723', '0.827035']
         : correct/total = [(3422, 4128), (3330, 4203), (3359, 4081), (3593, 4333), (3359, 4091), (3560, 4287), (3468, 4193), (3664, 4349), (3512, 4191), (3561, 4277), (3406, 4143), (3388, 4193), (3387, 4093), (200, 4197), (3375, 4052), (3348, 4029), (3446, 4153), (3509, 4183), (3360, 4084), (3414, 4128)]
         : compromised: 0.7697, honest: 0.8295
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 007: test acc mean=0.7962 ± 0.1719 | min=0.0477 max=0.8499
         : test loss mean=nan ± nan
         : individual accs = ['0.835514', '0.816084', '0.839255', '0.841449', '0.830359', '0.837415', '0.838063', '0.849851', '0.841804', '0.840542', '0.826213', '0.822323', '0.837283', '0.047653', '0.836377', '0.831968', '0.843968', '0.841740', '0.836435', '0.828731']
         : correct/total = [(3449, 4128), (3430, 4203), (3425, 4081), (3646, 4333), (3397, 4091), (3590, 4287), (3514, 4193), (3696, 4349), (3528, 4191), (3595, 4277), (3423, 4143), (3448, 4193), (3427, 4093), (200, 4197), (3389, 4052), (3352, 4029), (3505, 4153), (3521, 4183), (3416, 4084), (3421, 4128)]
         : compromised: 0.7783, honest: 0.8377
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.333', 'Node 2: acc_rate=0.200']...
Round 008: test acc mean=0.7998 ± 0.1727 | min=0.0477 max=0.8508
         : test loss mean=nan ± nan
         : individual accs = ['0.833333', '0.830835', '0.838520', '0.849758', '0.839648', '0.844413', '0.844980', '0.850770', '0.846815', '0.843582', '0.829109', '0.829001', '0.836062', '0.047653', '0.845755', '0.838173', '0.840116', '0.840067', '0.846719', '0.820010']
         : correct/total = [(3440, 4128), (3492, 4203), (3422, 4081), (3682, 4333), (3435, 4091), (3620, 4287), (3543, 4193), (3700, 4349), (3549, 4191), (3608, 4277), (3435, 4143), (3476, 4193), (3422, 4093), (200, 4197), (3427, 4052), (3377, 4029), (3489, 4153), (3514, 4183), (3458, 4084), (3385, 4128)]
         : compromised: 0.7828, honest: 0.8394
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.292', 'Node 2: acc_rate=0.200']...
Round 009: test acc mean=0.8049 ± 0.1738 | min=0.0477 max=0.8556
         : test loss mean=nan ± nan
         : individual accs = ['0.837936', '0.840828', '0.846116', '0.852527', '0.837937', '0.843014', '0.850942', '0.855599', '0.855166', '0.853402', '0.837799', '0.837109', '0.841925', '0.047653', '0.839832', '0.847853', '0.842523', '0.848912', '0.839863', '0.841328']
         : correct/total = [(3459, 4128), (3534, 4203), (3453, 4081), (3694, 4333), (3428, 4091), (3614, 4287), (3568, 4193), (3721, 4349), (3584, 4191), (3650, 4277), (3471, 4143), (3510, 4193), (3446, 4093), (200, 4197), (3403, 4052), (3416, 4029), (3499, 4153), (3551, 4183), (3430, 4084), (3473, 4128)]
         : compromised: 0.7881, honest: 0.8442
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.278', 'Node 2: acc_rate=0.200']...
Round 010: test acc mean=0.8076 ± 0.1745 | min=0.0477 max=0.8569
         : test loss mean=nan ± nan
         : individual accs = ['0.845446', '0.854866', '0.849302', '0.852989', '0.839404', '0.844180', '0.855712', '0.856519', '0.854450', '0.856909', '0.830316', '0.840925', '0.846812', '0.047653', '0.847976', '0.845371', '0.844209', '0.852498', '0.845495', '0.840359']
         : correct/total = [(3490, 4128), (3593, 4203), (3466, 4081), (3696, 4333), (3434, 4091), (3619, 4287), (3588, 4193), (3725, 4349), (3581, 4191), (3665, 4277), (3440, 4143), (3526, 4193), (3466, 4093), (200, 4197), (3436, 4052), (3406, 4029), (3506, 4153), (3566, 4183), (3453, 4084), (3469, 4128)]
         : compromised: 0.7913, honest: 0.8455
         : sketchguard stats = ['Node 0: acc_rate=0.333', 'Node 1: acc_rate=0.267', 'Node 2: acc_rate=0.200']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: sketchguard
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.7913, Honest: 0.8455
Overall test accuracy: mean=0.8076 ± 0.1745

=== COARSE SUMMARY ===
Node 0: acceptance=0.333
Node 1: acceptance=0.267
Node 2: acceptance=0.200
Node 3: acceptance=0.250
Node 4: acceptance=0.250
Node 5: acceptance=0.200
Node 6: acceptance=0.200
Node 7: acceptance=0.400
Node 8: acceptance=0.500
Node 9: acceptance=0.333
Node 10: acceptance=0.250
Node 11: acceptance=0.229
Node 12: acceptance=0.343
Node 13: acceptance=0.000
Node 14: acceptance=0.143
Node 15: acceptance=0.167
Node 16: acceptance=0.200
Node 17: acceptance=0.480
Node 18: acceptance=0.250
Node 19: acceptance=0.500

Performance Summary:
  - Sketching time: 22.283s (98.7%)
  - Filtering time: 0.020s (0.1%)
  - Aggregation time: 0.285s (1.3%)
  - Total time: 22.588s
  - Mean acceptance rate: 0.275

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
