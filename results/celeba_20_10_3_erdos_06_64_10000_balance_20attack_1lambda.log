Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5105 ± 0.0191 | min=0.4820 max=0.5599
         : test loss mean=18.9236 ± 46.0971
         : individual accs = ['0.528947', '0.508636', '0.490683', '0.520725', '0.522928', '0.488210', '0.528384', '0.503993', '0.488556', '0.491135', '0.525350', '0.497778', '0.559896', '0.506897', '0.514235', '0.534498', '0.492201', '0.508400', '0.515990', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (553, 1127), (603, 1158), (593, 1134), (559, 1145), (605, 1145), (568, 1127), (555, 1136), (554, 1128), (601, 1144), (560, 1125), (645, 1152), (588, 1160), (578, 1124), (612, 1145), (568, 1154), (575, 1131), (597, 1157), (550, 1141)]
         : compromised: 0.5159, honest: 0.5091
Round 002: test acc mean=0.5165 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=2.9250 ± 2.3533
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.505768', '0.562500', '0.491135', '0.526224', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (570, 1127), (639, 1136), (554, 1128), (602, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5173
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9427 ± 0.1350
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 004: test acc mean=0.5275 ± 0.0244 | min=0.5022 max=0.6045
         : test loss mean=5.9492 ± 7.2454
         : individual accs = ['0.531579', '0.604491', '0.502218', '0.528497', '0.543210', '0.524017', '0.522271', '0.507542', '0.565141', '0.502660', '0.525350', '0.563556', '0.522569', '0.506897', '0.518683', '0.517031', '0.514731', '0.509284', '0.523768', '0.516214']
         : correct/total = [(606, 1140), (700, 1158), (566, 1127), (612, 1158), (616, 1134), (600, 1145), (598, 1145), (572, 1127), (642, 1136), (567, 1128), (601, 1144), (634, 1125), (602, 1152), (588, 1160), (583, 1124), (592, 1145), (594, 1154), (576, 1131), (606, 1157), (589, 1141)]
         : compromised: 0.5157, honest: 0.5304
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9966 ± 0.0914
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 006: test acc mean=0.5538 ± 0.0628 | min=0.5022 max=0.7517
         : test loss mean=6.0875 ± 5.7051
         : individual accs = ['0.531579', '0.551813', '0.520852', '0.569948', '0.522046', '0.523144', '0.522271', '0.503993', '0.562500', '0.683511', '0.525350', '0.502222', '0.622396', '0.751724', '0.518683', '0.517031', '0.516464', '0.588859', '0.522904', '0.517967']
         : correct/total = [(606, 1140), (639, 1158), (587, 1127), (660, 1158), (592, 1134), (599, 1145), (598, 1145), (568, 1127), (639, 1136), (771, 1128), (601, 1144), (565, 1125), (717, 1152), (872, 1160), (583, 1124), (592, 1145), (596, 1154), (666, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.6215, honest: 0.5368
Round 007: test acc mean=0.5164 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.9492 ± 0.0701
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.508621', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (590, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5135, honest: 0.5172
Round 008: test acc mean=0.6818 ± 0.1162 | min=0.5244 max=0.8767
         : test loss mean=3.1145 ± 3.0528
         : individual accs = ['0.677193', '0.746114', '0.746229', '0.759931', '0.656966', '0.736245', '0.544105', '0.524401', '0.602993', '0.848404', '0.535839', '0.574222', '0.876736', '0.867241', '0.561388', '0.722271', '0.589255', '0.847922', '0.665514', '0.553024']
         : correct/total = [(772, 1140), (864, 1158), (841, 1127), (880, 1158), (745, 1134), (843, 1145), (623, 1145), (591, 1127), (685, 1136), (957, 1128), (613, 1144), (646, 1125), (1010, 1152), (1006, 1160), (631, 1124), (827, 1145), (680, 1154), (959, 1131), (770, 1157), (631, 1141)]
         : compromised: 0.8320, honest: 0.6442
Round 009: test acc mean=0.5265 ± 0.0313 | min=0.4933 max=0.6440
         : test loss mean=0.8845 ± 0.1250
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.523936', '0.525350', '0.498667', '0.555556', '0.643966', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (591, 1128), (601, 1144), (561, 1125), (640, 1152), (747, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5556, honest: 0.5192
Round 010: test acc mean=0.8153 ± 0.0903 | min=0.5848 max=0.9026
         : test loss mean=1.3279 ± 1.6181
         : individual accs = ['0.832456', '0.878238', '0.860692', '0.888601', '0.827160', '0.842795', '0.617467', '0.826974', '0.698944', '0.881206', '0.584790', '0.840000', '0.894097', '0.902586', '0.687722', '0.855022', '0.806759', '0.893015', '0.852204', '0.835232']
         : correct/total = [(949, 1140), (1017, 1158), (970, 1127), (1029, 1158), (938, 1134), (965, 1145), (707, 1145), (932, 1127), (794, 1136), (994, 1128), (669, 1144), (945, 1125), (1030, 1152), (1047, 1160), (773, 1124), (979, 1145), (931, 1154), (1010, 1131), (986, 1157), (953, 1141)]
         : compromised: 0.8831, honest: 0.7983

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.8831, Honest: 0.7983
Overall test accuracy: mean=0.8153 ± 0.0903

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.947s (42.8%)
  - Filtering time: 2.087s (45.8%)
  - Aggregation time: 0.519s (11.4%)
  - Total time: 4.554s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
