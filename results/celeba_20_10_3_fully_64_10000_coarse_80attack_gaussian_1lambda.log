Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8490 ± 0.0810
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=0.158', 'Node 1: acc_rate=0.211', 'Node 2: acc_rate=0.211']...
Round 002: test acc mean=0.5166 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.8050 ± 0.0663
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.523810', '0.514410', '0.521397', '0.507542', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (594, 1134), (589, 1145), (597, 1145), (572, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5190
         : coarse stats = ['Node 0: acc_rate=0.158', 'Node 1: acc_rate=0.211', 'Node 2: acc_rate=0.211']...
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=0.439', 'Node 1: acc_rate=0.474', 'Node 2: acc_rate=0.474']...
Round 004: test acc mean=0.5179 ± 0.0141 | min=0.4920 max=0.5625
         : test loss mean=375.9652 ± 174.6034
         : individual accs = ['0.528947', '0.508636', '0.517303', '0.528497', '0.522046', '0.514410', '0.519651', '0.503993', '0.562500', '0.492021', '0.525350', '0.498667', '0.528646', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.519720']
         : correct/total = [(603, 1140), (589, 1158), (583, 1127), (612, 1158), (592, 1134), (589, 1145), (595, 1145), (568, 1127), (639, 1136), (555, 1128), (601, 1144), (561, 1125), (609, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (593, 1141)]
         : compromised: 0.5180, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.605', 'Node 2: acc_rate=0.605']...
Round 005: test acc mean=0.4926 ± 0.0218 | min=0.4500 max=0.5269
         : test loss mean=114.3214 ± 54.9245
         : individual accs = ['0.499123', '0.512090', '0.486247', '0.470639', '0.485009', '0.460262', '0.510044', '0.493345', '0.496479', '0.483156', '0.474650', '0.496889', '0.526910', '0.450000', '0.511566', '0.515284', '0.490468', '0.519894', '0.515990', '0.453111']
         : correct/total = [(569, 1140), (593, 1158), (548, 1127), (545, 1158), (550, 1134), (527, 1145), (584, 1145), (556, 1127), (564, 1136), (545, 1128), (543, 1144), (559, 1125), (607, 1152), (522, 1160), (575, 1124), (590, 1145), (566, 1154), (588, 1131), (597, 1157), (517, 1141)]
         : compromised: 0.4927, honest: 0.4920
         : coarse stats = ['Node 0: acc_rate=0.663', 'Node 1: acc_rate=0.684', 'Node 2: acc_rate=0.684']...
Round 006: test acc mean=0.4850 ± 0.0154 | min=0.4393 max=0.5089
         : test loss mean=504.6243 ± 281.6219
         : individual accs = ['0.471053', '0.505181', '0.506655', '0.470639', '0.477954', '0.486463', '0.478603', '0.496007', '0.439261', '0.508865', '0.473776', '0.501333', '0.477431', '0.493103', '0.482206', '0.484716', '0.484402', '0.491600', '0.488332', '0.482033']
         : correct/total = [(537, 1140), (585, 1158), (571, 1127), (545, 1158), (542, 1134), (557, 1145), (548, 1145), (559, 1127), (499, 1136), (574, 1128), (542, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (555, 1145), (559, 1154), (556, 1131), (565, 1157), (550, 1141)]
         : compromised: 0.4856, honest: 0.4824
         : coarse stats = ['Node 0: acc_rate=0.719', 'Node 1: acc_rate=0.737', 'Node 2: acc_rate=0.737']...
Round 007: test acc mean=0.5351 ± 0.0269 | min=0.4920 max=0.5914
         : test loss mean=0.8242 ± 0.1371
         : individual accs = ['0.528070', '0.508636', '0.572316', '0.545769', '0.530864', '0.514410', '0.529258', '0.590949', '0.573063', '0.492021', '0.525350', '0.505778', '0.523438', '0.591379', '0.525801', '0.532751', '0.525997', '0.508400', '0.531547', '0.546889']
         : correct/total = [(602, 1140), (589, 1158), (645, 1127), (632, 1158), (602, 1134), (589, 1145), (606, 1145), (666, 1127), (651, 1136), (555, 1128), (601, 1144), (569, 1125), (603, 1152), (686, 1160), (591, 1124), (610, 1145), (607, 1154), (575, 1131), (615, 1157), (624, 1141)]
         : compromised: 0.5329, honest: 0.5440
         : coarse stats = ['Node 0: acc_rate=0.639', 'Node 1: acc_rate=0.662', 'Node 2: acc_rate=0.662']...
Round 008: test acc mean=0.5973 ± 0.0385 | min=0.5168 max=0.6612
         : test loss mean=0.6714 ± 0.0277
         : individual accs = ['0.636842', '0.619171', '0.542147', '0.643351', '0.611111', '0.643668', '0.589520', '0.623780', '0.562500', '0.516844', '0.582168', '0.566222', '0.646701', '0.573276', '0.557829', '0.615721', '0.570191', '0.573828', '0.661193', '0.609115']
         : correct/total = [(726, 1140), (717, 1158), (611, 1127), (745, 1158), (693, 1134), (737, 1145), (675, 1145), (703, 1127), (639, 1136), (583, 1128), (666, 1144), (637, 1125), (745, 1152), (665, 1160), (627, 1124), (705, 1145), (658, 1154), (649, 1131), (765, 1157), (695, 1141)]
         : compromised: 0.5940, honest: 0.6105
         : coarse stats = ['Node 0: acc_rate=0.579', 'Node 1: acc_rate=0.605', 'Node 2: acc_rate=0.605']...
Round 009: test acc mean=0.6614 ± 0.0457 | min=0.5716 max=0.7231
         : test loss mean=0.6223 ± 0.0441
         : individual accs = ['0.703509', '0.700345', '0.579414', '0.637306', '0.689594', '0.723144', '0.657642', '0.700976', '0.610035', '0.671099', '0.625000', '0.686222', '0.687500', '0.571552', '0.597865', '0.667249', '0.707106', '0.621574', '0.722558', '0.668712']
         : correct/total = [(802, 1140), (811, 1158), (653, 1127), (738, 1158), (782, 1134), (828, 1145), (753, 1145), (790, 1127), (693, 1136), (757, 1128), (715, 1144), (772, 1125), (792, 1152), (663, 1160), (672, 1124), (764, 1145), (816, 1154), (703, 1131), (836, 1157), (763, 1141)]
         : compromised: 0.6517, honest: 0.7003
         : coarse stats = ['Node 0: acc_rate=0.532', 'Node 1: acc_rate=0.561', 'Node 2: acc_rate=0.561']...
Round 010: test acc mean=0.7452 ± 0.0128 | min=0.7212 max=0.7634
         : test loss mean=0.5208 ± 0.0169
         : individual accs = ['0.760526', '0.753886', '0.729370', '0.736615', '0.748677', '0.761572', '0.738865', '0.741792', '0.758803', '0.760638', '0.721154', '0.752000', '0.748264', '0.735345', '0.737544', '0.733624', '0.763432', '0.731211', '0.759723', '0.730938']
         : correct/total = [(867, 1140), (873, 1158), (822, 1127), (853, 1158), (849, 1134), (872, 1145), (846, 1145), (836, 1127), (862, 1136), (858, 1128), (825, 1144), (846, 1125), (862, 1152), (853, 1160), (829, 1124), (840, 1145), (881, 1154), (827, 1131), (879, 1157), (834, 1141)]
         : compromised: 0.7431, honest: 0.7536
         : coarse stats = ['Node 0: acc_rate=0.495', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: coarse
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.7431, Honest: 0.7536
Overall test accuracy: mean=0.7452 ± 0.0128

=== COARSE SUMMARY ===
Node 0: acceptance=0.495
Node 1: acceptance=0.526
Node 2: acceptance=0.526
Node 3: acceptance=0.526
Node 4: acceptance=0.495
Node 5: acceptance=0.526
Node 6: acceptance=0.526
Node 7: acceptance=0.495
Node 8: acceptance=0.526
Node 9: acceptance=0.526
Node 10: acceptance=0.521
Node 11: acceptance=0.526
Node 12: acceptance=0.526
Node 13: acceptance=0.526
Node 14: acceptance=0.526
Node 15: acceptance=0.526
Node 16: acceptance=0.495
Node 17: acceptance=0.526
Node 18: acceptance=0.526
Node 19: acceptance=0.526

Performance Summary:
  - Sketching time: 0.053s (6.5%)
  - Filtering time: 0.013s (1.5%)
  - Aggregation time: 0.758s (92.0%)
  - Total time: 0.824s
  - Mean acceptance rate: 0.520

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
