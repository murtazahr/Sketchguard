(edgedrift) mrangwala@rs-l-rhatop:~/Projects/Trust-Monitor$ tail -f femnist_20_10_3_erdos_64_10000_coarse_25attack_1lambda.log
nohup: ignoring input
Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 5/20 nodes: [5, 12, 13, 14, 17]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4817 ± 0.0344 | min=0.4341 max=0.5489
         : test loss mean=3.7528 ± 0.0302
         : individual accs = ['0.545785', '0.497026', '0.503798', '0.467344', '0.453679', '0.548869', '0.475078', '0.451598', '0.476020', '0.454290', '0.449916', '0.526592', '0.454923', '0.434120', '0.497779', '0.512782', '0.451240', '0.524026', '0.463271', '0.446221']
         : correct/total = [(2253, 4128), (2089, 4203), (2056, 4081), (2025, 4333), (1856, 4091), (2353, 4287), (1992, 4193), (1964, 4349), (1995, 4191), (1943, 4277), (1864, 4143), (2208, 4193), (1862, 4093), (1822, 4197), (2017, 4052), (2066, 4029), (1874, 4153), (2192, 4183), (1892, 4084), (1842, 4128)]
         : compromised: 0.4919, honest: 0.4783
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 002: test acc mean=0.6836 ± 0.0187 | min=0.6413 max=0.7049
         : test loss mean=3.3351 ± 0.0950
         : individual accs = ['0.697190', '0.700214', '0.658907', '0.703208', '0.693718', '0.704922', '0.641307', '0.678777', '0.681937', '0.702128', '0.682114', '0.701646', '0.690936', '0.661425', '0.700395', '0.689501', '0.658560', '0.656467', '0.695397', '0.672723']
         : correct/total = [(2878, 4128), (2943, 4203), (2689, 4081), (3047, 4333), (2838, 4091), (3022, 4287), (2689, 4193), (2952, 4349), (2858, 4191), (3003, 4277), (2826, 4143), (2942, 4193), (2828, 4093), (2776, 4197), (2838, 4052), (2778, 4029), (2735, 4153), (2746, 4183), (2840, 4084), (2777, 4128)]
         : compromised: 0.6828, honest: 0.6838
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 003: test acc mean=0.7035 ± 0.0201 | min=0.6485 max=0.7323
         : test loss mean=2.9453 ± 0.1841
         : individual accs = ['0.732316', '0.724720', '0.675815', '0.732056', '0.711806', '0.648472', '0.720487', '0.708209', '0.689812', '0.696049', '0.698769', '0.721440', '0.720254', '0.687396', '0.709279', '0.690246', '0.698772', '0.684676', '0.710578', '0.708576']
         : correct/total = [(3023, 4128), (3046, 4203), (2758, 4081), (3172, 4333), (2912, 4091), (2780, 4287), (3021, 4193), (3080, 4349), (2891, 4191), (2977, 4277), (2895, 4143), (3025, 4193), (2948, 4093), (2885, 4197), (2874, 4052), (2781, 4029), (2902, 4153), (2864, 4183), (2902, 4084), (2925, 4128)]
         : compromised: 0.6900, honest: 0.7080
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 004: test acc mean=0.7056 ± 0.0282 | min=0.6201 max=0.7399
         : test loss mean=2.3710 ± 0.2478
         : individual accs = ['0.716085', '0.734000', '0.694438', '0.712670', '0.739917', '0.657569', '0.735989', '0.716487', '0.717967', '0.705635', '0.672701', '0.723587', '0.620083', '0.697879', '0.685341', '0.726483', '0.704551', '0.711212', '0.724535', '0.715116']
         : correct/total = [(2956, 4128), (3085, 4203), (2834, 4081), (3088, 4333), (3027, 4091), (2819, 4287), (3086, 4193), (3116, 4349), (3009, 4191), (3018, 4277), (2787, 4143), (3034, 4193), (2538, 4093), (2929, 4197), (2777, 4052), (2927, 4029), (2926, 4153), (2975, 4183), (2959, 4084), (2952, 4128)]
         : compromised: 0.6744, honest: 0.7160
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 005: test acc mean=0.7058 ± 0.0335 | min=0.6190 max=0.7499
         : test loss mean=1.7400 ± 0.2226
         : individual accs = ['0.725291', '0.699262', '0.699583', '0.701592', '0.732584', '0.708188', '0.712616', '0.705220', '0.749940', '0.722469', '0.679218', '0.719533', '0.656731', '0.671194', '0.618954', '0.720030', '0.746689', '0.660292', '0.749510', '0.737888']
         : correct/total = [(2994, 4128), (2939, 4203), (2855, 4081), (3040, 4333), (2997, 4091), (3036, 4287), (2988, 4193), (3067, 4349), (3143, 4191), (3090, 4277), (2814, 4143), (3017, 4193), (2688, 4093), (2817, 4197), (2508, 4052), (2901, 4029), (3101, 4153), (2762, 4183), (3061, 4084), (3046, 4128)]
         : compromised: 0.6631, honest: 0.7201
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 006: test acc mean=0.7571 ± 0.0175 | min=0.7132 max=0.7771
         : test loss mean=1.1169 ± 0.1192
         : individual accs = ['0.736192', '0.752082', '0.775545', '0.769905', '0.765583', '0.735946', '0.758407', '0.771672', '0.767120', '0.748656', '0.761284', '0.764369', '0.713169', '0.769836', '0.727295', '0.777116', '0.769323', '0.739182', '0.774486', '0.764293']
         : correct/total = [(3039, 4128), (3161, 4203), (3165, 4081), (3336, 4333), (3132, 4091), (3155, 4287), (3180, 4193), (3356, 4349), (3215, 4191), (3202, 4277), (3154, 4143), (3205, 4193), (2919, 4093), (3231, 4197), (2947, 4052), (3131, 4029), (3195, 4153), (3092, 4183), (3163, 4084), (3155, 4128)]
         : compromised: 0.7371, honest: 0.7637
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 007: test acc mean=0.7999 ± 0.0096 | min=0.7738 max=0.8110
         : test loss mean=0.7498 ± 0.0560
         : individual accs = ['0.792151', '0.798239', '0.796373', '0.810524', '0.796138', '0.801026', '0.810160', '0.809611', '0.811024', '0.801263', '0.791455', '0.802767', '0.773760', '0.798904', '0.801826', '0.806652', '0.808572', '0.785561', '0.810970', '0.790940']
         : correct/total = [(3270, 4128), (3355, 4203), (3250, 4081), (3512, 4333), (3257, 4091), (3434, 4287), (3397, 4193), (3521, 4349), (3399, 4191), (3427, 4277), (3279, 4143), (3366, 4193), (3167, 4093), (3353, 4197), (3249, 4052), (3250, 4029), (3358, 4153), (3286, 4183), (3312, 4084), (3265, 4128)]
         : compromised: 0.7922, honest: 0.8025
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 008: test acc mean=0.8188 ± 0.0086 | min=0.7982 max=0.8304
         : test loss mean=0.5935 ± 0.0257
         : individual accs = ['0.811773', '0.817035', '0.818917', '0.830372', '0.811538', '0.826452', '0.826854', '0.827777', '0.817466', '0.826748', '0.804248', '0.828524', '0.807965', '0.822969', '0.825765', '0.824026', '0.812666', '0.815922', '0.819785', '0.798207']
         : correct/total = [(3351, 4128), (3434, 4203), (3342, 4081), (3598, 4333), (3320, 4091), (3543, 4287), (3467, 4193), (3600, 4349), (3426, 4191), (3536, 4277), (3332, 4143), (3474, 4193), (3307, 4093), (3454, 4197), (3346, 4052), (3320, 4029), (3375, 4153), (3413, 4183), (3348, 4084), (3295, 4128)]
         : compromised: 0.8198, honest: 0.8184
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 009: test acc mean=0.8340 ± 0.0054 | min=0.8252 max=0.8475
         : test loss mean=0.5218 ± 0.0181
         : individual accs = ['0.830184', '0.837497', '0.830434', '0.839603', '0.829137', '0.836249', '0.837825', '0.837894', '0.847530', '0.841244', '0.831764', '0.831386', '0.831419', '0.834644', '0.838351', '0.831720', '0.828798', '0.825245', '0.833497', '0.825339']
         : correct/total = [(3427, 4128), (3520, 4203), (3389, 4081), (3638, 4333), (3392, 4091), (3585, 4287), (3513, 4193), (3644, 4349), (3552, 4191), (3598, 4277), (3446, 4143), (3486, 4193), (3403, 4093), (3503, 4197), (3397, 4052), (3351, 4029), (3442, 4153), (3452, 4183), (3404, 4084), (3407, 4128)]
         : compromised: 0.8332, honest: 0.8343
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...
Round 010: test acc mean=0.8415 ± 0.0050 | min=0.8311 max=0.8481
         : test loss mean=0.4896 ± 0.0177
         : individual accs = ['0.834302', '0.845349', '0.839990', '0.843757', '0.831093', '0.841381', '0.846411', '0.845022', '0.847053', '0.845219', '0.833213', '0.835202', '0.839726', '0.842983', '0.846989', '0.848101', '0.842042', '0.843175', '0.844025', '0.835514']
         : correct/total = [(3444, 4128), (3553, 4203), (3428, 4081), (3656, 4333), (3400, 4091), (3607, 4287), (3549, 4193), (3675, 4349), (3550, 4191), (3615, 4277), (3452, 4143), (3502, 4193), (3437, 4093), (3538, 4197), (3432, 4052), (3417, 4029), (3497, 4153), (3527, 4183), (3447, 4084), (3449, 4128)]
         : compromised: 0.8429, honest: 0.8411
         : coarse stats = ['Node 0: acc_rate=0.750', 'Node 1: acc_rate=0.800', 'Node 2: acc_rate=0.875']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: directed_deviation, 25.0% compromised
Final accuracy - Compromised: 0.8429, Honest: 0.8411
Overall test accuracy: mean=0.8415 ± 0.0050

=== COARSE SUMMARY ===
Node 0: acceptance=0.750
Node 1: acceptance=0.800
Node 2: acceptance=0.875
Node 3: acceptance=0.857
Node 4: acceptance=0.778
Node 5: acceptance=0.700
Node 6: acceptance=0.667
Node 7: acceptance=0.636
Node 8: acceptance=0.429
Node 9: acceptance=0.909
Node 10: acceptance=0.750
Node 11: acceptance=0.667
Node 12: acceptance=0.833
Node 13: acceptance=0.889
Node 14: acceptance=0.714
Node 15: acceptance=0.667
Node 16: acceptance=0.571
Node 17: acceptance=0.750
Node 18: acceptance=0.750
Node 19: acceptance=0.600

Performance Summary:
  - Sketching time: 19.588s (98.0%)
  - Filtering time: 0.029s (0.1%)
  - Aggregation time: 0.364s (1.8%)
  - Total time: 19.980s
  - Mean acceptance rate: 0.730

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation