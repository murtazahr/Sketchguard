Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4905 ± 0.0353 | min=0.4336 max=0.5528
         : test loss mean=3.7484 ± 0.0293
         : individual accs = ['0.550388', '0.489888', '0.508209', '0.461574', '0.442679', '0.552834', '0.491057', '0.461485', '0.516583', '0.454057', '0.460053', '0.526353', '0.469582', '0.433643', '0.515054', '0.522462', '0.466891', '0.539087', '0.484329', '0.463663']
         : correct/total = [(2272, 4128), (2059, 4203), (2074, 4081), (2000, 4333), (1811, 4091), (2370, 4287), (2059, 4193), (2007, 4349), (2165, 4191), (1942, 4277), (1906, 4143), (2207, 4193), (1922, 4093), (1820, 4197), (2087, 4052), (2105, 4029), (1939, 4153), (2255, 4183), (1978, 4084), (1914, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6867 ± 0.0194 | min=0.6268 max=0.7136
         : test loss mean=3.3746 ± 0.0315
         : individual accs = ['0.687016', '0.691173', '0.667728', '0.700669', '0.686140', '0.713553', '0.626759', '0.689354', '0.691482', '0.705869', '0.692735', '0.703554', '0.700220', '0.669049', '0.706318', '0.697195', '0.663617', '0.682285', '0.690989', '0.668362']
         : correct/total = [(2836, 4128), (2905, 4203), (2725, 4081), (3036, 4333), (2807, 4091), (3059, 4287), (2628, 4193), (2998, 4349), (2898, 4191), (3019, 4277), (2870, 4143), (2950, 4193), (2866, 4093), (2808, 4197), (2862, 4052), (2809, 4029), (2756, 4153), (2854, 4183), (2822, 4084), (2759, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.7149 ± 0.0164 | min=0.6773 max=0.7389
         : test loss mean=3.0666 ± 0.0378
         : individual accs = ['0.737645', '0.717583', '0.677285', '0.727671', '0.708140', '0.687194', '0.725733', '0.731203', '0.717490', '0.697919', '0.705045', '0.738850', '0.735646', '0.718132', '0.730010', '0.718044', '0.699013', '0.714559', '0.705436', '0.706153']
         : correct/total = [(3045, 4128), (3016, 4203), (2764, 4081), (3153, 4333), (2897, 4091), (2946, 4287), (3043, 4193), (3180, 4349), (3007, 4191), (2985, 4277), (2921, 4143), (3098, 4193), (3011, 4093), (3014, 4197), (2958, 4052), (2893, 4029), (2903, 4153), (2989, 4183), (2881, 4084), (2915, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.7212 ± 0.0178 | min=0.6843 max=0.7438
         : test loss mean=2.6073 ± 0.0627
         : individual accs = ['0.714390', '0.740661', '0.688312', '0.717517', '0.739672', '0.722417', '0.740997', '0.733962', '0.718683', '0.707739', '0.684287', '0.728595', '0.693868', '0.737193', '0.743830', '0.739886', '0.708163', '0.732250', '0.721352', '0.709545']
         : correct/total = [(2949, 4128), (3113, 4203), (2809, 4081), (3109, 4333), (3026, 4091), (3097, 4287), (3107, 4193), (3192, 4349), (3012, 4191), (3027, 4277), (2835, 4143), (3055, 4193), (2840, 4093), (3094, 4197), (3014, 4052), (2981, 4029), (2941, 4153), (3063, 4183), (2946, 4084), (2929, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.7029 ± 0.0200 | min=0.6486 max=0.7353
         : test loss mean=2.0432 ± 0.0807
         : individual accs = ['0.721657', '0.691411', '0.648616', '0.675283', '0.713273', '0.720551', '0.710708', '0.709588', '0.716774', '0.710077', '0.673425', '0.683997', '0.721231', '0.699547', '0.704837', '0.706131', '0.717313', '0.690653', '0.735309', '0.707849']
         : correct/total = [(2979, 4128), (2906, 4203), (2647, 4081), (2926, 4333), (2918, 4091), (3089, 4287), (2980, 4193), (3086, 4349), (3004, 4191), (3037, 4277), (2790, 4143), (2868, 4193), (2952, 4093), (2936, 4197), (2856, 4052), (2845, 4029), (2979, 4153), (2889, 4183), (3003, 4084), (2922, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.7360 ± 0.0171 | min=0.7001 max=0.7715
         : test loss mean=1.3957 ± 0.0884
         : individual accs = ['0.700097', '0.722341', '0.740015', '0.742903', '0.729895', '0.730814', '0.745290', '0.747068', '0.734192', '0.706570', '0.725320', '0.722156', '0.741510', '0.771503', '0.743337', '0.767188', '0.730075', '0.743246', '0.753673', '0.723595']
         : correct/total = [(2890, 4128), (3036, 4203), (3020, 4081), (3219, 4333), (2986, 4091), (3133, 4287), (3125, 4193), (3249, 4349), (3077, 4191), (3022, 4277), (3005, 4143), (3028, 4193), (3035, 4093), (3238, 4197), (3012, 4052), (3091, 4029), (3032, 4153), (3109, 4183), (3078, 4084), (2987, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.7846 ± 0.0117 | min=0.7579 max=0.8004
         : test loss mean=0.9011 ± 0.0594
         : individual accs = ['0.786822', '0.784916', '0.765744', '0.787907', '0.771938', '0.799394', '0.799428', '0.789837', '0.795514', '0.776713', '0.775525', '0.757930', '0.774982', '0.789135', '0.792201', '0.800447', '0.790272', '0.780301', '0.798482', '0.774952']
         : correct/total = [(3248, 4128), (3299, 4203), (3125, 4081), (3414, 4333), (3158, 4091), (3427, 4287), (3352, 4193), (3435, 4349), (3334, 4191), (3322, 4277), (3213, 4143), (3178, 4193), (3172, 4093), (3312, 4197), (3210, 4052), (3225, 4029), (3282, 4153), (3264, 4183), (3261, 4084), (3199, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8128 ± 0.0091 | min=0.7883 max=0.8232
         : test loss mean=0.6428 ± 0.0335
         : individual accs = ['0.806686', '0.814656', '0.802499', '0.823217', '0.797849', '0.821320', '0.819461', '0.819729', '0.821761', '0.813421', '0.800145', '0.815884', '0.809919', '0.817250', '0.821816', '0.818814', '0.815555', '0.811858', '0.816112', '0.788275']
         : correct/total = [(3330, 4128), (3424, 4203), (3275, 4081), (3567, 4333), (3264, 4091), (3521, 4287), (3436, 4193), (3565, 4349), (3444, 4191), (3479, 4277), (3315, 4143), (3421, 4193), (3315, 4093), (3430, 4197), (3330, 4052), (3299, 4029), (3387, 4153), (3396, 4183), (3333, 4084), (3254, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8295 ± 0.0061 | min=0.8190 max=0.8466
         : test loss mean=0.5449 ± 0.0197
         : individual accs = ['0.822432', '0.830835', '0.827493', '0.834295', '0.822537', '0.833217', '0.833771', '0.829156', '0.846576', '0.835399', '0.821868', '0.826377', '0.828976', '0.830355', '0.834896', '0.832713', '0.828558', '0.822854', '0.828599', '0.819041']
         : correct/total = [(3395, 4128), (3492, 4203), (3377, 4081), (3615, 4333), (3365, 4091), (3572, 4287), (3496, 4193), (3606, 4349), (3548, 4191), (3573, 4277), (3405, 4143), (3465, 4193), (3393, 4093), (3485, 4197), (3383, 4052), (3355, 4029), (3441, 4153), (3442, 4183), (3384, 4084), (3381, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8385 ± 0.0060 | min=0.8269 max=0.8478
         : test loss mean=0.5034 ± 0.0185
         : individual accs = ['0.831395', '0.845111', '0.833129', '0.841911', '0.826937', '0.835783', '0.843787', '0.840193', '0.847769', '0.840776', '0.827178', '0.831386', '0.839971', '0.840362', '0.845755', '0.843385', '0.841079', '0.841740', '0.839618', '0.832122']
         : correct/total = [(3432, 4128), (3552, 4203), (3400, 4081), (3648, 4333), (3383, 4091), (3583, 4287), (3538, 4193), (3654, 4349), (3553, 4191), (3596, 4277), (3427, 4143), (3486, 4193), (3438, 4093), (3527, 4197), (3427, 4052), (3398, 4029), (3493, 4153), (3521, 4183), (3429, 4084), (3435, 4128)]
         : sketchguard stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: sketchguard
Overall test accuracy: mean=0.8385 ± 0.0060

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 13.886s (97.3%)
  - Filtering time: 0.020s (0.1%)
  - Aggregation time: 0.362s (2.5%)
  - Total time: 14.268s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
