Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8423 ± 0.0755
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7914 ± 0.0668
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.504880', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (569, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5169
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 004: test acc mean=0.5014 ± 0.0231 | min=0.4453 max=0.5651
         : test loss mean=44.4346 ± 34.0844
         : individual accs = ['0.479825', '0.498273', '0.493345', '0.516408', '0.445326', '0.513537', '0.521397', '0.499556', '0.565141', '0.506206', '0.513112', '0.498667', '0.492188', '0.491379', '0.518683', '0.524017', '0.484402', '0.496021', '0.477960', '0.491674']
         : correct/total = [(547, 1140), (577, 1158), (556, 1127), (598, 1158), (505, 1134), (588, 1145), (597, 1145), (563, 1127), (642, 1136), (571, 1128), (587, 1144), (561, 1125), (567, 1152), (570, 1160), (583, 1124), (600, 1145), (559, 1154), (561, 1131), (553, 1157), (561, 1141)]
         : compromised: 0.4983, honest: 0.5027
Round 005: test acc mean=0.5022 ± 0.0230 | min=0.4384 max=0.5360
         : test loss mean=38.9043 ± 28.9620
         : individual accs = ['0.522807', '0.508636', '0.518190', '0.530225', '0.471781', '0.514410', '0.519651', '0.497782', '0.438380', '0.491135', '0.474650', '0.536000', '0.520833', '0.506897', '0.517794', '0.482969', '0.514731', '0.490716', '0.502161', '0.484663']
         : correct/total = [(596, 1140), (589, 1158), (584, 1127), (614, 1158), (535, 1134), (589, 1145), (595, 1145), (561, 1127), (498, 1136), (554, 1128), (543, 1144), (603, 1125), (600, 1152), (588, 1160), (582, 1124), (553, 1145), (594, 1154), (555, 1131), (581, 1157), (553, 1141)]
         : compromised: 0.5088, honest: 0.4994
Round 006: test acc mean=0.5076 ± 0.0209 | min=0.4715 max=0.5625
         : test loss mean=0.7289 ± 0.0631
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.471503', '0.477954', '0.514410', '0.521397', '0.503993', '0.562500', '0.508865', '0.525350', '0.498667', '0.522569', '0.506897', '0.482206', '0.482969', '0.515598', '0.508400', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (546, 1158), (542, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (574, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (595, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5094, honest: 0.5068
Round 007: test acc mean=0.5142 ± 0.0171 | min=0.4715 max=0.5625
         : test loss mean=0.6984 ± 0.0122
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.471503', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (546, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5137
Round 008: test acc mean=0.5144 ± 0.0183 | min=0.4732 max=0.5625
         : test loss mean=0.6965 ± 0.0057
         : individual accs = ['0.528947', '0.508636', '0.508429', '0.473230', '0.532628', '0.515284', '0.521397', '0.496007', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.493103', '0.517794', '0.527511', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (573, 1127), (548, 1158), (604, 1134), (590, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (572, 1160), (582, 1124), (604, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5132, honest: 0.5149
Round 009: test acc mean=0.5579 ± 0.0558 | min=0.4911 max=0.6865
         : test loss mean=0.6849 ± 0.0235
         : individual accs = ['0.528947', '0.508636', '0.574091', '0.670121', '0.647266', '0.515284', '0.554585', '0.605146', '0.562500', '0.491135', '0.525350', '0.584889', '0.522569', '0.596552', '0.517794', '0.686463', '0.515598', '0.509284', '0.522040', '0.518843']
         : correct/total = [(603, 1140), (589, 1158), (647, 1127), (776, 1158), (734, 1134), (590, 1145), (635, 1145), (682, 1127), (639, 1136), (554, 1128), (601, 1144), (658, 1125), (602, 1152), (692, 1160), (582, 1124), (786, 1145), (595, 1154), (576, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5306, honest: 0.5695
Round 010: test acc mean=0.5804 ± 0.0740 | min=0.5086 max=0.7346
         : test loss mean=0.6683 ± 0.0356
         : individual accs = ['0.530702', '0.508636', '0.554570', '0.727116', '0.734568', '0.517904', '0.613974', '0.623780', '0.562500', '0.604610', '0.526224', '0.620444', '0.527778', '0.619828', '0.528470', '0.728384', '0.515598', '0.516357', '0.522040', '0.524978']
         : correct/total = [(605, 1140), (589, 1158), (625, 1127), (842, 1158), (833, 1134), (593, 1145), (703, 1145), (703, 1127), (639, 1136), (682, 1128), (602, 1144), (698, 1125), (608, 1152), (719, 1160), (594, 1124), (834, 1145), (595, 1154), (584, 1131), (604, 1157), (599, 1141)]
         : compromised: 0.5387, honest: 0.5983

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.5387, Honest: 0.5983
Overall test accuracy: mean=0.5804 ± 0.0740

=== BALANCE SUMMARY ===
Node 0: acceptance=0.779
Node 1: acceptance=0.779
Node 2: acceptance=0.779
Node 3: acceptance=0.779
Node 4: acceptance=0.779
Node 5: acceptance=0.816
Node 6: acceptance=0.779
Node 7: acceptance=0.779
Node 8: acceptance=0.779
Node 9: acceptance=0.779
Node 10: acceptance=0.779
Node 11: acceptance=0.779
Node 12: acceptance=0.816
Node 13: acceptance=0.816
Node 14: acceptance=0.816
Node 15: acceptance=0.779
Node 16: acceptance=0.779
Node 17: acceptance=0.816
Node 18: acceptance=0.816
Node 19: acceptance=0.779

Performance Summary:
  - Distance computation time: 2.968s (44.6%)
  - Filtering time: 3.110s (46.7%)
  - Aggregation time: 0.581s (8.7%)
  - Total time: 6.660s
  - Mean acceptance rate: 0.790

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
