(edgedrift) mrangwala@rs-l-rhatop:~/Projects/Trust-Monitor$ python decentralized_fl_sim.py --dataset femnist --rounds 5 --local-epochs 1 --seed 987654321 --batch-size 64 --lr 0.01 --max-samples 10000 --agg coarse --attack-percentage 0.5 --attack-type directed_deviation --verbose --graph k-regular --k 32 --num-nodes 35
Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 35 clients
Users per client: 102 (with 27 clients getting +1 user)
Train partition sizes: [21379, 21329, 21288, 21243, 20794, 20346, 20690, 20761, 21128, 20375, 22599, 20872, 21087, 21364, 21281, 22440, 22559, 21849, 20779, 20335, 19894, 21226, 20880, 20651, 21065, 20022, 20242, 21678, 21032, 21502, 19372, 20573, 19550, 21897, 20381]
Test partition sizes: [2426, 2425, 2419, 2410, 2360, 2309, 2348, 2360, 2401, 2315, 2566, 2368, 2393, 2423, 2416, 2540, 2558, 2483, 2362, 2314, 2262, 2410, 2368, 2343, 2390, 2278, 2299, 2457, 2387, 2438, 2206, 2334, 2226, 2479, 2315]
  Client 0: 21379 train samples, 62 unique classes
  Client 1: 21329 train samples, 62 unique classes
  Client 2: 21288 train samples, 62 unique classes
  Client 3: 21243 train samples, 62 unique classes
  Client 4: 20794 train samples, 62 unique classes
  Client 5: 20346 train samples, 62 unique classes
  Client 6: 20690 train samples, 62 unique classes
  Client 7: 20761 train samples, 62 unique classes
  Client 8: 21128 train samples, 62 unique classes
  Client 9: 20375 train samples, 62 unique classes
  Client 10: 22599 train samples, 62 unique classes
  Client 11: 20872 train samples, 62 unique classes
  Client 12: 21087 train samples, 62 unique classes
  Client 13: 21364 train samples, 62 unique classes
  Client 14: 21281 train samples, 62 unique classes
  Client 15: 22440 train samples, 62 unique classes
  Client 16: 22559 train samples, 62 unique classes
  Client 17: 21849 train samples, 62 unique classes
  Client 18: 20779 train samples, 62 unique classes
  Client 19: 20335 train samples, 62 unique classes
  Client 20: 19894 train samples, 62 unique classes
  Client 21: 21226 train samples, 62 unique classes
  Client 22: 20880 train samples, 62 unique classes
  Client 23: 20651 train samples, 62 unique classes
  Client 24: 21065 train samples, 62 unique classes
  Client 25: 20022 train samples, 62 unique classes
  Client 26: 20242 train samples, 62 unique classes
  Client 27: 21678 train samples, 62 unique classes
  Client 28: 21032 train samples, 62 unique classes
  Client 29: 21502 train samples, 62 unique classes
  Client 30: 19372 train samples, 62 unique classes
  Client 31: 20573 train samples, 62 unique classes
  Client 32: 19550 train samples, 62 unique classes
  Client 33: 21897 train samples, 62 unique classes
  Client 34: 20381 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: k-regular, nodes: 35, edges: 560
Degree statistics: avg=32.00, min=32, max=32
k-regular with k=32 (each node has exactly 32 neighbors)
Attack: Compromised 17/35 nodes: [3, 5, 6, 10, 11, 12, 14, 16, 22, 24, 26, 27, 28, 29, 31, 32, 33]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 20:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 21:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 22:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 23:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 24:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 25:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 26:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 27:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 28:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 29:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 30:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 31:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 32:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 33:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 34:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 35×1000)
  - Theoretical speedup vs BALANCE: 34.8x
Initial test acc across nodes: mean=0.0170 ± 0.0167
Round 001: test acc mean=0.0606 ± 0.0177 | min=0.0402 max=0.1240
         : test loss mean=4.0313 ± 0.0120
         : individual accs = ['0.055235', '0.060206', '0.054155', '0.100000', '0.080085', '0.055868', '0.053237', '0.068644', '0.081216', '0.051836', '0.049493', '0.054899', '0.059758', '0.062319', '0.052566', '0.040157', '0.046130', '0.124043', '0.055885', '0.054451', '0.056145', '0.052282', '0.051520', '0.044814', '0.059833', '0.101844', '0.053502', '0.045584', '0.059908', '0.046349', '0.048957', '0.055698', '0.052111', '0.051230', '0.082073']
         : correct/total = [(134, 2426), (146, 2425), (131, 2419), (241, 2410), (189, 2360), (129, 2309), (125, 2348), (162, 2360), (195, 2401), (120, 2315), (127, 2566), (130, 2368), (143, 2393), (151, 2423), (127, 2416), (102, 2540), (118, 2558), (308, 2483), (132, 2362), (126, 2314), (127, 2262), (126, 2410), (122, 2368), (105, 2343), (143, 2390), (232, 2278), (123, 2299), (112, 2457), (143, 2387), (113, 2438), (108, 2206), (130, 2334), (116, 2226), (127, 2479), (190, 2315)]
         : compromised: 0.0557, honest: 0.0652
         : coarse stats = ['Node 0: acc_rate=0.469', 'Node 1: acc_rate=0.469', 'Node 2: acc_rate=0.469']...
Round 002: test acc mean=0.0522 ± 0.0060 | min=0.0402 max=0.0661
         : test loss mean=3.9588 ± 0.0141
         : individual accs = ['0.055235', '0.056082', '0.054155', '0.054357', '0.055932', '0.059333', '0.053237', '0.066102', '0.057893', '0.050972', '0.051052', '0.054899', '0.059758', '0.062319', '0.042632', '0.040157', '0.046130', '0.045107', '0.055885', '0.046672', '0.060124', '0.052697', '0.051520', '0.043534', '0.057322', '0.044337', '0.052197', '0.045584', '0.051529', '0.046349', '0.052584', '0.055698', '0.048967', '0.051230', '0.044492']
         : correct/total = [(134, 2426), (136, 2425), (131, 2419), (131, 2410), (132, 2360), (137, 2309), (125, 2348), (156, 2360), (139, 2401), (118, 2315), (131, 2566), (130, 2368), (143, 2393), (151, 2423), (103, 2416), (102, 2540), (118, 2558), (112, 2483), (132, 2362), (108, 2314), (136, 2262), (127, 2410), (122, 2368), (102, 2343), (137, 2390), (101, 2278), (120, 2299), (112, 2457), (123, 2387), (113, 2438), (116, 2206), (130, 2334), (109, 2226), (127, 2479), (103, 2315)]
         : compromised: 0.0519, honest: 0.0525
         : coarse stats = ['Node 0: acc_rate=0.406', 'Node 1: acc_rate=0.453', 'Node 2: acc_rate=0.469']...
Round 003: test acc mean=0.0543 ± 0.0084 | min=0.0364 max=0.0889
         : test loss mean=3.8452 ± 0.0191
         : individual accs = ['0.055235', '0.056082', '0.054155', '0.049378', '0.048729', '0.058034', '0.053237', '0.068644', '0.052062', '0.050972', '0.044817', '0.054899', '0.059758', '0.062319', '0.051738', '0.040157', '0.048475', '0.055578', '0.055885', '0.055748', '0.060124', '0.052697', '0.048142', '0.049936', '0.057322', '0.055751', '0.052197', '0.061457', '0.036447', '0.046349', '0.056664', '0.055698', '0.088949', '0.051230', '0.052700']
         : correct/total = [(134, 2426), (136, 2425), (131, 2419), (119, 2410), (115, 2360), (134, 2309), (125, 2348), (162, 2360), (125, 2401), (118, 2315), (115, 2566), (130, 2368), (143, 2393), (151, 2423), (125, 2416), (102, 2540), (124, 2558), (138, 2483), (132, 2362), (129, 2314), (136, 2262), (127, 2410), (114, 2368), (117, 2343), (137, 2390), (127, 2278), (120, 2299), (151, 2457), (87, 2387), (113, 2438), (125, 2206), (130, 2334), (198, 2226), (127, 2479), (122, 2315)]
         : compromised: 0.0540, honest: 0.0546
         : coarse stats = ['Node 0: acc_rate=0.427', 'Node 1: acc_rate=0.458', 'Node 2: acc_rate=0.469']...
Round 004: test acc mean=0.0525 ± 0.0049 | min=0.0402 max=0.0639
         : test loss mean=3.7188 ± 0.0195
         : individual accs = ['0.053586', '0.049072', '0.054155', '0.049378', '0.050424', '0.057601', '0.054514', '0.049153', '0.057893', '0.050972', '0.051052', '0.052787', '0.059758', '0.054478', '0.048013', '0.040157', '0.051603', '0.061216', '0.049534', '0.055748', '0.056145', '0.063900', '0.040963', '0.049936', '0.057322', '0.055751', '0.052197', '0.048026', '0.051529', '0.049631', '0.056664', '0.055698', '0.052111', '0.048003', '0.048380']
         : correct/total = [(130, 2426), (119, 2425), (131, 2419), (119, 2410), (119, 2360), (133, 2309), (128, 2348), (116, 2360), (139, 2401), (118, 2315), (131, 2566), (125, 2368), (143, 2393), (132, 2423), (116, 2416), (102, 2540), (132, 2558), (152, 2483), (117, 2362), (129, 2314), (127, 2262), (154, 2410), (97, 2368), (117, 2343), (137, 2390), (127, 2278), (120, 2299), (118, 2457), (123, 2387), (121, 2438), (125, 2206), (130, 2334), (116, 2226), (119, 2479), (112, 2315)]
         : compromised: 0.0518, honest: 0.0532
         : coarse stats = ['Node 0: acc_rate=0.438', 'Node 1: acc_rate=0.461', 'Node 2: acc_rate=0.469']...
Round 005: test acc mean=0.0524 ± 0.0057 | min=0.0429 max=0.0686
         : test loss mean=3.6890 ± 0.0211
         : individual accs = ['0.042869', '0.056082', '0.054155', '0.050207', '0.048729', '0.053270', '0.046422', '0.068644', '0.048313', '0.051836', '0.049493', '0.049831', '0.059758', '0.062319', '0.048013', '0.052756', '0.048475', '0.061216', '0.055038', '0.051426', '0.054819', '0.045643', '0.059966', '0.049509', '0.050628', '0.055751', '0.050022', '0.045584', '0.051529', '0.046349', '0.061650', '0.055698', '0.054358', '0.043163', '0.050108']
         : correct/total = [(104, 2426), (136, 2425), (131, 2419), (121, 2410), (115, 2360), (123, 2309), (109, 2348), (162, 2360), (116, 2401), (120, 2315), (127, 2566), (118, 2368), (143, 2393), (151, 2423), (116, 2416), (134, 2540), (124, 2558), (152, 2483), (130, 2362), (119, 2314), (124, 2262), (110, 2410), (142, 2368), (116, 2343), (121, 2390), (127, 2278), (115, 2299), (112, 2457), (123, 2387), (113, 2438), (136, 2206), (130, 2334), (121, 2226), (107, 2479), (116, 2315)]
         : compromised: 0.0508, honest: 0.0539
         : coarse stats = ['Node 0: acc_rate=0.444', 'Node 1: acc_rate=0.463', 'Node 2: acc_rate=0.469']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 35, Graph: k-regular, Aggregation: coarse
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.0508, Honest: 0.0539
Overall test accuracy: mean=0.0524 ± 0.0057

=== COARSE SUMMARY ===
Node 0: acceptance=0.444
Node 1: acceptance=0.463
Node 2: acceptance=0.469
Node 3: acceptance=0.500
Node 4: acceptance=0.500
Node 5: acceptance=0.494
Node 6: acceptance=0.456
Node 7: acceptance=0.494
Node 8: acceptance=0.487
Node 9: acceptance=0.531
Node 10: acceptance=0.537
Node 11: acceptance=0.463
Node 12: acceptance=0.494
Node 13: acceptance=0.500
Node 14: acceptance=0.475
Node 15: acceptance=0.531
Node 16: acceptance=0.369
Node 17: acceptance=0.469
Node 18: acceptance=0.469
Node 19: acceptance=0.456
Node 20: acceptance=0.500
Node 21: acceptance=0.500
Node 22: acceptance=0.469
Node 23: acceptance=0.531
Node 24: acceptance=0.419
Node 25: acceptance=0.469
Node 26: acceptance=0.425
Node 27: acceptance=0.394
Node 28: acceptance=0.487
Node 29: acceptance=0.425
Node 30: acceptance=0.500
Node 31: acceptance=0.381
Node 32: acceptance=0.481
Node 33: acceptance=0.344
Node 34: acceptance=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Sketch transfer: 0.000s (0.0%)
    - Model fetch (accepted): 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Sketching: 0.518s (96.4%)
    - Filtering: 0.001s (0.2%)
    - Aggregation: 0.018s (3.4%)
  TOTALS:
    - Total computation: 0.537s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.537s

=== PER-NODE AVERAGE TIME ===
  - Sketching: 0.400s
  - Filtering: 0.001s
  - Aggregation: 0.014s
  - Sketch transfer: 0.000s
  - Model fetch: 0.000s
  - Total per node: 0.415s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total sketching: 14.000s
  - Total filtering: 0.035s
  - Total aggregation: 0.502s
  - Total sketch transfer: 0.000s
  - Total model fetch: 0.000s
  - Grand total: 14.537s
  - Mean acceptance rate: 0.469

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 34.8x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation