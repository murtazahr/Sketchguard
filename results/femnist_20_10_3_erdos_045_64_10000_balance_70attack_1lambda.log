Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4144 ± 0.0631 | min=0.2755 max=0.5106
         : test loss mean=3.7678 ± 0.0516
         : individual accs = ['0.495397', '0.449441', '0.441068', '0.450265', '0.441701', '0.456263', '0.341283', '0.406530', '0.413982', '0.399579', '0.292542', '0.497257', '0.348400', '0.347868', '0.431885', '0.448002', '0.444739', '0.510638', '0.275465', '0.396560']
         : correct/total = [(2045, 4128), (1889, 4203), (1800, 4081), (1951, 4333), (1807, 4091), (1956, 4287), (1431, 4193), (1768, 4349), (1735, 4191), (1709, 4277), (1212, 4143), (2085, 4193), (1426, 4093), (1460, 4197), (1750, 4052), (1805, 4029), (1847, 4153), (2136, 4183), (1125, 4084), (1637, 4128)]
         : compromised: 0.4149, honest: 0.4134
Round 002: test acc mean=0.6696 ± 0.0358 | min=0.5698 max=0.7286
         : test loss mean=2.8986 ± 0.6528
         : individual accs = ['0.695252', '0.685939', '0.626317', '0.684053', '0.669274', '0.711453', '0.616742', '0.646585', '0.698163', '0.698153', '0.648322', '0.702600', '0.677254', '0.728616', '0.684847', '0.647803', '0.671563', '0.656467', '0.672870', '0.569767']
         : correct/total = [(2870, 4128), (2883, 4203), (2556, 4081), (2964, 4333), (2738, 4091), (3050, 4287), (2586, 4193), (2812, 4349), (2926, 4191), (2986, 4277), (2686, 4143), (2946, 4193), (2772, 4093), (3058, 4197), (2775, 4052), (2610, 4029), (2789, 4153), (2746, 4183), (2748, 4084), (2352, 4128)]
         : compromised: 0.6688, honest: 0.6715
Round 003: test acc mean=0.6943 ± 0.0453 | min=0.6280 max=0.7798
         : test loss mean=1.9979 ± 0.5631
         : individual accs = ['0.727229', '0.639067', '0.628032', '0.742211', '0.711562', '0.708887', '0.666110', '0.722465', '0.779766', '0.725041', '0.686942', '0.632483', '0.668458', '0.779128', '0.682379', '0.647059', '0.737539', '0.665312', '0.697111', '0.639777']
         : correct/total = [(3002, 4128), (2686, 4203), (2563, 4081), (3216, 4333), (2911, 4091), (3039, 4287), (2793, 4193), (3142, 4349), (3268, 4191), (3101, 4277), (2846, 4143), (2652, 4193), (2736, 4093), (3270, 4197), (2765, 4052), (2607, 4029), (3063, 4153), (2783, 4183), (2847, 4084), (2641, 4128)]
         : compromised: 0.6840, honest: 0.7185
Round 004: test acc mean=0.7671 ± 0.0220 | min=0.7214 max=0.8027
         : test loss mean=1.0714 ± 0.2384
         : individual accs = ['0.778585', '0.741375', '0.764273', '0.771290', '0.776338', '0.761138', '0.764131', '0.791446', '0.801718', '0.782792', '0.753560', '0.743143', '0.723919', '0.802716', '0.769250', '0.777364', '0.789791', '0.759025', '0.769099', '0.721415']
         : correct/total = [(3214, 4128), (3116, 4203), (3119, 4081), (3342, 4333), (3176, 4091), (3263, 4287), (3204, 4193), (3442, 4349), (3360, 4191), (3348, 4277), (3122, 4143), (3116, 4193), (2963, 4093), (3369, 4197), (3117, 4052), (3132, 4029), (3280, 4153), (3175, 4183), (3141, 4084), (2978, 4128)]
         : compromised: 0.7621, honest: 0.7788
Round 005: test acc mean=0.8043 ± 0.0095 | min=0.7870 max=0.8230
         : test loss mean=0.6911 ± 0.0599
         : individual accs = ['0.802326', '0.796098', '0.805195', '0.803831', '0.793449', '0.807091', '0.800143', '0.813980', '0.822000', '0.813421', '0.790973', '0.793704', '0.797459', '0.822969', '0.808490', '0.807148', '0.809535', '0.786995', '0.811459', '0.800145']
         : correct/total = [(3312, 4128), (3346, 4203), (3286, 4081), (3483, 4333), (3246, 4091), (3460, 4287), (3355, 4193), (3540, 4349), (3445, 4191), (3479, 4277), (3277, 4143), (3328, 4193), (3264, 4093), (3454, 4197), (3276, 4052), (3252, 4029), (3362, 4153), (3292, 4183), (3314, 4084), (3303, 4128)]
         : compromised: 0.8045, honest: 0.8039
Round 006: test acc mean=0.8219 ± 0.0058 | min=0.8105 max=0.8321
         : test loss mean=0.5714 ± 0.0218
         : individual accs = ['0.814196', '0.822270', '0.817447', '0.827602', '0.814471', '0.817821', '0.818030', '0.832145', '0.823908', '0.824643', '0.810524', '0.821607', '0.818715', '0.831070', '0.829714', '0.825267', '0.826872', '0.823093', '0.821743', '0.816618']
         : correct/total = [(3361, 4128), (3456, 4203), (3336, 4081), (3586, 4333), (3332, 4091), (3506, 4287), (3430, 4193), (3619, 4349), (3453, 4191), (3527, 4277), (3358, 4143), (3445, 4193), (3351, 4093), (3488, 4197), (3362, 4052), (3325, 4029), (3434, 4153), (3443, 4183), (3356, 4084), (3371, 4128)]
         : compromised: 0.8225, honest: 0.8205
Round 007: test acc mean=0.8335 ± 0.0061 | min=0.8231 max=0.8446
         : test loss mean=0.5192 ± 0.0205
         : individual accs = ['0.827277', '0.844635', '0.834109', '0.839603', '0.826693', '0.831351', '0.838063', '0.841343', '0.827010', '0.839607', '0.823075', '0.837825', '0.828976', '0.829164', '0.838351', '0.833209', '0.836985', '0.832417', '0.837414', '0.823159']
         : correct/total = [(3415, 4128), (3550, 4203), (3404, 4081), (3638, 4333), (3382, 4091), (3564, 4287), (3514, 4193), (3659, 4349), (3466, 4191), (3591, 4277), (3410, 4143), (3513, 4193), (3393, 4093), (3480, 4197), (3397, 4052), (3357, 4029), (3476, 4153), (3482, 4183), (3420, 4084), (3398, 4128)]
         : compromised: 0.8339, honest: 0.8325
Round 008: test acc mean=0.8366 ± 0.0071 | min=0.8159 max=0.8466
         : test loss mean=0.4949 ± 0.0209
         : individual accs = ['0.828488', '0.840114', '0.833619', '0.842834', '0.832559', '0.842081', '0.846649', '0.843412', '0.838463', '0.842179', '0.825489', '0.840925', '0.831175', '0.837980', '0.842794', '0.838421', '0.837226', '0.835047', '0.835700', '0.815891']
         : correct/total = [(3420, 4128), (3531, 4203), (3402, 4081), (3652, 4333), (3406, 4091), (3610, 4287), (3550, 4193), (3668, 4349), (3514, 4191), (3602, 4277), (3420, 4143), (3526, 4193), (3402, 4093), (3517, 4197), (3415, 4052), (3378, 4029), (3477, 4153), (3493, 4183), (3413, 4084), (3368, 4128)]
         : compromised: 0.8373, honest: 0.8349
Round 009: test acc mean=0.8449 ± 0.0061 | min=0.8328 max=0.8531
         : test loss mean=0.4723 ± 0.0180
         : individual accs = ['0.835514', '0.851059', '0.840970', '0.852296', '0.832804', '0.843714', '0.853088', '0.851920', '0.850394', '0.852700', '0.839006', '0.843310', '0.841192', '0.842983', '0.849951', '0.847605', '0.835781', '0.846283', '0.845005', '0.841812']
         : correct/total = [(3449, 4128), (3577, 4203), (3432, 4081), (3693, 4333), (3407, 4091), (3617, 4287), (3577, 4193), (3705, 4349), (3564, 4191), (3647, 4277), (3476, 4143), (3536, 4193), (3443, 4093), (3538, 4197), (3444, 4052), (3415, 4029), (3471, 4153), (3540, 4183), (3451, 4084), (3475, 4128)]
         : compromised: 0.8464, honest: 0.8413
Round 010: test acc mean=0.8490 ± 0.0055 | min=0.8389 max=0.8601
         : test loss mean=0.4591 ± 0.0189
         : individual accs = ['0.842054', '0.860100', '0.842931', '0.853681', '0.838915', '0.844647', '0.856427', '0.851000', '0.853734', '0.852233', '0.841178', '0.845934', '0.846079', '0.853467', '0.849457', '0.855299', '0.848062', '0.850586', '0.850147', '0.844234']
         : correct/total = [(3476, 4128), (3615, 4203), (3440, 4081), (3699, 4333), (3432, 4091), (3621, 4287), (3591, 4193), (3701, 4349), (3578, 4191), (3645, 4277), (3485, 4143), (3547, 4193), (3463, 4093), (3582, 4197), (3442, 4052), (3446, 4029), (3522, 4153), (3558, 4183), (3472, 4084), (3485, 4128)]
         : compromised: 0.8505, honest: 0.8456

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.8505, Honest: 0.8456
Overall test accuracy: mean=0.8490 ± 0.0055

=== BALANCE SUMMARY ===
Node 0: acceptance=0.333
Node 1: acceptance=0.400
Node 2: acceptance=0.375
Node 3: acceptance=0.429
Node 4: acceptance=0.333
Node 5: acceptance=0.200
Node 6: acceptance=0.250
Node 7: acceptance=0.273
Node 8: acceptance=0.143
Node 9: acceptance=0.364
Node 10: acceptance=0.250
Node 11: acceptance=0.250
Node 12: acceptance=0.333
Node 13: acceptance=0.111
Node 14: acceptance=0.286
Node 15: acceptance=0.333
Node 16: acceptance=0.286
Node 17: acceptance=0.500
Node 18: acceptance=0.250
Node 19: acceptance=0.200

Performance Summary:
  - Distance computation time: 0.815s (44.3%)
  - Filtering time: 0.902s (49.0%)
  - Aggregation time: 0.122s (6.6%)
  - Total time: 1.840s
  - Mean acceptance rate: 0.295

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
