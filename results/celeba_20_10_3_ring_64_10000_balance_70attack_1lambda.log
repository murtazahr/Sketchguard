Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5171 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.523316', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (606, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5182, honest: 0.5145
Round 002: test acc mean=0.5097 ± 0.0266 | min=0.4626 max=0.5679
         : test loss mean=9.0059 ± 6.8551
         : individual accs = ['0.534211', '0.515544', '0.491571', '0.524180', '0.497354', '0.537991', '0.471616', '0.484472', '0.562500', '0.490248', '0.525350', '0.496889', '0.512153', '0.489655', '0.462633', '0.509170', '0.517331', '0.494253', '0.509075', '0.567923']
         : correct/total = [(609, 1140), (597, 1158), (554, 1127), (607, 1158), (564, 1134), (616, 1145), (540, 1145), (546, 1127), (639, 1136), (553, 1128), (601, 1144), (559, 1125), (590, 1152), (568, 1160), (520, 1124), (583, 1145), (597, 1154), (559, 1131), (589, 1157), (648, 1141)]
         : compromised: 0.5104, honest: 0.5082
Round 003: test acc mean=0.5041 ± 0.0222 | min=0.4711 max=0.5625
         : test loss mean=0.8610 ± 0.2109
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.528497', '0.477954', '0.514410', '0.478603', '0.496007', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.481034', '0.482206', '0.517031', '0.484402', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (612, 1158), (542, 1134), (589, 1145), (548, 1145), (559, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (558, 1160), (542, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5097, honest: 0.4910
Round 004: test acc mean=0.5204 ± 0.0282 | min=0.4694 max=0.5852
         : test loss mean=6.2204 ± 5.6998
         : individual accs = ['0.528947', '0.522453', '0.469388', '0.560449', '0.520282', '0.536245', '0.585153', '0.503993', '0.562500', '0.512411', '0.547203', '0.505778', '0.472222', '0.486207', '0.517794', '0.518777', '0.502600', '0.525199', '0.503025', '0.527607']
         : correct/total = [(603, 1140), (605, 1158), (529, 1127), (649, 1158), (590, 1134), (614, 1145), (670, 1145), (568, 1127), (639, 1136), (578, 1128), (626, 1144), (569, 1125), (544, 1152), (564, 1160), (582, 1124), (594, 1145), (580, 1154), (594, 1131), (582, 1157), (602, 1141)]
         : compromised: 0.5209, honest: 0.5192
Round 005: test acc mean=0.5219 ± 0.0349 | min=0.4711 max=0.6532
         : test loss mean=0.7377 ± 0.0683
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.556344', '0.653169', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.519573', '0.517031', '0.539861', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (627, 1127), (742, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (584, 1124), (592, 1145), (623, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5238, honest: 0.5176
Round 006: test acc mean=0.5182 ± 0.0180 | min=0.4905 max=0.5625
         : test loss mean=15.1153 ± 15.8123
         : individual accs = ['0.528947', '0.508636', '0.498669', '0.530225', '0.522046', '0.514410', '0.541485', '0.502218', '0.562500', '0.505319', '0.554196', '0.517333', '0.517361', '0.490517', '0.518683', '0.517031', '0.515598', '0.508400', '0.492653', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (562, 1127), (614, 1158), (592, 1134), (589, 1145), (620, 1145), (566, 1127), (639, 1136), (570, 1128), (634, 1144), (582, 1125), (596, 1152), (569, 1160), (583, 1124), (592, 1145), (595, 1154), (575, 1131), (570, 1157), (591, 1141)]
         : compromised: 0.5168, honest: 0.5214
Round 007: test acc mean=0.5257 ± 0.0471 | min=0.4800 max=0.7227
         : test loss mean=0.7112 ± 0.0400
         : individual accs = ['0.529825', '0.508636', '0.506655', '0.528497', '0.522046', '0.514410', '0.521397', '0.499556', '0.722711', '0.499113', '0.531469', '0.524444', '0.480035', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.541054', '0.517967']
         : correct/total = [(604, 1140), (589, 1158), (571, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (563, 1127), (821, 1136), (563, 1128), (608, 1144), (590, 1125), (553, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (626, 1157), (591, 1141)]
         : compromised: 0.5297, honest: 0.5163
Round 008: test acc mean=0.5217 ± 0.0160 | min=0.4897 max=0.5660
         : test loss mean=16.5971 ± 17.1318
         : individual accs = ['0.528947', '0.508636', '0.508429', '0.536269', '0.522046', '0.529258', '0.524017', '0.503993', '0.566021', '0.515957', '0.550699', '0.524444', '0.526042', '0.489655', '0.518683', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (573, 1127), (621, 1158), (592, 1134), (606, 1145), (600, 1145), (568, 1127), (643, 1136), (582, 1128), (630, 1144), (590, 1125), (606, 1152), (568, 1160), (583, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5213, honest: 0.5229
Round 009: test acc mean=0.5294 ± 0.0585 | min=0.4916 max=0.7799
         : test loss mean=0.7093 ± 0.0455
         : individual accs = ['0.528947', '0.508636', '0.491571', '0.528497', '0.522046', '0.514410', '0.521397', '0.503106', '0.779930', '0.503546', '0.532343', '0.516444', '0.507812', '0.506897', '0.530249', '0.517031', '0.515598', '0.508400', '0.532411', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (554, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (567, 1127), (886, 1136), (568, 1128), (609, 1144), (581, 1125), (585, 1152), (588, 1160), (596, 1124), (592, 1145), (595, 1154), (575, 1131), (616, 1157), (591, 1141)]
         : compromised: 0.5344, honest: 0.5176
Round 010: test acc mean=0.5268 ± 0.0212 | min=0.4987 max=0.5836
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.498669', '0.559585', '0.522046', '0.530131', '0.566812', '0.510204', '0.583627', '0.519504', '0.552448', '0.512000', '0.522569', '0.518103', '0.521352', '0.520524', '0.515598', '0.508400', '0.519447', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (562, 1127), (648, 1158), (592, 1134), (607, 1145), (649, 1145), (575, 1127), (663, 1136), (586, 1128), (632, 1144), (576, 1125), (602, 1152), (601, 1160), (586, 1124), (596, 1145), (595, 1154), (575, 1131), (601, 1157), (591, 1141)]
         : compromised: 0.5277, honest: 0.5248

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.5277, Honest: 0.5248
Overall test accuracy: mean=0.5268 ± 0.0212

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.314s (31.4%)
  - Filtering time: 0.448s (44.7%)
  - Aggregation time: 0.239s (23.9%)
  - Total time: 1.001s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
