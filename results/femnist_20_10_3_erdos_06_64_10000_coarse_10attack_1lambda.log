Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4957 ± 0.0345 | min=0.4395 max=0.5543
         : test loss mean=3.7419 ± 0.0242
         : individual accs = ['0.554264', '0.481799', '0.515560', '0.494346', '0.439501', '0.548402', '0.489387', '0.485859', '0.536387', '0.457096', '0.460053', '0.529692', '0.463230', '0.461282', '0.513820', '0.534376', '0.470262', '0.530959', '0.498286', '0.449370']
         : correct/total = [(2288, 4128), (2025, 4203), (2104, 4081), (2142, 4333), (1798, 4091), (2351, 4287), (2052, 4193), (2113, 4349), (2248, 4191), (1955, 4277), (1906, 4143), (2221, 4193), (1896, 4093), (1936, 4197), (2082, 4052), (2153, 4029), (1953, 4153), (2221, 4183), (2035, 4084), (1855, 4128)]
         : compromised: 0.5048, honest: 0.4947
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 002: test acc mean=0.6842 ± 0.0182 | min=0.6356 max=0.7059
         : test loss mean=3.3962 ± 0.0457
         : individual accs = ['0.680959', '0.688794', '0.669934', '0.698592', '0.674896', '0.705855', '0.635583', '0.694872', '0.692436', '0.705167', '0.689838', '0.701169', '0.697777', '0.660234', '0.696693', '0.698188', '0.657115', '0.670332', '0.694417', '0.671996']
         : correct/total = [(2811, 4128), (2895, 4203), (2734, 4081), (3027, 4333), (2761, 4091), (3026, 4287), (2665, 4193), (3022, 4349), (2902, 4191), (3016, 4277), (2858, 4143), (2940, 4193), (2856, 4093), (2771, 4197), (2823, 4052), (2813, 4029), (2729, 4153), (2804, 4183), (2836, 4084), (2774, 4128)]
         : compromised: 0.6830, honest: 0.6844
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 003: test acc mean=0.7084 ± 0.0245 | min=0.6354 max=0.7362
         : test loss mean=3.1001 ± 0.0835
         : individual accs = ['0.736192', '0.716393', '0.667483', '0.727671', '0.696896', '0.635409', '0.720964', '0.732812', '0.730136', '0.690905', '0.698528', '0.734558', '0.732226', '0.694544', '0.725074', '0.714073', '0.693715', '0.711212', '0.702008', '0.707849']
         : correct/total = [(3039, 4128), (3011, 4203), (2724, 4081), (3153, 4333), (2851, 4091), (2724, 4287), (3023, 4193), (3187, 4349), (3060, 4191), (2955, 4277), (2894, 4143), (3080, 4193), (2997, 4093), (2915, 4197), (2938, 4052), (2877, 4029), (2881, 4153), (2975, 4183), (2867, 4084), (2922, 4128)]
         : compromised: 0.6650, honest: 0.7133
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 004: test acc mean=0.7047 ± 0.0258 | min=0.6424 max=0.7366
         : test loss mean=2.6338 ± 0.1203
         : individual accs = ['0.711483', '0.736617', '0.664543', '0.714517', '0.734050', '0.642407', '0.733365', '0.721775', '0.715104', '0.695347', '0.665701', '0.714763', '0.677987', '0.682869', '0.733712', '0.723008', '0.714905', '0.717428', '0.706415', '0.687984']
         : correct/total = [(2937, 4128), (3096, 4203), (2712, 4081), (3096, 4333), (3003, 4091), (2754, 4287), (3075, 4193), (3139, 4349), (2997, 4191), (2974, 4277), (2758, 4143), (2997, 4193), (2775, 4093), (2866, 4197), (2973, 4052), (2913, 4029), (2969, 4153), (3001, 4183), (2885, 4084), (2840, 4128)]
         : compromised: 0.6626, honest: 0.7094
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 005: test acc mean=0.6818 ± 0.0309 | min=0.6123 max=0.7231
         : test loss mean=2.0406 ± 0.1296
         : individual accs = ['0.713178', '0.691411', '0.616516', '0.662589', '0.711562', '0.631677', '0.702600', '0.702920', '0.686232', '0.696049', '0.667632', '0.670880', '0.699487', '0.612342', '0.675469', '0.676843', '0.721406', '0.690414', '0.723066', '0.683382']
         : correct/total = [(2944, 4128), (2906, 4203), (2516, 4081), (2871, 4333), (2911, 4091), (2708, 4287), (2946, 4193), (3057, 4349), (2876, 4191), (2977, 4277), (2766, 4143), (2813, 4193), (2863, 4093), (2570, 4197), (2737, 4052), (2727, 4029), (2996, 4153), (2888, 4183), (2953, 4084), (2821, 4128)]
         : compromised: 0.6220, honest: 0.6884
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 006: test acc mean=0.7271 ± 0.0176 | min=0.6636 max=0.7424
         : test loss mean=1.3423 ± 0.0908
         : individual accs = ['0.704942', '0.728765', '0.730213', '0.721902', '0.738206', '0.663634', '0.735989', '0.741090', '0.722023', '0.712883', '0.737388', '0.731934', '0.736379', '0.719085', '0.730257', '0.742368', '0.736094', '0.741334', '0.741675', '0.725533']
         : correct/total = [(2910, 4128), (3063, 4203), (2980, 4081), (3128, 4333), (3020, 4091), (2845, 4287), (3086, 4193), (3223, 4349), (3026, 4191), (3049, 4277), (3055, 4143), (3069, 4193), (3014, 4093), (3018, 4197), (2959, 4052), (2991, 4029), (3057, 4153), (3101, 4183), (3029, 4084), (2995, 4128)]
         : compromised: 0.6914, honest: 0.7311
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 007: test acc mean=0.7880 ± 0.0072 | min=0.7779 max=0.8012
         : test loss mean=0.8338 ± 0.0367
         : individual accs = ['0.783188', '0.786581', '0.778486', '0.790445', '0.779272', '0.788897', '0.800620', '0.793976', '0.794798', '0.790741', '0.783732', '0.780587', '0.777914', '0.778413', '0.795903', '0.792504', '0.792921', '0.787234', '0.801175', '0.781977']
         : correct/total = [(3233, 4128), (3306, 4203), (3177, 4081), (3425, 4333), (3188, 4091), (3382, 4287), (3357, 4193), (3453, 4349), (3331, 4191), (3382, 4277), (3247, 4143), (3273, 4193), (3184, 4093), (3267, 4197), (3225, 4052), (3193, 4029), (3293, 4153), (3293, 4183), (3272, 4084), (3228, 4128)]
         : compromised: 0.7837, honest: 0.7884
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 008: test acc mean=0.8153 ± 0.0077 | min=0.7980 max=0.8245
         : test loss mean=0.6115 ± 0.0229
         : individual accs = ['0.804990', '0.820604', '0.812546', '0.819294', '0.799316', '0.821320', '0.821130', '0.821108', '0.822000', '0.820669', '0.806420', '0.824469', '0.809675', '0.816297', '0.823544', '0.819806', '0.814833', '0.813053', '0.816846', '0.797965']
         : correct/total = [(3323, 4128), (3449, 4203), (3316, 4081), (3550, 4333), (3270, 4091), (3521, 4287), (3443, 4193), (3571, 4349), (3445, 4191), (3510, 4277), (3341, 4143), (3457, 4193), (3314, 4093), (3426, 4197), (3337, 4052), (3303, 4029), (3384, 4153), (3401, 4183), (3336, 4084), (3294, 4128)]
         : compromised: 0.8188, honest: 0.8149
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 009: test acc mean=0.8307 ± 0.0059 | min=0.8215 max=0.8454
         : test loss mean=0.5326 ± 0.0184
         : individual accs = ['0.824612', '0.832501', '0.825533', '0.835680', '0.824982', '0.831351', '0.835202', '0.831685', '0.845383', '0.839607', '0.824282', '0.830193', '0.827510', '0.830832', '0.836624', '0.835195', '0.829762', '0.823093', '0.829334', '0.821463']
         : correct/total = [(3404, 4128), (3499, 4203), (3369, 4081), (3621, 4333), (3375, 4091), (3564, 4287), (3502, 4193), (3617, 4349), (3543, 4191), (3591, 4277), (3415, 4143), (3481, 4193), (3387, 4093), (3487, 4197), (3390, 4052), (3365, 4029), (3446, 4153), (3443, 4183), (3387, 4084), (3391, 4128)]
         : compromised: 0.8311, honest: 0.8307
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...
Round 010: test acc mean=0.8393 ± 0.0055 | min=0.8286 max=0.8474
         : test loss mean=0.4972 ± 0.0187
         : individual accs = ['0.831395', '0.844635', '0.834354', '0.840065', '0.828648', '0.836949', '0.846888', '0.839963', '0.844667', '0.842413', '0.830558', '0.833055', '0.839482', '0.842745', '0.844274', '0.847357', '0.842042', '0.843892', '0.837659', '0.834302']
         : correct/total = [(3432, 4128), (3550, 4203), (3405, 4081), (3640, 4333), (3390, 4091), (3588, 4287), (3551, 4193), (3653, 4349), (3540, 4191), (3603, 4277), (3441, 4143), (3493, 4193), (3436, 4093), (3537, 4197), (3421, 4052), (3414, 4029), (3497, 4153), (3530, 4183), (3421, 4084), (3444, 4128)]
         : compromised: 0.8398, honest: 0.8392
         : coarse stats = ['Node 0: acc_rate=0.875', 'Node 1: acc_rate=0.909', 'Node 2: acc_rate=0.833']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.8398, Honest: 0.8392
Overall test accuracy: mean=0.8393 ± 0.0055

=== COARSE SUMMARY ===
Node 0: acceptance=0.875
Node 1: acceptance=0.909
Node 2: acceptance=0.833
Node 3: acceptance=0.875
Node 4: acceptance=0.909
Node 5: acceptance=0.933
Node 6: acceptance=0.857
Node 7: acceptance=0.929
Node 8: acceptance=0.800
Node 9: acceptance=0.923
Node 10: acceptance=0.889
Node 11: acceptance=0.857
Node 12: acceptance=0.917
Node 13: acceptance=0.923
Node 14: acceptance=0.867
Node 15: acceptance=0.909
Node 16: acceptance=0.923
Node 17: acceptance=0.889
Node 18: acceptance=0.875
Node 19: acceptance=0.875

Performance Summary:
  - Sketching time: 15.497s (97.3%)
  - Filtering time: 0.025s (0.2%)
  - Aggregation time: 0.412s (2.6%)
  - Total time: 15.934s
  - Mean acceptance rate: 0.888

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
