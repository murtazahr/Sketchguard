Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5169
Round 002: test acc mean=0.5331 ± 0.0537 | min=0.4911 max=0.6912
         : test loss mean=26.7414 ± 45.4160
         : individual accs = ['0.528947', '0.683938', '0.691216', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.563380', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.509786', '0.510044', '0.492201', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (792, 1158), (779, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (640, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (573, 1124), (584, 1145), (568, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5140, honest: 0.5413
Round 003: test acc mean=0.5244 ± 0.0447 | min=0.4774 max=0.6252
         : test loss mean=0.8114 ± 0.2186
         : individual accs = ['0.528947', '0.625216', '0.617569', '0.528497', '0.477954', '0.519651', '0.478603', '0.503993', '0.565141', '0.497340', '0.525350', '0.501333', '0.477431', '0.493103', '0.588078', '0.555459', '0.546794', '0.496905', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (724, 1158), (696, 1127), (612, 1158), (542, 1134), (595, 1145), (548, 1145), (568, 1127), (642, 1136), (561, 1128), (601, 1144), (564, 1125), (550, 1152), (572, 1160), (661, 1124), (636, 1145), (631, 1154), (562, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5089, honest: 0.5310
Round 004: test acc mean=0.5569 ± 0.0697 | min=0.4987 max=0.7808
         : test loss mean=12.1191 ± 12.1211
         : individual accs = ['0.631579', '0.576857', '0.780834', '0.678756', '0.520282', '0.514410', '0.521397', '0.527950', '0.573944', '0.534574', '0.625874', '0.498667', '0.522569', '0.506034', '0.531139', '0.521397', '0.522530', '0.509284', '0.522040', '0.517967']
         : correct/total = [(720, 1140), (668, 1158), (880, 1127), (786, 1158), (590, 1134), (589, 1145), (597, 1145), (595, 1127), (652, 1136), (603, 1128), (716, 1144), (561, 1125), (602, 1152), (587, 1160), (597, 1124), (597, 1145), (603, 1154), (576, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5176, honest: 0.5738
Round 005: test acc mean=0.6034 ± 0.1119 | min=0.4795 max=0.8891
         : test loss mean=0.7962 ± 0.4707
         : individual accs = ['0.534211', '0.755613', '0.889086', '0.557858', '0.482363', '0.637555', '0.479476', '0.740018', '0.753521', '0.752660', '0.596154', '0.559111', '0.542535', '0.505172', '0.527580', '0.587773', '0.598787', '0.565871', '0.517718', '0.484663']
         : correct/total = [(609, 1140), (875, 1158), (1002, 1127), (646, 1158), (547, 1134), (730, 1145), (549, 1145), (834, 1127), (856, 1136), (849, 1128), (682, 1144), (629, 1125), (625, 1152), (586, 1160), (593, 1124), (673, 1145), (691, 1154), (640, 1131), (599, 1157), (553, 1141)]
         : compromised: 0.5494, honest: 0.6265
Round 006: test acc mean=0.6248 ± 0.1372 | min=0.4987 max=0.8917
         : test loss mean=7.4414 ± 7.9123
         : individual accs = ['0.684211', '0.854059', '0.891748', '0.715889', '0.526455', '0.514410', '0.521397', '0.576752', '0.828345', '0.833333', '0.807692', '0.498667', '0.522569', '0.530172', '0.540036', '0.540611', '0.542461', '0.526967', '0.522904', '0.517967']
         : correct/total = [(780, 1140), (989, 1158), (1005, 1127), (829, 1158), (597, 1134), (589, 1145), (597, 1145), (650, 1127), (941, 1136), (940, 1128), (924, 1144), (561, 1125), (602, 1152), (615, 1160), (607, 1124), (619, 1145), (626, 1154), (596, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5262, honest: 0.6671
Round 007: test acc mean=0.6600 ± 0.1362 | min=0.4795 max=0.9059
         : test loss mean=0.8130 ± 0.6849
         : individual accs = ['0.681579', '0.890328', '0.905945', '0.621762', '0.499118', '0.621834', '0.479476', '0.772848', '0.874120', '0.882979', '0.715035', '0.533333', '0.584201', '0.507759', '0.548043', '0.629694', '0.641248', '0.688771', '0.610199', '0.511832']
         : correct/total = [(777, 1140), (1031, 1158), (1021, 1127), (720, 1158), (566, 1134), (712, 1145), (549, 1145), (871, 1127), (993, 1136), (996, 1128), (818, 1144), (600, 1125), (673, 1152), (589, 1160), (616, 1124), (721, 1145), (740, 1154), (779, 1131), (706, 1157), (584, 1141)]
         : compromised: 0.5935, honest: 0.6885
Round 008: test acc mean=0.6487 ± 0.1499 | min=0.4987 max=0.9042
         : test loss mean=6.2588 ± 6.3941
         : individual accs = ['0.716667', '0.900691', '0.904170', '0.784974', '0.528219', '0.514410', '0.543231', '0.648625', '0.869718', '0.863475', '0.856643', '0.498667', '0.532118', '0.521552', '0.585409', '0.551965', '0.552860', '0.558798', '0.522904', '0.518843']
         : correct/total = [(817, 1140), (1043, 1158), (1019, 1127), (909, 1158), (599, 1134), (589, 1145), (622, 1145), (731, 1127), (988, 1136), (974, 1128), (980, 1144), (561, 1125), (613, 1152), (605, 1160), (658, 1124), (632, 1145), (638, 1154), (632, 1131), (605, 1157), (592, 1141)]
         : compromised: 0.5392, honest: 0.6956
Round 009: test acc mean=0.6649 ± 0.1464 | min=0.4803 max=0.9033
         : test loss mean=0.8197 ± 0.7339
         : individual accs = ['0.783333', '0.896373', '0.903283', '0.688256', '0.517637', '0.582533', '0.480349', '0.842946', '0.875880', '0.883865', '0.756119', '0.555556', '0.566840', '0.530172', '0.527580', '0.561572', '0.567591', '0.597701', '0.675022', '0.505697']
         : correct/total = [(893, 1140), (1038, 1158), (1018, 1127), (797, 1158), (587, 1134), (667, 1145), (550, 1145), (950, 1127), (995, 1136), (997, 1128), (865, 1144), (625, 1125), (653, 1152), (615, 1160), (593, 1124), (643, 1145), (655, 1154), (676, 1131), (781, 1157), (577, 1141)]
         : compromised: 0.5800, honest: 0.7013
Round 010: test acc mean=0.6624 ± 0.1474 | min=0.4987 max=0.9042
         : test loss mean=5.2310 ± 5.4534
         : individual accs = ['0.721053', '0.895509', '0.904170', '0.808290', '0.533510', '0.514410', '0.537991', '0.714286', '0.878521', '0.881206', '0.839161', '0.498667', '0.536458', '0.532759', '0.617438', '0.600873', '0.605719', '0.585323', '0.522040', '0.519720']
         : correct/total = [(822, 1140), (1037, 1158), (1019, 1127), (936, 1158), (605, 1134), (589, 1145), (616, 1145), (805, 1127), (998, 1136), (994, 1128), (960, 1144), (561, 1125), (618, 1152), (618, 1160), (694, 1124), (688, 1145), (699, 1154), (662, 1131), (604, 1157), (593, 1141)]
         : compromised: 0.5514, honest: 0.7099

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 30.0% compromised
Final accuracy - Compromised: 0.5514, Honest: 0.7099
Overall test accuracy: mean=0.6624 ± 0.1474

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.320s (31.6%)
  - Filtering time: 0.455s (45.0%)
  - Aggregation time: 0.238s (23.4%)
  - Total time: 1.013s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
