Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 002: test acc mean=0.5023 ± 0.0215 | min=0.4718 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.490501', '0.506655', '0.494819', '0.471781', '0.487336', '0.522271', '0.496894', '0.562500', '0.508865', '0.474650', '0.501333', '0.522569', '0.506897', '0.486655', '0.482969', '0.514731', '0.481874', '0.483146', '0.519720']
         : correct/total = [(603, 1140), (568, 1158), (571, 1127), (573, 1158), (535, 1134), (558, 1145), (598, 1145), (560, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (602, 1152), (588, 1160), (547, 1124), (553, 1145), (594, 1154), (545, 1131), (559, 1157), (593, 1141)]
         : compromised: 0.5006, honest: 0.5047
Round 003: test acc mean=0.4981 ± 0.0267 | min=0.4314 max=0.5227
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.509499', '0.506655', '0.502591', '0.481481', '0.514410', '0.518777', '0.503993', '0.441901', '0.511525', '0.506119', '0.522667', '0.431424', '0.506897', '0.517794', '0.452402', '0.506932', '0.517241', '0.521175', '0.517090']
         : correct/total = [(537, 1140), (590, 1158), (571, 1127), (582, 1158), (546, 1134), (589, 1145), (594, 1145), (568, 1127), (502, 1136), (577, 1128), (579, 1144), (588, 1125), (497, 1152), (588, 1160), (582, 1124), (518, 1145), (585, 1154), (585, 1131), (603, 1157), (590, 1141)]
         : compromised: 0.4954, honest: 0.5021
Round 004: test acc mean=0.4992 ± 0.0218 | min=0.4516 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.461404', '0.508636', '0.504880', '0.528497', '0.521164', '0.506550', '0.489956', '0.488909', '0.451585', '0.508865', '0.474650', '0.497778', '0.522569', '0.506897', '0.517794', '0.514410', '0.498267', '0.506631', '0.456353', '0.517967']
         : correct/total = [(526, 1140), (589, 1158), (569, 1127), (612, 1158), (591, 1134), (580, 1145), (561, 1145), (551, 1127), (513, 1136), (574, 1128), (543, 1144), (560, 1125), (602, 1152), (588, 1160), (582, 1124), (589, 1145), (575, 1154), (573, 1131), (528, 1157), (591, 1141)]
         : compromised: 0.5019, honest: 0.4951
Round 005: test acc mean=0.4991 ± 0.0225 | min=0.4706 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.507772', '0.513753', '0.470639', '0.478836', '0.519651', '0.477729', '0.498669', '0.562500', '0.489362', '0.474650', '0.498667', '0.475694', '0.506897', '0.508897', '0.482096', '0.479203', '0.501326', '0.522040', '0.483786']
         : correct/total = [(603, 1140), (588, 1158), (579, 1127), (545, 1158), (543, 1134), (595, 1145), (547, 1145), (562, 1127), (639, 1136), (552, 1128), (543, 1144), (561, 1125), (548, 1152), (588, 1160), (572, 1124), (552, 1145), (553, 1154), (567, 1131), (604, 1157), (552, 1141)]
         : compromised: 0.5058, honest: 0.4889
Round 006: test acc mean=0.4966 ± 0.0177 | min=0.4681 max=0.5405
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.490501', '0.493345', '0.490501', '0.477954', '0.495197', '0.468122', '0.511979', '0.540493', '0.484043', '0.474650', '0.515556', '0.499132', '0.506897', '0.502669', '0.503930', '0.499133', '0.524315', '0.499568', '0.482033']
         : correct/total = [(537, 1140), (568, 1158), (556, 1127), (568, 1158), (542, 1134), (567, 1145), (536, 1145), (577, 1127), (614, 1136), (546, 1128), (543, 1144), (580, 1125), (575, 1152), (588, 1160), (565, 1124), (577, 1145), (576, 1154), (593, 1131), (578, 1157), (550, 1141)]
         : compromised: 0.5052, honest: 0.4836
Round 007: test acc mean=0.4988 ± 0.0208 | min=0.4619 max=0.5475
         : test loss mean=nan ± nan
         : individual accs = ['0.504386', '0.508636', '0.503106', '0.491364', '0.477954', '0.466376', '0.515284', '0.495120', '0.547535', '0.490248', '0.474650', '0.500444', '0.522569', '0.506897', '0.487544', '0.517031', '0.461872', '0.508400', '0.522040', '0.475022']
         : correct/total = [(575, 1140), (589, 1158), (567, 1127), (569, 1158), (542, 1134), (534, 1145), (590, 1145), (558, 1127), (622, 1136), (553, 1128), (543, 1144), (563, 1125), (602, 1152), (588, 1160), (548, 1124), (592, 1145), (533, 1154), (575, 1131), (604, 1157), (542, 1141)]
         : compromised: 0.5068, honest: 0.4868
Round 008: test acc mean=0.5021 ± 0.0228 | min=0.4629 max=0.5424
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.524180', '0.527950', '0.472366', '0.476190', '0.513537', '0.542358', '0.513753', '0.484155', '0.481383', '0.509615', '0.505778', '0.522569', '0.506897', '0.482206', '0.462882', '0.485269', '0.516357', '0.468453', '0.517967']
         : correct/total = [(603, 1140), (607, 1158), (595, 1127), (547, 1158), (540, 1134), (588, 1145), (621, 1145), (579, 1127), (550, 1136), (543, 1128), (583, 1144), (569, 1125), (602, 1152), (588, 1160), (542, 1124), (530, 1145), (560, 1154), (584, 1131), (542, 1157), (591, 1141)]
         : compromised: 0.4989, honest: 0.5069
Round 009: test acc mean=0.4962 ± 0.0153 | min=0.4671 max=0.5214
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.487910', '0.492458', '0.514680', '0.504409', '0.507424', '0.521397', '0.495120', '0.509683', '0.491135', '0.486888', '0.472000', '0.504340', '0.506897', '0.467082', '0.482969', '0.485269', '0.508400', '0.516854', '0.498685']
         : correct/total = [(537, 1140), (565, 1158), (555, 1127), (596, 1158), (572, 1134), (581, 1145), (597, 1145), (558, 1127), (579, 1136), (554, 1128), (557, 1144), (531, 1125), (581, 1152), (588, 1160), (525, 1124), (553, 1145), (560, 1154), (575, 1131), (598, 1157), (569, 1141)]
         : compromised: 0.4976, honest: 0.4942
Round 010: test acc mean=0.5028 ± 0.0136 | min=0.4786 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.526316', '0.497409', '0.493345', '0.528497', '0.507055', '0.498690', '0.478603', '0.503993', '0.501761', '0.490248', '0.493007', '0.493333', '0.517361', '0.506897', '0.509786', '0.516157', '0.486135', '0.499558', '0.522040', '0.485539']
         : correct/total = [(600, 1140), (576, 1158), (556, 1127), (612, 1158), (575, 1134), (571, 1145), (548, 1145), (568, 1127), (570, 1136), (553, 1128), (564, 1144), (555, 1125), (596, 1152), (588, 1160), (573, 1124), (591, 1145), (561, 1154), (565, 1131), (604, 1157), (554, 1141)]
         : compromised: 0.5071, honest: 0.4964

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: krum
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.5071, Honest: 0.4964
Overall test accuracy: mean=0.5028 ± 0.0136
