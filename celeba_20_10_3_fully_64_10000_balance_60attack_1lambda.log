Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5135 ± 0.0181 | min=0.4693 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.513345', '0.517031', '0.515598', '0.508400', '0.469317', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (577, 1124), (592, 1145), (595, 1154), (575, 1131), (543, 1157), (591, 1141)]
         : compromised: 0.5120, honest: 0.5158
Round 002: test acc mean=0.5143 ± 0.0304 | min=0.4715 max=0.5886
         : test loss mean=3.3864 ± 2.0451
         : individual accs = ['0.487719', '0.517271', '0.505768', '0.471503', '0.482363', '0.588646', '0.576419', '0.519965', '0.507042', '0.523050', '0.529720', '0.504889', '0.509549', '0.496552', '0.482206', '0.531878', '0.517331', '0.556145', '0.477960', '0.500438']
         : correct/total = [(556, 1140), (599, 1158), (570, 1127), (546, 1158), (547, 1134), (674, 1145), (660, 1145), (586, 1127), (576, 1136), (590, 1128), (606, 1144), (568, 1125), (587, 1152), (576, 1160), (542, 1124), (609, 1145), (597, 1154), (629, 1131), (553, 1157), (571, 1141)]
         : compromised: 0.5125, honest: 0.5171
Round 003: test acc mean=0.5155 ± 0.0162 | min=0.4911 max=0.5625
         : test loss mean=0.7037 ± 0.0169
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.491703', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.529258', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (563, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (606, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5178, honest: 0.5121
Round 004: test acc mean=0.5660 ± 0.0165 | min=0.5285 max=0.5895
         : test loss mean=13.3796 ± 5.2344
         : individual accs = ['0.565789', '0.528497', '0.553682', '0.588946', '0.581129', '0.559825', '0.580786', '0.579414', '0.563380', '0.589539', '0.549825', '0.560000', '0.565972', '0.577586', '0.576512', '0.555459', '0.543328', '0.546419', '0.589455', '0.565294']
         : correct/total = [(645, 1140), (612, 1158), (624, 1127), (682, 1158), (659, 1134), (641, 1145), (665, 1145), (653, 1127), (640, 1136), (665, 1128), (629, 1144), (630, 1125), (652, 1152), (670, 1160), (648, 1124), (636, 1145), (627, 1154), (618, 1131), (682, 1157), (645, 1141)]
         : compromised: 0.5638, honest: 0.5694
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.6974 ± 0.0061
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 006: test acc mean=0.6156 ± 0.0200 | min=0.5644 max=0.6442
         : test loss mean=12.4879 ± 3.3328
         : individual accs = ['0.619298', '0.621762', '0.637977', '0.644214', '0.564374', '0.606987', '0.629694', '0.621118', '0.602993', '0.630319', '0.610140', '0.599111', '0.604167', '0.610345', '0.596085', '0.620087', '0.583189', '0.637489', '0.639585', '0.633655']
         : correct/total = [(706, 1140), (720, 1158), (719, 1127), (746, 1158), (640, 1134), (695, 1145), (721, 1145), (700, 1127), (685, 1136), (711, 1128), (698, 1144), (674, 1125), (696, 1152), (708, 1160), (670, 1124), (710, 1145), (673, 1154), (721, 1131), (740, 1157), (723, 1141)]
         : compromised: 0.6184, honest: 0.6115
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.6979 ± 0.0057
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 008: test acc mean=0.6571 ± 0.0237 | min=0.6138 max=0.7055
         : test loss mean=9.3749 ± 2.0005
         : individual accs = ['0.664035', '0.679620', '0.671695', '0.705527', '0.613757', '0.617467', '0.649782', '0.641526', '0.619718', '0.664894', '0.687063', '0.660444', '0.635417', '0.634483', '0.684164', '0.655022', '0.662045', '0.662246', '0.669836', '0.663453']
         : correct/total = [(757, 1140), (787, 1158), (757, 1127), (817, 1158), (696, 1134), (707, 1145), (744, 1145), (723, 1127), (704, 1136), (750, 1128), (786, 1144), (743, 1125), (732, 1152), (736, 1160), (769, 1124), (750, 1145), (764, 1154), (749, 1131), (775, 1157), (757, 1141)]
         : compromised: 0.6580, honest: 0.6558
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7029 ± 0.0065
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 010: test acc mean=0.6644 ± 0.0273 | min=0.6023 max=0.7074
         : test loss mean=8.9007 ± 1.9386
         : individual accs = ['0.664035', '0.689983', '0.674357', '0.619171', '0.602293', '0.680349', '0.707424', '0.651287', '0.659331', '0.654255', '0.652972', '0.651556', '0.666667', '0.663793', '0.701957', '0.675983', '0.655113', '0.698497', '0.695765', '0.622261']
         : correct/total = [(757, 1140), (799, 1158), (760, 1127), (717, 1158), (683, 1134), (779, 1145), (810, 1145), (734, 1127), (749, 1136), (738, 1128), (747, 1144), (733, 1125), (768, 1152), (770, 1160), (789, 1124), (774, 1145), (756, 1154), (790, 1131), (805, 1157), (710, 1141)]
         : compromised: 0.6731, honest: 0.6512

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.6731, Honest: 0.6512
Overall test accuracy: mean=0.6644 ± 0.0273

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 2.982s (43.4%)
  - Filtering time: 3.136s (45.6%)
  - Aggregation time: 0.755s (11.0%)
  - Total time: 6.873s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
