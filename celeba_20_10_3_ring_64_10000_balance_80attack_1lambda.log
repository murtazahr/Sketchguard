Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5171 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.523316', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (606, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5170, honest: 0.5176
Round 002: test acc mean=0.4849 ± 0.0122 | min=0.4507 max=0.5067
         : test loss mean=9.8299 ± 9.3643
         : individual accs = ['0.470175', '0.494819', '0.506655', '0.469775', '0.489418', '0.495197', '0.478603', '0.496007', '0.450704', '0.476950', '0.485140', '0.498667', '0.479167', '0.493966', '0.485765', '0.484716', '0.484402', '0.494253', '0.477960', '0.485539']
         : correct/total = [(536, 1140), (573, 1158), (571, 1127), (544, 1158), (555, 1134), (567, 1145), (548, 1145), (559, 1127), (512, 1136), (538, 1128), (555, 1144), (561, 1125), (552, 1152), (573, 1160), (546, 1124), (555, 1145), (559, 1154), (559, 1131), (553, 1157), (554, 1141)]
         : compromised: 0.4849, honest: 0.4850
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1540 ± 0.3447
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 004: test acc mean=0.5289 ± 0.0445 | min=0.4747 max=0.6419
         : test loss mean=4.6269 ± 4.2718
         : individual accs = ['0.475439', '0.585492', '0.520852', '0.548359', '0.512346', '0.641921', '0.551965', '0.518190', '0.578345', '0.515071', '0.474650', '0.508444', '0.491319', '0.500862', '0.488434', '0.570306', '0.484402', '0.556145', '0.477096', '0.577564']
         : correct/total = [(542, 1140), (678, 1158), (587, 1127), (635, 1158), (581, 1134), (735, 1145), (632, 1145), (584, 1127), (657, 1136), (581, 1128), (543, 1144), (572, 1125), (566, 1152), (581, 1160), (549, 1124), (653, 1145), (559, 1154), (629, 1131), (552, 1157), (659, 1141)]
         : compromised: 0.5367, honest: 0.4976
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7708 ± 0.0511
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 006: test acc mean=0.5516 ± 0.0618 | min=0.4747 max=0.7306
         : test loss mean=11.3518 ± 11.9062
         : individual accs = ['0.502632', '0.511226', '0.566992', '0.500000', '0.492945', '0.558952', '0.695197', '0.564330', '0.730634', '0.537234', '0.474650', '0.603556', '0.541667', '0.557759', '0.547153', '0.558952', '0.503466', '0.541114', '0.521175', '0.523225']
         : correct/total = [(573, 1140), (592, 1158), (639, 1127), (579, 1158), (559, 1134), (640, 1145), (796, 1145), (636, 1127), (830, 1136), (606, 1128), (543, 1144), (679, 1125), (624, 1152), (647, 1160), (615, 1124), (640, 1145), (581, 1154), (612, 1131), (603, 1157), (597, 1141)]
         : compromised: 0.5606, honest: 0.5158
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8068 ± 0.0682
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 008: test acc mean=0.6081 ± 0.0758 | min=0.4921 max=0.7773
         : test loss mean=9.3926 ± 7.6224
         : individual accs = ['0.577193', '0.575993', '0.598935', '0.700345', '0.582892', '0.728384', '0.755459', '0.612245', '0.777289', '0.629433', '0.492133', '0.594667', '0.559896', '0.596552', '0.558719', '0.519651', '0.625650', '0.509284', '0.603284', '0.563541']
         : correct/total = [(658, 1140), (667, 1158), (675, 1127), (811, 1158), (661, 1134), (834, 1145), (865, 1145), (690, 1127), (883, 1136), (710, 1128), (563, 1144), (669, 1125), (645, 1152), (692, 1160), (628, 1124), (595, 1145), (722, 1154), (576, 1131), (698, 1157), (643, 1141)]
         : compromised: 0.6102, honest: 0.5995
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8291 ± 0.0643
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 010: test acc mean=0.6768 ± 0.0679 | min=0.5842 max=0.7974
         : test loss mean=7.6038 ± 5.6425
         : individual accs = ['0.609649', '0.775475', '0.615794', '0.751295', '0.617284', '0.793886', '0.797380', '0.629104', '0.773768', '0.671099', '0.684441', '0.657778', '0.584201', '0.615517', '0.649466', '0.692576', '0.663778', '0.609195', '0.614520', '0.730061']
         : correct/total = [(695, 1140), (898, 1158), (694, 1127), (870, 1158), (700, 1134), (909, 1145), (913, 1145), (709, 1127), (879, 1136), (757, 1128), (783, 1144), (740, 1125), (673, 1152), (714, 1160), (730, 1124), (793, 1145), (766, 1154), (689, 1131), (711, 1157), (833, 1141)]
         : compromised: 0.6885, honest: 0.6300

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 80.0% compromised
Final accuracy - Compromised: 0.6885, Honest: 0.6300
Overall test accuracy: mean=0.6768 ± 0.0679

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.317s (31.4%)
  - Filtering time: 0.452s (44.7%)
  - Aggregation time: 0.241s (23.8%)
  - Total time: 1.010s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
