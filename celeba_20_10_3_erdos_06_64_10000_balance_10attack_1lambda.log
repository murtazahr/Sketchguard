Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5141 ± 0.0169 | min=0.4780 max=0.5616
         : test loss mean=1.6949 ± 1.1548
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.526770', '0.522046', '0.514410', '0.521397', '0.503993', '0.561620', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.518683', '0.517031', '0.515598', '0.508400', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (610, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (638, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (583, 1124), (592, 1145), (595, 1154), (575, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5145
Round 002: test acc mean=0.5214 ± 0.0209 | min=0.4911 max=0.5712
         : test loss mean=0.9233 ± 0.4079
         : individual accs = ['0.528947', '0.508636', '0.496894', '0.525043', '0.522046', '0.514410', '0.492576', '0.503993', '0.562500', '0.491135', '0.521853', '0.536000', '0.522569', '0.506897', '0.551601', '0.571179', '0.515598', '0.508400', '0.529818', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (560, 1127), (608, 1158), (592, 1134), (589, 1145), (564, 1145), (568, 1127), (639, 1136), (554, 1128), (597, 1144), (603, 1125), (602, 1152), (588, 1160), (620, 1124), (654, 1145), (595, 1154), (575, 1131), (613, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5226
Round 003: test acc mean=0.5111 ± 0.0164 | min=0.4569 max=0.5289
         : test loss mean=0.7779 ± 0.0735
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.456866', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (519, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5111
Round 004: test acc mean=0.5332 ± 0.0283 | min=0.4674 max=0.5818
         : test loss mean=0.9266 ± 0.6358
         : individual accs = ['0.535088', '0.569085', '0.492458', '0.535406', '0.580247', '0.544978', '0.518777', '0.507542', '0.467430', '0.513298', '0.538462', '0.566222', '0.523438', '0.521552', '0.524021', '0.564192', '0.520797', '0.581786', '0.520311', '0.539877']
         : correct/total = [(610, 1140), (659, 1158), (555, 1127), (620, 1158), (658, 1134), (624, 1145), (594, 1145), (572, 1127), (531, 1136), (579, 1128), (616, 1144), (637, 1125), (603, 1152), (605, 1160), (589, 1124), (646, 1145), (601, 1154), (658, 1131), (602, 1157), (616, 1141)]
         : compromised: 0.5333, honest: 0.5332
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9878 ± 0.1191
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 006: test acc mean=0.5166 ± 0.0149 | min=0.4911 max=0.5616
         : test loss mean=1.4885 ± 0.8287
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.561620', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.522271', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (638, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (598, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5172
Round 007: test acc mean=0.5183 ± 0.0217 | min=0.4911 max=0.6012
         : test loss mean=0.8078 ± 0.0597
         : individual accs = ['0.528947', '0.508636', '0.494232', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.601232', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (557, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (683, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5192
Round 008: test acc mean=0.5462 ± 0.0355 | min=0.4933 max=0.6390
         : test loss mean=0.8659 ± 0.3177
         : individual accs = ['0.528947', '0.563040', '0.493345', '0.532815', '0.531746', '0.551965', '0.521397', '0.569654', '0.562500', '0.512411', '0.638986', '0.502222', '0.592014', '0.601724', '0.530249', '0.517031', '0.558925', '0.572060', '0.525497', '0.517967']
         : correct/total = [(603, 1140), (652, 1158), (556, 1127), (617, 1158), (603, 1134), (632, 1145), (597, 1145), (642, 1127), (639, 1136), (578, 1128), (731, 1144), (565, 1125), (682, 1152), (698, 1160), (596, 1124), (592, 1145), (645, 1154), (647, 1131), (608, 1157), (591, 1141)]
         : compromised: 0.5768, honest: 0.5428
Round 009: test acc mean=0.5165 ± 0.0148 | min=0.4933 max=0.5625
         : test loss mean=0.8926 ± 0.0854
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.493794', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (557, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5171
Round 010: test acc mean=0.6815 ± 0.0979 | min=0.5111 max=0.8481
         : test loss mean=0.6126 ± 0.1730
         : individual accs = ['0.553509', '0.743523', '0.511091', '0.605354', '0.676367', '0.843668', '0.557205', '0.798580', '0.563380', '0.764184', '0.695804', '0.640889', '0.848090', '0.712069', '0.657473', '0.787773', '0.733969', '0.658709', '0.713915', '0.564417']
         : correct/total = [(631, 1140), (861, 1158), (576, 1127), (701, 1158), (767, 1134), (966, 1145), (638, 1145), (900, 1127), (640, 1136), (862, 1128), (796, 1144), (721, 1125), (977, 1152), (826, 1160), (739, 1124), (902, 1145), (847, 1154), (745, 1131), (826, 1157), (644, 1141)]
         : compromised: 0.7779, honest: 0.6708

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.7779, Honest: 0.6708
Overall test accuracy: mean=0.6815 ± 0.0979

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.947s (42.9%)
  - Filtering time: 2.086s (45.9%)
  - Aggregation time: 0.508s (11.2%)
  - Total time: 4.541s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
