Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.507759', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (589, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5161, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 002: test acc mean=0.6518 ± 0.1693 | min=0.4820 max=0.9021
         : test loss mean=9.5143 ± 38.8756
         : individual accs = ['0.737719', '0.508636', '0.493345', '0.879965', '0.602293', '0.514410', '0.890830', '0.873114', '0.832746', '0.491135', '0.525350', '0.849778', '0.522569', '0.864655', '0.517794', '0.517031', '0.902080', '0.508400', '0.522040', '0.482033']
         : correct/total = [(841, 1140), (589, 1158), (556, 1127), (1019, 1158), (683, 1134), (589, 1145), (1020, 1145), (984, 1127), (946, 1136), (554, 1128), (601, 1144), (956, 1125), (602, 1152), (1003, 1160), (582, 1124), (592, 1145), (1041, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.6200, honest: 0.7788
         : coarse stats = ['Node 0: acc_rate=0.167', 'Node 1: acc_rate=0.400', 'Node 2: acc_rate=0.250']...
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=0.444', 'Node 1: acc_rate=0.600', 'Node 2: acc_rate=0.500']...
Round 004: test acc mean=0.5048 ± 0.0234 | min=0.4375 max=0.5472
         : test loss mean=1334.1821 ± 1035.3326
         : individual accs = ['0.528947', '0.508636', '0.496894', '0.533679', '0.491182', '0.498690', '0.511790', '0.517303', '0.437500', '0.493794', '0.547203', '0.497778', '0.521701', '0.496552', '0.517794', '0.472489', '0.483536', '0.499558', '0.523768', '0.517090']
         : correct/total = [(603, 1140), (589, 1158), (560, 1127), (618, 1158), (557, 1134), (571, 1145), (586, 1145), (583, 1127), (497, 1136), (557, 1128), (626, 1144), (560, 1125), (601, 1152), (576, 1160), (582, 1124), (541, 1145), (558, 1154), (565, 1131), (606, 1157), (590, 1141)]
         : compromised: 0.5047, honest: 0.5052
         : coarse stats = ['Node 0: acc_rate=0.562', 'Node 1: acc_rate=0.675', 'Node 2: acc_rate=0.625']...
Round 005: test acc mean=0.4991 ± 0.0221 | min=0.4507 max=0.5241
         : test loss mean=600.1099 ± 416.4190
         : individual accs = ['0.519298', '0.508636', '0.479148', '0.472366', '0.522046', '0.521397', '0.460262', '0.491571', '0.450704', '0.510638', '0.490385', '0.523556', '0.517361', '0.493103', '0.515125', '0.482969', '0.515598', '0.508400', '0.475367', '0.524102']
         : correct/total = [(592, 1140), (589, 1158), (540, 1127), (547, 1158), (592, 1134), (597, 1145), (527, 1145), (554, 1127), (512, 1136), (576, 1128), (561, 1144), (589, 1125), (596, 1152), (572, 1160), (579, 1124), (553, 1145), (595, 1154), (575, 1131), (550, 1157), (598, 1141)]
         : compromised: 0.4958, honest: 0.5121
         : coarse stats = ['Node 0: acc_rate=0.633', 'Node 1: acc_rate=0.720', 'Node 2: acc_rate=0.700']...
Round 006: test acc mean=0.5001 ± 0.0244 | min=0.4401 max=0.5492
         : test loss mean=572.3505 ± 470.3277
         : individual accs = ['0.500000', '0.549223', '0.469388', '0.512953', '0.487654', '0.514410', '0.504803', '0.513753', '0.440141', '0.532801', '0.479021', '0.489778', '0.522569', '0.488793', '0.501779', '0.482969', '0.489601', '0.519010', '0.477096', '0.525855']
         : correct/total = [(570, 1140), (636, 1158), (529, 1127), (594, 1158), (553, 1134), (589, 1145), (578, 1145), (579, 1127), (500, 1136), (601, 1128), (548, 1144), (551, 1125), (602, 1152), (567, 1160), (564, 1124), (553, 1145), (565, 1154), (587, 1131), (552, 1157), (600, 1141)]
         : compromised: 0.5007, honest: 0.4978
         : coarse stats = ['Node 0: acc_rate=0.681', 'Node 1: acc_rate=0.767', 'Node 2: acc_rate=0.750']...
Round 007: test acc mean=0.5044 ± 0.0216 | min=0.4375 max=0.5289
         : test loss mean=381187.5143 ± 1661550.4773
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.528497', '0.522046', '0.485590', '0.478603', '0.503993', '0.437500', '0.500887', '0.525350', '0.501333', '0.522569', '0.493103', '0.517794', '0.515284', '0.515598', '0.491600', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (612, 1158), (592, 1134), (556, 1145), (548, 1145), (568, 1127), (497, 1136), (565, 1128), (601, 1144), (564, 1125), (602, 1152), (572, 1160), (582, 1124), (590, 1145), (595, 1154), (556, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5011, honest: 0.5176
         : coarse stats = ['Node 0: acc_rate=0.595', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.679']...
Round 008: test acc mean=0.5099 ± 0.0278 | min=0.4375 max=0.5636
         : test loss mean=1199.1200 ± 5223.5907
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.529361', '0.543210', '0.485590', '0.478603', '0.551020', '0.437500', '0.510638', '0.534091', '0.563556', '0.477431', '0.500000', '0.508897', '0.508297', '0.515598', '0.491600', '0.501296', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (613, 1158), (616, 1134), (556, 1145), (548, 1145), (621, 1127), (497, 1136), (576, 1128), (611, 1144), (634, 1125), (550, 1152), (580, 1160), (572, 1124), (582, 1145), (595, 1154), (556, 1131), (580, 1157), (591, 1141)]
         : compromised: 0.5038, honest: 0.5347
         : coarse stats = ['Node 0: acc_rate=0.542', 'Node 1: acc_rate=0.662', 'Node 2: acc_rate=0.625']...
Round 009: test acc mean=0.5334 ± 0.0342 | min=0.4639 max=0.5904
         : test loss mean=868.4281 ± 3782.3858
         : individual accs = ['0.529825', '0.544905', '0.520852', '0.532815', '0.567901', '0.499563', '0.590393', '0.561668', '0.463908', '0.555851', '0.555070', '0.565333', '0.495660', '0.531897', '0.565836', '0.503057', '0.487002', '0.495137', '0.584270', '0.517967']
         : correct/total = [(604, 1140), (631, 1158), (587, 1127), (617, 1158), (644, 1134), (572, 1145), (676, 1145), (633, 1127), (527, 1136), (627, 1128), (635, 1144), (636, 1125), (571, 1152), (617, 1160), (636, 1124), (576, 1145), (562, 1154), (560, 1131), (676, 1157), (591, 1141)]
         : compromised: 0.5327, honest: 0.5366
         : coarse stats = ['Node 0: acc_rate=0.500', 'Node 1: acc_rate=0.633', 'Node 2: acc_rate=0.583']...
Round 010: test acc mean=0.5311 ± 0.0236 | min=0.5084 max=0.5956
         : test loss mean=199.7464 ± 867.6590
         : individual accs = ['0.535088', '0.571675', '0.508429', '0.512090', '0.561728', '0.520524', '0.533624', '0.554570', '0.535211', '0.508865', '0.513112', '0.595556', '0.509549', '0.530172', '0.516904', '0.509170', '0.517331', '0.518126', '0.549697', '0.519720']
         : correct/total = [(610, 1140), (662, 1158), (573, 1127), (593, 1158), (637, 1134), (596, 1145), (611, 1145), (625, 1127), (608, 1136), (574, 1128), (587, 1144), (670, 1125), (587, 1152), (615, 1160), (581, 1124), (583, 1145), (597, 1154), (586, 1131), (636, 1157), (593, 1141)]
         : compromised: 0.5283, honest: 0.5422
         : coarse stats = ['Node 0: acc_rate=0.467', 'Node 1: acc_rate=0.610', 'Node 2: acc_rate=0.550']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.5283, Honest: 0.5422
Overall test accuracy: mean=0.5311 ± 0.0236

=== COARSE SUMMARY ===
Node 0: acceptance=0.467
Node 1: acceptance=0.610
Node 2: acceptance=0.550
Node 3: acceptance=0.486
Node 4: acceptance=0.533
Node 5: acceptance=0.520
Node 6: acceptance=0.450
Node 7: acceptance=0.455
Node 8: acceptance=0.486
Node 9: acceptance=0.545
Node 10: acceptance=0.550
Node 11: acceptance=0.442
Node 12: acceptance=0.517
Node 13: acceptance=0.467
Node 14: acceptance=0.500
Node 15: acceptance=0.511
Node 16: acceptance=0.486
Node 17: acceptance=0.588
Node 18: acceptance=0.533
Node 19: acceptance=0.500

Performance Summary:
  - Sketching time: 0.049s (10.1%)
  - Filtering time: 0.007s (1.5%)
  - Aggregation time: 0.433s (88.4%)
  - Total time: 0.490s
  - Mean acceptance rate: 0.510

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
