Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5110 ± 0.0152 | min=0.4665 max=0.5324
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.498273', '0.493345', '0.528497', '0.522046', '0.514410', '0.509170', '0.503993', '0.466549', '0.494681', '0.525350', '0.498667', '0.519965', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.532411', '0.517967']
         : correct/total = [(603, 1140), (577, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (583, 1145), (568, 1127), (530, 1136), (558, 1128), (601, 1144), (561, 1125), (599, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (616, 1157), (591, 1141)]
         : compromised: 0.5121, honest: 0.5103
Round 002: test acc mean=0.5127 ± 0.0251 | min=0.4668 max=0.5640
         : test loss mean=9.6291 ± 16.7985
         : individual accs = ['0.564035', '0.508636', '0.502218', '0.502591', '0.477954', '0.485590', '0.531004', '0.529725', '0.554577', '0.550532', '0.466783', '0.491556', '0.513021', '0.483621', '0.531139', '0.522271', '0.509532', '0.508400', '0.503025', '0.517967']
         : correct/total = [(643, 1140), (589, 1158), (566, 1127), (582, 1158), (542, 1134), (556, 1145), (608, 1145), (597, 1127), (630, 1136), (621, 1128), (534, 1144), (553, 1125), (591, 1152), (561, 1160), (597, 1124), (598, 1145), (588, 1154), (575, 1131), (582, 1157), (591, 1141)]
         : compromised: 0.5031, honest: 0.5191
Round 003: test acc mean=0.5154 ± 0.0175 | min=0.4774 max=0.5625
         : test loss mean=1.4229 ± 1.0965
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.477431', '0.531897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (550, 1152), (617, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5100, honest: 0.5190
Round 004: test acc mean=0.5738 ± 0.0408 | min=0.5180 max=0.6693
         : test loss mean=3.9322 ± 4.1202
         : individual accs = ['0.669298', '0.545769', '0.534161', '0.610535', '0.548501', '0.535371', '0.592140', '0.616681', '0.552817', '0.650709', '0.590909', '0.613333', '0.553819', '0.535345', '0.556050', '0.565939', '0.576256', '0.586207', '0.524633', '0.517967']
         : correct/total = [(763, 1140), (632, 1158), (602, 1127), (707, 1158), (622, 1134), (613, 1145), (678, 1145), (695, 1127), (628, 1136), (734, 1128), (676, 1144), (690, 1125), (638, 1152), (621, 1160), (625, 1124), (648, 1145), (665, 1154), (663, 1131), (607, 1157), (591, 1141)]
         : compromised: 0.5563, honest: 0.5855
Round 005: test acc mean=0.5215 ± 0.0272 | min=0.4911 max=0.6205
         : test loss mean=1.2740 ± 0.9289
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.620508']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (708, 1141)]
         : compromised: 0.5124, honest: 0.5275
Round 006: test acc mean=0.6078 ± 0.0632 | min=0.5180 max=0.7939
         : test loss mean=3.8726 ± 2.8538
         : individual accs = ['0.793860', '0.610535', '0.561668', '0.650259', '0.615520', '0.601747', '0.621834', '0.615794', '0.610035', '0.665780', '0.694930', '0.637333', '0.578125', '0.576724', '0.519573', '0.619214', '0.598787', '0.531388', '0.535004', '0.517967']
         : correct/total = [(905, 1140), (707, 1158), (633, 1127), (753, 1158), (698, 1134), (689, 1145), (712, 1145), (694, 1127), (693, 1136), (751, 1128), (795, 1144), (717, 1125), (666, 1152), (669, 1160), (584, 1124), (709, 1145), (691, 1154), (601, 1131), (619, 1157), (591, 1141)]
         : compromised: 0.5738, honest: 0.6305
Round 007: test acc mean=0.5277 ± 0.0504 | min=0.4911 max=0.7371
         : test loss mean=1.2839 ± 1.1141
         : individual accs = ['0.535965', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.737073']
         : correct/total = [(611, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (841, 1141)]
         : compromised: 0.5124, honest: 0.5378
Round 008: test acc mean=0.6315 ± 0.0758 | min=0.5180 max=0.7895
         : test loss mean=3.5643 ± 2.7401
         : individual accs = ['0.789474', '0.575993', '0.562555', '0.729706', '0.623457', '0.617467', '0.637555', '0.607808', '0.650528', '0.740248', '0.699301', '0.708444', '0.666667', '0.677586', '0.557829', '0.649782', '0.567591', '0.518126', '0.532411', '0.517967']
         : correct/total = [(900, 1140), (667, 1158), (634, 1127), (845, 1158), (707, 1134), (707, 1145), (730, 1145), (685, 1127), (739, 1136), (835, 1128), (800, 1144), (797, 1125), (768, 1152), (786, 1160), (627, 1124), (744, 1145), (655, 1154), (586, 1131), (616, 1157), (591, 1141)]
         : compromised: 0.6068, honest: 0.6480
Round 009: test acc mean=0.5292 ± 0.0583 | min=0.4911 max=0.7748
         : test loss mean=1.2263 ± 0.8959
         : individual accs = ['0.529825', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.774759']
         : correct/total = [(604, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (884, 1141)]
         : compromised: 0.5124, honest: 0.5405
Round 010: test acc mean=0.6524 ± 0.0845 | min=0.5180 max=0.7956
         : test loss mean=3.4965 ± 3.0864
         : individual accs = ['0.795614', '0.546632', '0.601597', '0.746114', '0.562610', '0.581659', '0.768559', '0.723159', '0.669894', '0.773936', '0.736014', '0.680889', '0.641493', '0.737931', '0.597865', '0.602620', '0.610052', '0.552608', '0.601556', '0.517967']
         : correct/total = [(907, 1140), (633, 1158), (678, 1127), (864, 1158), (638, 1134), (666, 1145), (880, 1145), (815, 1127), (761, 1136), (873, 1128), (842, 1144), (766, 1125), (739, 1152), (856, 1160), (672, 1124), (690, 1145), (704, 1154), (625, 1131), (696, 1157), (591, 1141)]
         : compromised: 0.6176, honest: 0.6757

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 40.0% compromised
Final accuracy - Compromised: 0.6176, Honest: 0.6757
Overall test accuracy: mean=0.6524 ± 0.0845

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.746s (38.4%)
  - Filtering time: 0.882s (45.4%)
  - Aggregation time: 0.315s (16.2%)
  - Total time: 1.944s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
