Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 6,603,710 parameters
  - Rho parameter: 0.5
  - Stage 1: Distance-based filtering (select 50% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3434 ± 0.1731 | min=0.0039 max=0.4815
         : test loss mean=131539093.6976 ± 265209784.7054
         : individual accs = ['0.347626', '0.447537', '0.342808', '0.435726', '0.456612', '0.426172', '0.451944', '0.468384', '0.460511', '0.457330', '0.444364', '0.481517', '0.018568', '0.009769', '0.004689', '0.455944', '0.003853', '0.475496', '0.344515', '0.334787']
         : correct/total = [(1435, 4128), (1881, 4203), (1399, 4081), (1888, 4333), (1868, 4091), (1827, 4287), (1895, 4193), (2037, 4349), (1930, 4191), (1956, 4277), (1841, 4143), (2019, 4193), (76, 4093), (41, 4197), (19, 4052), (1837, 4029), (16, 4153), (1989, 4183), (1407, 4084), (1382, 4128)]
         : compromised: 0.3007, honest: 0.3861
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 002: test acc mean=0.5208 ± 0.3161 | min=0.0065 max=0.7521
         : test loss mean=nan ± nan
         : individual accs = ['0.739099', '0.722103', '0.684146', '0.752135', '0.748472', '0.714019', '0.720964', '0.746838', '0.745645', '0.742343', '0.729182', '0.720487', '0.032739', '0.047653', '0.049112', '0.006453', '0.047436', '0.049247', '0.695642', '0.721899']
         : correct/total = [(3051, 4128), (3035, 4203), (2792, 4081), (3259, 4333), (3062, 4091), (3061, 4287), (3023, 4193), (3248, 4349), (3125, 4191), (3175, 4277), (3021, 4143), (3021, 4193), (134, 4093), (200, 4197), (199, 4052), (26, 4029), (197, 4153), (206, 4183), (2841, 4084), (2980, 4128)]
         : compromised: 0.3722, honest: 0.6694
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 003: test acc mean=0.5661 ± 0.3404 | min=0.0311 max=0.8061
         : test loss mean=nan ± nan
         : individual accs = ['0.794089', '0.790388', '0.782161', '0.806139', '0.791982', '0.771868', '0.786549', '0.795355', '0.798139', '0.798457', '0.781559', '0.789172', '0.047642', '0.047653', '0.031096', '0.054604', '0.047436', '0.049247', '0.778404', '0.780281']
         : correct/total = [(3278, 4128), (3322, 4203), (3192, 4081), (3493, 4333), (3240, 4091), (3309, 4287), (3298, 4193), (3459, 4349), (3345, 4191), (3415, 4277), (3238, 4143), (3309, 4193), (195, 4093), (200, 4197), (126, 4052), (220, 4029), (197, 4153), (206, 4183), (3179, 4084), (3221, 4128)]
         : compromised: 0.4142, honest: 0.7180
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 004: test acc mean=0.5831 ± 0.3517 | min=0.0327 max=0.8261
         : test loss mean=nan ± nan
         : individual accs = ['0.810804', '0.816798', '0.803235', '0.823910', '0.807382', '0.804992', '0.815884', '0.820648', '0.826056', '0.825579', '0.805696', '0.804913', '0.032739', '0.047653', '0.044669', '0.054604', '0.047436', '0.049247', '0.816601', '0.804021']
         : correct/total = [(3347, 4128), (3433, 4203), (3278, 4081), (3570, 4333), (3303, 4091), (3451, 4287), (3421, 4193), (3569, 4349), (3462, 4191), (3531, 4277), (3338, 4143), (3375, 4193), (134, 4093), (200, 4197), (181, 4052), (220, 4029), (197, 4153), (206, 4183), (3335, 4084), (3319, 4128)]
         : compromised: 0.4275, honest: 0.7387
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 005: test acc mean=0.5914 ± 0.3554 | min=0.0447 max=0.8350
         : test loss mean=nan ± nan
         : individual accs = ['0.822917', '0.824887', '0.817692', '0.834987', '0.823026', '0.807558', '0.828524', '0.828696', '0.829874', '0.832827', '0.820661', '0.821130', '0.047398', '0.047653', '0.044669', '0.054604', '0.047436', '0.049247', '0.826151', '0.817345']
         : correct/total = [(3397, 4128), (3467, 4203), (3337, 4081), (3618, 4333), (3367, 4091), (3462, 4287), (3474, 4193), (3604, 4349), (3478, 4191), (3562, 4277), (3400, 4143), (3443, 4193), (194, 4093), (200, 4197), (181, 4052), (220, 4029), (197, 4153), (206, 4183), (3374, 4084), (3374, 4128)]
         : compromised: 0.4341, honest: 0.7486
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 006: test acc mean=0.5965 ± 0.3603 | min=0.0311 max=0.8429
         : test loss mean=nan ± nan
         : individual accs = ['0.825824', '0.831787', '0.832639', '0.837526', '0.826448', '0.828318', '0.832578', '0.833755', '0.842042', '0.842881', '0.822351', '0.835202', '0.047642', '0.047653', '0.031096', '0.054604', '0.047436', '0.049247', '0.833252', '0.828488']
         : correct/total = [(3409, 4128), (3496, 4203), (3398, 4081), (3629, 4333), (3381, 4091), (3551, 4287), (3491, 4193), (3626, 4349), (3529, 4191), (3605, 4277), (3407, 4143), (3502, 4193), (195, 4093), (200, 4197), (126, 4052), (220, 4029), (197, 4153), (206, 4183), (3403, 4084), (3420, 4128)]
         : compromised: 0.4391, honest: 0.7539
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 007: test acc mean=0.6004 ± 0.3673 | min=0.0068 max=0.8487
         : test loss mean=nan ± nan
         : individual accs = ['0.829457', '0.844873', '0.839745', '0.845604', '0.835248', '0.837415', '0.840448', '0.843872', '0.848723', '0.845686', '0.838523', '0.841164', '0.006841', '0.047653', '0.031096', '0.054604', '0.047436', '0.049247', '0.843291', '0.836967']
         : correct/total = [(3424, 4128), (3551, 4203), (3427, 4081), (3664, 4333), (3417, 4091), (3590, 4287), (3524, 4193), (3670, 4349), (3557, 4191), (3617, 4277), (3474, 4143), (3527, 4193), (28, 4093), (200, 4197), (126, 4052), (220, 4029), (197, 4153), (206, 4183), (3444, 4084), (3455, 4128)]
         : compromised: 0.4396, honest: 0.7612
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 008: test acc mean=0.6024 ± 0.3642 | min=0.0311 max=0.8522
         : test loss mean=nan ± nan
         : individual accs = ['0.826066', '0.838449', '0.840970', '0.848835', '0.843559', '0.841847', '0.842356', '0.844102', '0.847530', '0.852233', '0.836109', '0.844026', '0.047642', '0.047653', '0.031096', '0.054604', '0.047436', '0.049247', '0.839618', '0.825097']
         : correct/total = [(3410, 4128), (3524, 4203), (3432, 4081), (3678, 4333), (3451, 4091), (3609, 4287), (3532, 4193), (3671, 4349), (3552, 4191), (3645, 4277), (3464, 4143), (3539, 4193), (195, 4093), (200, 4197), (126, 4052), (220, 4029), (197, 4153), (206, 4183), (3429, 4084), (3406, 4128)]
         : compromised: 0.4435, honest: 0.7613
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 009: test acc mean=0.6042 ± 0.3698 | min=0.0068 max=0.8547
         : test loss mean=nan ± nan
         : individual accs = ['0.840843', '0.847728', '0.835089', '0.853681', '0.841359', '0.847446', '0.851658', '0.851460', '0.854689', '0.852934', '0.838040', '0.841879', '0.006841', '0.047653', '0.031096', '0.054604', '0.047436', '0.049247', '0.848188', '0.841328']
         : correct/total = [(3471, 4128), (3563, 4203), (3408, 4081), (3699, 4333), (3442, 4091), (3633, 4287), (3571, 4193), (3703, 4349), (3582, 4191), (3648, 4277), (3472, 4143), (3530, 4193), (28, 4093), (200, 4197), (126, 4052), (220, 4029), (197, 4153), (206, 4183), (3464, 4084), (3473, 4128)]
         : compromised: 0.4410, honest: 0.7673
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 010: test acc mean=0.6066 ± 0.3699 | min=0.0068 max=0.8578
         : test loss mean=nan ± nan
         : individual accs = ['0.844234', '0.856293', '0.846606', '0.852296', '0.844048', '0.848845', '0.849273', '0.852380', '0.857791', '0.855974', '0.841419', '0.844503', '0.006841', '0.047653', '0.044916', '0.054604', '0.047436', '0.049247', '0.848188', '0.838663']
         : correct/total = [(3485, 4128), (3599, 4203), (3455, 4081), (3693, 4333), (3453, 4091), (3639, 4287), (3561, 4193), (3707, 4349), (3595, 4191), (3661, 4277), (3486, 4143), (3541, 4193), (28, 4093), (200, 4197), (182, 4052), (220, 4029), (197, 4153), (206, 4183), (3464, 4084), (3462, 4128)]
         : compromised: 0.4448, honest: 0.7684
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: ring, Aggregation: ubar
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.4448, Honest: 0.7684
Overall test accuracy: mean=0.6066 ± 0.3699

=== UBAR SUMMARY ===
Node 0: stage1=0.500, stage2=1.000, overall=0.500
Node 1: stage1=0.500, stage2=1.000, overall=0.500
Node 2: stage1=0.500, stage2=1.000, overall=0.500
Node 3: stage1=0.500, stage2=1.000, overall=0.500
Node 4: stage1=0.500, stage2=1.000, overall=0.500
Node 5: stage1=0.500, stage2=1.000, overall=0.500
Node 6: stage1=0.500, stage2=1.000, overall=0.500
Node 7: stage1=0.500, stage2=1.000, overall=0.500
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.500, stage2=1.000, overall=0.500
Node 10: stage1=0.500, stage2=1.000, overall=0.500
Node 11: stage1=0.500, stage2=1.000, overall=0.500
Node 12: stage1=0.500, stage2=1.000, overall=0.500
Node 13: stage1=0.500, stage2=1.000, overall=0.500
Node 14: stage1=0.500, stage2=1.000, overall=0.500
Node 15: stage1=0.500, stage2=1.000, overall=0.500
Node 16: stage1=0.500, stage2=1.000, overall=0.500
Node 17: stage1=0.500, stage2=1.000, overall=0.500
Node 18: stage1=0.500, stage2=1.000, overall=0.500
Node 19: stage1=0.500, stage2=1.000, overall=0.500

Performance Summary:
  - Distance computation time: 0.233s (0.3%)
  - Loss computation time: 85.667s (99.5%)
  - Aggregation time: 0.176s (0.2%)
  - Total time: 86.075s
  - Mean Stage 1 acceptance rate: 0.500
  - Mean Stage 2 acceptance rate: 1.000
  - Overall acceptance rate: 0.500

UBAR Algorithm Properties:
  - Model dimension: 6,603,710
  - Rho parameter: 0.5
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 50% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
