Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5128 ± 0.0188 | min=0.4713 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.504318', '0.481810', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.488475', '0.525350', '0.500444', '0.508681', '0.506897', '0.517794', '0.517031', '0.515598', '0.471264', '0.518583', '0.517967']
         : correct/total = [(603, 1140), (584, 1158), (543, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (551, 1128), (601, 1144), (563, 1125), (586, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (533, 1131), (600, 1157), (591, 1141)]
         : compromised: 0.5041, honest: 0.5215
Round 002: test acc mean=0.5143 ± 0.0160 | min=0.4889 max=0.5607
         : test loss mean=17.8463 ± 18.7003
         : individual accs = ['0.530702', '0.509499', '0.488909', '0.528497', '0.522046', '0.516157', '0.521397', '0.503993', '0.560739', '0.491135', '0.525350', '0.498667', '0.514757', '0.506897', '0.518683', '0.517031', '0.515598', '0.506631', '0.490925', '0.517967']
         : correct/total = [(605, 1140), (590, 1158), (551, 1127), (612, 1158), (592, 1134), (591, 1145), (597, 1145), (568, 1127), (637, 1136), (554, 1128), (601, 1144), (561, 1125), (593, 1152), (588, 1160), (583, 1124), (592, 1145), (595, 1154), (573, 1131), (568, 1157), (591, 1141)]
         : compromised: 0.5068, honest: 0.5217
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.5584 ± 0.5183
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 004: test acc mean=0.5266 ± 0.0308 | min=0.4911 max=0.6206
         : test loss mean=17.7999 ± 12.9591
         : individual accs = ['0.576316', '0.507772', '0.494232', '0.528497', '0.522046', '0.523144', '0.518777', '0.503993', '0.620599', '0.491135', '0.526224', '0.498667', '0.522569', '0.506897', '0.552491', '0.517031', '0.571924', '0.508400', '0.522040', '0.519720']
         : correct/total = [(657, 1140), (588, 1158), (557, 1127), (612, 1158), (592, 1134), (599, 1145), (594, 1145), (568, 1127), (705, 1136), (554, 1128), (602, 1144), (561, 1125), (602, 1152), (588, 1160), (621, 1124), (592, 1145), (660, 1154), (575, 1131), (604, 1157), (593, 1141)]
         : compromised: 0.5153, honest: 0.5379
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.2139 ± 0.3411
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 006: test acc mean=0.5559 ± 0.0531 | min=0.4960 max=0.7140
         : test loss mean=14.0046 ± 10.3623
         : individual accs = ['0.714035', '0.513817', '0.496007', '0.529361', '0.570547', '0.596507', '0.530131', '0.540373', '0.643486', '0.520390', '0.551573', '0.498667', '0.526042', '0.513793', '0.620996', '0.535371', '0.599653', '0.526967', '0.554019', '0.537248']
         : correct/total = [(814, 1140), (595, 1158), (559, 1127), (613, 1158), (647, 1134), (683, 1145), (607, 1145), (609, 1127), (731, 1136), (587, 1128), (631, 1144), (561, 1125), (606, 1152), (596, 1160), (698, 1124), (613, 1145), (692, 1154), (596, 1131), (641, 1157), (613, 1141)]
         : compromised: 0.5382, honest: 0.5737
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1563 ± 0.3320
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 008: test acc mean=0.5664 ± 0.0630 | min=0.4933 max=0.7553
         : test loss mean=15.0805 ± 11.6762
         : individual accs = ['0.755263', '0.524180', '0.493345', '0.529361', '0.596120', '0.606114', '0.524017', '0.574978', '0.676056', '0.641844', '0.557692', '0.498667', '0.531250', '0.510345', '0.577402', '0.521397', '0.579723', '0.534041', '0.556612', '0.539877']
         : correct/total = [(861, 1140), (607, 1158), (556, 1127), (613, 1158), (676, 1134), (694, 1145), (600, 1145), (648, 1127), (768, 1136), (724, 1128), (638, 1144), (561, 1125), (612, 1152), (592, 1160), (649, 1124), (597, 1145), (669, 1154), (604, 1131), (644, 1157), (616, 1141)]
         : compromised: 0.5353, honest: 0.5975
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.4746 ± 1.6784
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 010: test acc mean=0.5718 ± 0.0641 | min=0.4925 max=0.7404
         : test loss mean=14.5641 ± 11.1622
         : individual accs = ['0.740351', '0.510363', '0.492458', '0.531088', '0.589065', '0.628821', '0.528384', '0.590062', '0.708627', '0.612589', '0.583916', '0.498667', '0.526042', '0.514655', '0.583630', '0.527511', '0.611785', '0.559682', '0.555748', '0.543383']
         : correct/total = [(844, 1140), (591, 1158), (555, 1127), (615, 1158), (668, 1134), (720, 1145), (605, 1145), (665, 1127), (805, 1136), (691, 1128), (668, 1144), (561, 1125), (606, 1152), (597, 1160), (656, 1124), (604, 1145), (706, 1154), (633, 1131), (643, 1157), (620, 1141)]
         : compromised: 0.5398, honest: 0.6039

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.5398, Honest: 0.6039
Overall test accuracy: mean=0.5718 ± 0.0641

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.757s (38.4%)
  - Filtering time: 0.894s (45.4%)
  - Aggregation time: 0.319s (16.2%)
  - Total time: 1.970s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
