Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8516 ± 0.0774
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 002: test acc mean=0.5164 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.7798 ± 0.0604
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.505768', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (570, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5169
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 004: test acc mean=0.5068 ± 0.0231 | min=0.4419 max=0.5500
         : test loss mean=184.4271 ± 202.6215
         : individual accs = ['0.521053', '0.491364', '0.441881', '0.526770', '0.487654', '0.507424', '0.521397', '0.496007', '0.495599', '0.491135', '0.525350', '0.523556', '0.531250', '0.493103', '0.480427', '0.517904', '0.515598', '0.549956', '0.522040', '0.496056']
         : correct/total = [(594, 1140), (569, 1158), (498, 1127), (610, 1158), (553, 1134), (581, 1145), (597, 1145), (559, 1127), (563, 1136), (554, 1128), (601, 1144), (589, 1125), (612, 1152), (572, 1160), (540, 1124), (593, 1145), (595, 1154), (622, 1131), (604, 1157), (566, 1141)]
         : compromised: 0.5140, honest: 0.5037
Round 005: test acc mean=0.5037 ± 0.0217 | min=0.4715 max=0.5625
         : test loss mean=391.0606 ± 600.7648
         : individual accs = ['0.528947', '0.491364', '0.492458', '0.471503', '0.530864', '0.492576', '0.478603', '0.506655', '0.562500', '0.512411', '0.474650', '0.499556', '0.522569', '0.506897', '0.492883', '0.489083', '0.489601', '0.491600', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (569, 1158), (555, 1127), (546, 1158), (602, 1134), (564, 1145), (548, 1145), (571, 1127), (639, 1136), (578, 1128), (543, 1144), (562, 1125), (602, 1152), (588, 1160), (554, 1124), (560, 1145), (565, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5048, honest: 0.5033
Round 006: test acc mean=0.4969 ± 0.0209 | min=0.4401 max=0.5289
         : test loss mean=349.7237 ± 690.4425
         : individual accs = ['0.528947', '0.508636', '0.496007', '0.493955', '0.482363', '0.510044', '0.487336', '0.490683', '0.440141', '0.519504', '0.468531', '0.485333', '0.479167', '0.506897', '0.517794', '0.517031', '0.503466', '0.508400', '0.475367', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (559, 1127), (572, 1158), (547, 1134), (584, 1145), (558, 1145), (553, 1127), (500, 1136), (586, 1128), (536, 1144), (546, 1125), (552, 1152), (588, 1160), (582, 1124), (592, 1145), (581, 1154), (575, 1131), (550, 1157), (591, 1141)]
         : compromised: 0.4996, honest: 0.4957
Round 007: test acc mean=0.4931 ± 0.0211 | min=0.4375 max=0.5289
         : test loss mean=0.8289 ± 0.2231
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.528497', '0.477954', '0.514410', '0.478603', '0.496007', '0.437500', '0.491135', '0.474650', '0.501333', '0.522569', '0.506897', '0.482206', '0.482969', '0.484402', '0.508400', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (612, 1158), (542, 1134), (589, 1145), (548, 1145), (559, 1127), (497, 1136), (554, 1128), (543, 1144), (564, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5021, honest: 0.4892
Round 008: test acc mean=0.4852 ± 0.0166 | min=0.4375 max=0.5226
         : test loss mean=0.7213 ± 0.0498
         : individual accs = ['0.471053', '0.491364', '0.493345', '0.471503', '0.477954', '0.485590', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.501333', '0.522569', '0.493103', '0.482206', '0.482969', '0.484402', '0.491600', '0.477960', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (556, 1127), (546, 1158), (542, 1134), (556, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (564, 1125), (602, 1152), (572, 1160), (542, 1124), (553, 1145), (559, 1154), (556, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4922, honest: 0.4823
Round 009: test acc mean=0.5138 ± 0.0175 | min=0.4755 max=0.5625
         : test loss mean=0.6929 ± 0.0027
         : individual accs = ['0.522807', '0.508636', '0.523514', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.498227', '0.475524', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.482033']
         : correct/total = [(596, 1140), (589, 1158), (590, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (562, 1128), (544, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5154, honest: 0.5131
Round 010: test acc mean=0.5334 ± 0.0402 | min=0.4987 max=0.6566
         : test loss mean=0.6907 ± 0.0128
         : individual accs = ['0.531579', '0.508636', '0.656610', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.561620', '0.503546', '0.610140', '0.498667', '0.522569', '0.507759', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.595092']
         : correct/total = [(606, 1140), (589, 1158), (740, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (638, 1136), (568, 1128), (698, 1144), (561, 1125), (602, 1152), (589, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (679, 1141)]
         : compromised: 0.5155, honest: 0.5410

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.5155, Honest: 0.5410
Overall test accuracy: mean=0.5334 ± 0.0402

=== BALANCE SUMMARY ===
Node 0: acceptance=0.644
Node 1: acceptance=0.800
Node 2: acceptance=0.767
Node 3: acceptance=0.812
Node 4: acceptance=0.809
Node 5: acceptance=0.747
Node 6: acceptance=0.700
Node 7: acceptance=0.729
Node 8: acceptance=0.700
Node 9: acceptance=0.746
Node 10: acceptance=0.778
Node 11: acceptance=0.750
Node 12: acceptance=0.767
Node 13: acceptance=0.746
Node 14: acceptance=0.740
Node 15: acceptance=0.736
Node 16: acceptance=0.708
Node 17: acceptance=0.833
Node 18: acceptance=0.750
Node 19: acceptance=0.725

Performance Summary:
  - Distance computation time: 1.956s (43.7%)
  - Filtering time: 2.093s (46.8%)
  - Aggregation time: 0.427s (9.5%)
  - Total time: 4.475s
  - Mean acceptance rate: 0.749

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
