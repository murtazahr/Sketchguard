Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 002: test acc mean=0.4978 ± 0.0301 | min=0.4384 max=0.5616
         : test loss mean=11.2352 ± 6.3905
         : individual accs = ['0.517544', '0.504318', '0.506655', '0.473230', '0.507055', '0.561572', '0.478603', '0.488909', '0.438380', '0.540780', '0.480769', '0.457778', '0.477431', '0.493103', '0.457295', '0.503057', '0.531196', '0.527851', '0.527226', '0.483786']
         : correct/total = [(590, 1140), (584, 1158), (571, 1127), (548, 1158), (575, 1134), (643, 1145), (548, 1145), (551, 1127), (498, 1136), (610, 1128), (550, 1144), (515, 1125), (550, 1152), (572, 1160), (514, 1124), (576, 1145), (613, 1154), (597, 1131), (610, 1157), (552, 1141)]
         : compromised: 0.4945, honest: 0.5112
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=1.1894 ± 0.4888
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 004: test acc mean=0.5557 ± 0.0666 | min=0.4741 max=0.6649
         : test loss mean=8.6279 ± 6.1538
         : individual accs = ['0.482456', '0.593264', '0.513753', '0.474093', '0.664903', '0.533624', '0.577293', '0.608696', '0.663732', '0.643617', '0.528846', '0.503111', '0.635417', '0.490517', '0.483096', '0.517031', '0.485269', '0.609195', '0.622299', '0.482910']
         : correct/total = [(550, 1140), (687, 1158), (579, 1127), (549, 1158), (754, 1134), (611, 1145), (661, 1145), (686, 1127), (754, 1136), (726, 1128), (605, 1144), (566, 1125), (732, 1152), (569, 1160), (543, 1124), (592, 1145), (560, 1154), (689, 1131), (720, 1157), (551, 1141)]
         : compromised: 0.5545, honest: 0.5603
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9317 ± 0.1957
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 006: test acc mean=0.6311 ± 0.0728 | min=0.5040 max=0.7852
         : test loss mean=nan ± nan
         : individual accs = ['0.612281', '0.634715', '0.657498', '0.626943', '0.522046', '0.680349', '0.666376', '0.503993', '0.785211', '0.745567', '0.709790', '0.627556', '0.690972', '0.543966', '0.610320', '0.638428', '0.624783', '0.556145', '0.522040', '0.663453']
         : correct/total = [(698, 1140), (735, 1158), (741, 1127), (726, 1158), (592, 1134), (779, 1145), (763, 1145), (568, 1127), (892, 1136), (841, 1128), (812, 1144), (706, 1125), (796, 1152), (631, 1160), (686, 1124), (731, 1145), (721, 1154), (629, 1131), (604, 1157), (757, 1141)]
         : compromised: 0.6475, honest: 0.5658
Round 007: test acc mean=0.5165 ± 0.0154 | min=0.4911 max=0.5651
         : test loss mean=0.9750 ± 0.1786
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.565141', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (642, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5162, honest: 0.5176
Round 008: test acc mean=0.6543 ± 0.0849 | min=0.5040 max=0.7738
         : test loss mean=nan ± nan
         : individual accs = ['0.672807', '0.647668', '0.700089', '0.586356', '0.522046', '0.773799', '0.676856', '0.503993', '0.741197', '0.751773', '0.769231', '0.631111', '0.731771', '0.534483', '0.669929', '0.738865', '0.695841', '0.596817', '0.522040', '0.618755']
         : correct/total = [(767, 1140), (750, 1158), (789, 1127), (679, 1158), (592, 1134), (886, 1145), (775, 1145), (568, 1127), (842, 1136), (848, 1128), (880, 1144), (710, 1125), (843, 1152), (620, 1160), (753, 1124), (846, 1145), (803, 1154), (675, 1131), (604, 1157), (706, 1141)]
         : compromised: 0.6682, honest: 0.5987
Round 009: test acc mean=0.5164 ± 0.0151 | min=0.4911 max=0.5634
         : test loss mean=1.0057 ± 0.1846
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.563380', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (640, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5161, honest: 0.5176
Round 010: test acc mean=0.6884 ± 0.0831 | min=0.5220 max=0.8087
         : test loss mean=nan ± nan
         : individual accs = ['0.686842', '0.729706', '0.674357', '0.610535', '0.775132', '0.808734', '0.694323', '0.778172', '0.741197', '0.744681', '0.781469', '0.560889', '0.753472', '0.526724', '0.685943', '0.743231', '0.699307', '0.618037', '0.522040', '0.633655']
         : correct/total = [(783, 1140), (845, 1158), (760, 1127), (707, 1158), (879, 1134), (926, 1145), (795, 1145), (877, 1127), (842, 1136), (840, 1128), (894, 1144), (631, 1125), (868, 1152), (611, 1160), (771, 1124), (851, 1145), (807, 1154), (699, 1131), (604, 1157), (723, 1141)]
         : compromised: 0.6768, honest: 0.7349

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 80.0% compromised
Final accuracy - Compromised: 0.6768, Honest: 0.7349
Overall test accuracy: mean=0.6884 ± 0.0831

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.744s (38.2%)
  - Filtering time: 0.880s (45.2%)
  - Aggregation time: 0.323s (16.6%)
  - Total time: 1.947s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
