Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6128 ± 0.0655 | min=0.4774 max=0.7185
         : test loss mean=362.0619 ± 1139.8666
         : individual accs = ['0.578070', '0.677029', '0.669033', '0.607945', '0.640212', '0.550218', '0.555459', '0.536823', '0.711268', '0.658688', '0.718531', '0.670222', '0.477431', '0.493966', '0.631673', '0.632314', '0.630849', '0.583554', '0.655143', '0.577564']
         : correct/total = [(659, 1140), (784, 1158), (754, 1127), (704, 1158), (726, 1134), (630, 1145), (636, 1145), (605, 1127), (808, 1136), (743, 1128), (822, 1144), (754, 1125), (550, 1152), (573, 1160), (710, 1124), (724, 1145), (728, 1154), (660, 1131), (758, 1157), (659, 1141)]
         : compromised: 0.5924, honest: 0.6264
Round 002: test acc mean=0.7080 ± 0.0718 | min=0.5069 max=0.7782
         : test loss mean=nan ± nan
         : individual accs = ['0.742105', '0.674439', '0.718722', '0.707254', '0.700176', '0.650655', '0.728384', '0.686779', '0.746479', '0.726064', '0.772727', '0.752000', '0.522569', '0.506897', '0.751779', '0.744978', '0.778163', '0.745358', '0.743302', '0.760736']
         : correct/total = [(846, 1140), (781, 1158), (810, 1127), (819, 1158), (794, 1134), (745, 1145), (834, 1145), (774, 1127), (848, 1136), (819, 1128), (884, 1144), (846, 1125), (602, 1152), (588, 1160), (845, 1124), (853, 1145), (898, 1154), (843, 1131), (860, 1157), (868, 1141)]
         : compromised: 0.6684, honest: 0.7344
Round 003: test acc mean=0.7814 ± 0.0954 | min=0.5069 max=0.8619
         : test loss mean=nan ± nan
         : individual accs = ['0.835088', '0.740069', '0.808341', '0.800518', '0.785714', '0.728384', '0.799127', '0.777285', '0.802817', '0.837766', '0.861888', '0.855111', '0.522569', '0.506897', '0.838078', '0.819214', '0.860485', '0.819629', '0.797753', '0.831727']
         : correct/total = [(952, 1140), (857, 1158), (911, 1127), (927, 1158), (891, 1134), (834, 1145), (915, 1145), (876, 1127), (912, 1136), (945, 1128), (986, 1144), (962, 1125), (602, 1152), (588, 1160), (942, 1124), (938, 1145), (993, 1154), (927, 1131), (923, 1157), (949, 1141)]
         : compromised: 0.7261, honest: 0.8183
Round 004: test acc mean=0.8187 ± 0.1025 | min=0.5069 max=0.8737
         : test loss mean=nan ± nan
         : individual accs = ['0.864912', '0.814335', '0.862467', '0.839378', '0.834215', '0.830568', '0.855022', '0.839397', '0.847711', '0.872340', '0.868007', '0.864000', '0.522569', '0.506897', '0.873665', '0.845415', '0.870884', '0.847922', '0.845290', '0.868536']
         : correct/total = [(986, 1140), (943, 1158), (972, 1127), (972, 1158), (946, 1134), (951, 1145), (979, 1145), (946, 1127), (963, 1136), (984, 1128), (993, 1144), (972, 1125), (602, 1152), (588, 1160), (982, 1124), (968, 1145), (1005, 1154), (959, 1131), (978, 1157), (991, 1141)]
         : compromised: 0.7632, honest: 0.8557
Round 005: test acc mean=0.8303 ± 0.1067 | min=0.5069 max=0.8960
         : test loss mean=nan ± nan
         : individual accs = ['0.838596', '0.849741', '0.871340', '0.883420', '0.864198', '0.845415', '0.869869', '0.866903', '0.833627', '0.851064', '0.890734', '0.884444', '0.522569', '0.506897', '0.888790', '0.867249', '0.896014', '0.877984', '0.835782', '0.860649']
         : correct/total = [(956, 1140), (984, 1158), (982, 1127), (1023, 1158), (980, 1134), (968, 1145), (996, 1145), (977, 1127), (947, 1136), (960, 1128), (1019, 1144), (995, 1125), (602, 1152), (588, 1160), (999, 1124), (993, 1145), (1034, 1154), (993, 1131), (967, 1157), (982, 1141)]
         : compromised: 0.7765, honest: 0.8661
Round 006: test acc mean=0.8473 ± 0.1112 | min=0.5069 max=0.9021
         : test loss mean=nan ± nan
         : individual accs = ['0.890351', '0.873921', '0.889086', '0.896373', '0.887125', '0.881223', '0.882969', '0.880213', '0.882042', '0.867908', '0.890734', '0.890667', '0.522569', '0.506897', '0.886121', '0.871616', '0.902080', '0.885942', '0.873812', '0.884312']
         : correct/total = [(1015, 1140), (1012, 1158), (1002, 1127), (1038, 1158), (1006, 1134), (1009, 1145), (1011, 1145), (992, 1127), (1002, 1136), (979, 1128), (1019, 1144), (1002, 1125), (602, 1152), (588, 1160), (996, 1124), (998, 1145), (1041, 1154), (1002, 1131), (1011, 1157), (1009, 1141)]
         : compromised: 0.7901, honest: 0.8854
Round 007: test acc mean=0.8545 ± 0.1134 | min=0.5069 max=0.9031
         : test loss mean=nan ± nan
         : individual accs = ['0.896491', '0.894646', '0.887311', '0.900691', '0.885362', '0.896070', '0.888210', '0.888199', '0.883803', '0.897163', '0.897727', '0.903111', '0.522569', '0.506897', '0.895907', '0.882096', '0.896880', '0.888594', '0.881590', '0.896582']
         : correct/total = [(1022, 1140), (1036, 1158), (1000, 1127), (1043, 1158), (1004, 1134), (1026, 1145), (1017, 1145), (1001, 1127), (1004, 1136), (1012, 1128), (1027, 1144), (1016, 1125), (602, 1152), (588, 1160), (1007, 1124), (1010, 1145), (1035, 1154), (1005, 1131), (1020, 1157), (1023, 1141)]
         : compromised: 0.7987, honest: 0.8917
Round 008: test acc mean=0.8547 ± 0.1138 | min=0.5069 max=0.9093
         : test loss mean=nan ± nan
         : individual accs = ['0.892105', '0.892055', '0.892635', '0.908463', '0.896825', '0.901310', '0.889956', '0.888199', '0.869718', '0.877660', '0.895105', '0.909333', '0.522569', '0.506897', '0.904804', '0.882096', '0.906412', '0.892131', '0.878997', '0.886065']
         : correct/total = [(1017, 1140), (1033, 1158), (1006, 1127), (1052, 1158), (1017, 1134), (1032, 1145), (1019, 1145), (1001, 1127), (988, 1136), (990, 1128), (1024, 1144), (1023, 1125), (602, 1152), (588, 1160), (1017, 1124), (1010, 1145), (1046, 1154), (1009, 1131), (1017, 1157), (1011, 1141)]
         : compromised: 0.8010, honest: 0.8904
Round 009: test acc mean=0.8570 ± 0.1144 | min=0.5069 max=0.9076
         : test loss mean=nan ± nan
         : individual accs = ['0.901754', '0.890328', '0.893523', '0.907599', '0.898589', '0.902183', '0.896070', '0.901508', '0.882042', '0.891844', '0.897727', '0.905778', '0.522569', '0.506897', '0.902135', '0.889083', '0.899480', '0.883289', '0.871219', '0.895706']
         : correct/total = [(1028, 1140), (1031, 1158), (1007, 1127), (1051, 1158), (1019, 1134), (1033, 1145), (1026, 1145), (1016, 1127), (1002, 1136), (1006, 1128), (1027, 1144), (1019, 1125), (602, 1152), (588, 1160), (1014, 1124), (1018, 1145), (1038, 1154), (999, 1131), (1008, 1157), (1022, 1141)]
         : compromised: 0.7980, honest: 0.8962
Round 010: test acc mean=0.8607 ± 0.1156 | min=0.5069 max=0.9136
         : test loss mean=nan ± nan
         : individual accs = ['0.900000', '0.906736', '0.889973', '0.913644', '0.901235', '0.905677', '0.884716', '0.900621', '0.897007', '0.899823', '0.898601', '0.910222', '0.522569', '0.506897', '0.902135', '0.890830', '0.909012', '0.883289', '0.888505', '0.901840']
         : correct/total = [(1026, 1140), (1050, 1158), (1003, 1127), (1058, 1158), (1022, 1134), (1037, 1145), (1013, 1145), (1015, 1127), (1019, 1136), (1015, 1128), (1028, 1144), (1024, 1125), (602, 1152), (588, 1160), (1014, 1124), (1020, 1145), (1049, 1154), (999, 1131), (1028, 1157), (1029, 1141)]
         : compromised: 0.8033, honest: 0.8989

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 40.0% compromised
Final accuracy - Compromised: 0.8033, Honest: 0.8989
Overall test accuracy: mean=0.8607 ± 0.1156

=== BALANCE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.750
Node 2: acceptance=0.500
Node 3: acceptance=1.000
Node 4: acceptance=0.500
Node 5: acceptance=0.800
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=0.500
Node 11: acceptance=0.500
Node 12: acceptance=0.000
Node 13: acceptance=0.000
Node 14: acceptance=0.500
Node 15: acceptance=0.500
Node 16: acceptance=0.500
Node 17: acceptance=0.500
Node 18: acceptance=0.500
Node 19: acceptance=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.1%)
  COMPUTATION (max across nodes):
    - Filtering: 0.030s (55.8%)
    - Aggregation: 0.024s (44.1%)
  TOTALS:
    - Total computation: 0.053s (99.9%)
    - Total communication: 0.000s (0.1%)
    - Total parallel time: 0.053s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.015s
  - Aggregation: 0.008s
  - Model transfer: 0.000s
  - Total per node: 0.023s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.296s
  - Total aggregation: 0.160s
  - Total model transfer: 0.000s
  - Grand total: 0.457s
  - Mean acceptance rate: 0.578

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
