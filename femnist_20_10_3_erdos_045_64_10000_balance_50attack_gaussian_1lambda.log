Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4666 ± 0.0372 | min=0.4193 max=0.5409
         : test loss mean=3.7618 ± 0.0317
         : individual accs = ['0.533188', '0.473233', '0.484685', '0.451881', '0.441701', '0.540938', '0.423325', '0.420556', '0.460988', '0.429273', '0.419261', '0.517529', '0.446860', '0.436741', '0.477542', '0.492926', '0.444739', '0.525221', '0.459109', '0.452519']
         : correct/total = [(2201, 4128), (1989, 4203), (1978, 4081), (1958, 4333), (1807, 4091), (2319, 4287), (1775, 4193), (1829, 4349), (1932, 4191), (1836, 4277), (1737, 4143), (2170, 4193), (1829, 4093), (1833, 4197), (1935, 4052), (1986, 4029), (1847, 4153), (2197, 4183), (1875, 4084), (1868, 4128)]
         : compromised: 0.4855, honest: 0.4477
Round 002: test acc mean=0.6746 ± 0.0221 | min=0.6201 max=0.7084
         : test loss mean=3.2345 ± 0.2263
         : individual accs = ['0.702762', '0.675946', '0.646900', '0.701592', '0.668785', '0.708421', '0.620081', '0.677397', '0.669053', '0.707973', '0.678494', '0.682566', '0.682385', '0.664522', '0.698667', '0.652023', '0.668432', '0.647143', '0.672870', '0.665940']
         : correct/total = [(2901, 4128), (2841, 4203), (2640, 4081), (3040, 4333), (2736, 4091), (3037, 4287), (2600, 4193), (2946, 4349), (2804, 4191), (3028, 4277), (2811, 4143), (2862, 4193), (2793, 4093), (2789, 4197), (2831, 4052), (2627, 4029), (2776, 4153), (2707, 4183), (2748, 4084), (2749, 4128)]
         : compromised: 0.6731, honest: 0.6761
Round 003: test acc mean=0.6931 ± 0.0325 | min=0.6255 max=0.7457
         : test loss mean=2.6293 ± 0.4413
         : individual accs = ['0.738857', '0.681418', '0.628767', '0.745673', '0.687118', '0.664567', '0.723587', '0.721545', '0.719160', '0.722001', '0.706252', '0.680420', '0.688493', '0.673338', '0.692004', '0.625465', '0.719239', '0.653837', '0.681440', '0.707849']
         : correct/total = [(3050, 4128), (2864, 4203), (2566, 4081), (3231, 4333), (2811, 4091), (2849, 4287), (3034, 4193), (3138, 4349), (3014, 4191), (3088, 4277), (2926, 4143), (2853, 4193), (2818, 4093), (2826, 4197), (2804, 4052), (2520, 4029), (2987, 4153), (2735, 4183), (2783, 4084), (2922, 4128)]
         : compromised: 0.6670, honest: 0.7191
Round 004: test acc mean=0.7182 ± 0.0387 | min=0.6225 max=0.7759
         : test loss mean=1.8263 ± 0.4200
         : individual accs = ['0.749516', '0.681418', '0.684636', '0.748442', '0.762650', '0.692326', '0.748629', '0.755806', '0.775948', '0.752163', '0.697562', '0.665156', '0.622526', '0.715273', '0.705824', '0.715810', '0.769805', '0.694478', '0.702008', '0.724079']
         : correct/total = [(3094, 4128), (2864, 4203), (2794, 4081), (3243, 4333), (3120, 4091), (2968, 4287), (3139, 4193), (3287, 4349), (3252, 4191), (3217, 4277), (2890, 4143), (2789, 4193), (2548, 4093), (3002, 4197), (2860, 4052), (2884, 4029), (3197, 4153), (2905, 4183), (2867, 4084), (2989, 4128)]
         : compromised: 0.6879, honest: 0.7485
Round 005: test acc mean=0.7565 ± 0.0279 | min=0.7050 max=0.7989
         : test loss mean=1.1496 ± 0.2267
         : individual accs = ['0.767926', '0.708066', '0.759373', '0.773136', '0.771694', '0.763238', '0.766993', '0.787077', '0.798377', '0.790975', '0.746560', '0.719056', '0.715368', '0.736002', '0.744077', '0.761479', '0.798941', '0.704996', '0.747062', '0.769864']
         : correct/total = [(3170, 4128), (2976, 4203), (3099, 4081), (3350, 4333), (3157, 4091), (3272, 4287), (3216, 4193), (3423, 4349), (3346, 4191), (3383, 4277), (3093, 4143), (3015, 4193), (2928, 4093), (3089, 4197), (3015, 4052), (3068, 4029), (3318, 4153), (2949, 4183), (3051, 4084), (3178, 4128)]
         : compromised: 0.7359, honest: 0.7772
Round 006: test acc mean=0.8019 ± 0.0107 | min=0.7813 max=0.8204
         : test loss mean=0.7478 ± 0.0742
         : individual accs = ['0.792151', '0.790626', '0.802254', '0.813293', '0.799804', '0.800793', '0.803482', '0.820418', '0.811739', '0.810849', '0.799179', '0.799189', '0.781334', '0.800810', '0.811698', '0.808886', '0.820130', '0.786756', '0.787218', '0.796512']
         : correct/total = [(3270, 4128), (3323, 4203), (3274, 4081), (3524, 4333), (3272, 4091), (3433, 4287), (3369, 4193), (3568, 4349), (3402, 4191), (3468, 4277), (3311, 4143), (3351, 4193), (3198, 4093), (3361, 4197), (3289, 4052), (3259, 4029), (3406, 4153), (3291, 4183), (3215, 4084), (3288, 4128)]
         : compromised: 0.7970, honest: 0.8068
Round 007: test acc mean=0.8217 ± 0.0068 | min=0.8114 max=0.8340
         : test loss mean=0.5958 ± 0.0351
         : individual accs = ['0.813227', '0.827504', '0.820387', '0.829218', '0.813493', '0.818521', '0.824708', '0.833985', '0.830589', '0.821604', '0.811972', '0.824708', '0.811385', '0.824160', '0.824531', '0.827501', '0.829280', '0.812336', '0.818805', '0.816134']
         : correct/total = [(3357, 4128), (3478, 4203), (3348, 4081), (3593, 4333), (3328, 4091), (3509, 4287), (3458, 4193), (3627, 4349), (3481, 4191), (3514, 4277), (3364, 4143), (3458, 4193), (3321, 4093), (3459, 4197), (3341, 4052), (3334, 4029), (3444, 4153), (3398, 4183), (3344, 4084), (3369, 4128)]
         : compromised: 0.8210, honest: 0.8224
Round 008: test acc mean=0.8285 ± 0.0072 | min=0.8091 max=0.8391
         : test loss mean=0.5366 ± 0.0240
         : individual accs = ['0.822432', '0.828694', '0.821367', '0.835680', '0.825715', '0.834150', '0.834248', '0.837434', '0.827010', '0.833996', '0.822834', '0.835440', '0.819448', '0.829640', '0.839092', '0.833457', '0.823260', '0.826201', '0.829824', '0.809109']
         : correct/total = [(3395, 4128), (3483, 4203), (3352, 4081), (3621, 4333), (3378, 4091), (3576, 4287), (3498, 4193), (3642, 4349), (3466, 4191), (3567, 4277), (3409, 4143), (3503, 4193), (3354, 4093), (3482, 4197), (3400, 4052), (3358, 4029), (3419, 4153), (3456, 4183), (3389, 4084), (3340, 4128)]
         : compromised: 0.8297, honest: 0.8272
Round 009: test acc mean=0.8391 ± 0.0050 | min=0.8284 max=0.8471
         : test loss mean=0.4957 ± 0.0171
         : individual accs = ['0.832849', '0.844635', '0.838520', '0.841680', '0.828404', '0.841148', '0.842833', '0.844562', '0.846099', '0.847089', '0.834420', '0.836632', '0.835817', '0.837980', '0.842794', '0.843634', '0.831206', '0.836242', '0.837414', '0.837209']
         : correct/total = [(3438, 4128), (3550, 4203), (3422, 4081), (3647, 4333), (3389, 4091), (3606, 4287), (3534, 4193), (3673, 4349), (3546, 4191), (3623, 4277), (3457, 4143), (3508, 4193), (3421, 4093), (3517, 4197), (3415, 4052), (3399, 4029), (3452, 4153), (3498, 4183), (3420, 4084), (3456, 4128)]
         : compromised: 0.8395, honest: 0.8386
Round 010: test acc mean=0.8458 ± 0.0051 | min=0.8356 max=0.8534
         : test loss mean=0.4743 ± 0.0188
         : individual accs = ['0.840359', '0.853438', '0.841215', '0.850681', '0.835981', '0.843247', '0.849273', '0.849161', '0.848962', '0.849661', '0.835626', '0.843072', '0.841192', '0.850608', '0.848963', '0.851824', '0.841560', '0.848912', '0.848188', '0.844719']
         : correct/total = [(3469, 4128), (3587, 4203), (3433, 4081), (3686, 4333), (3420, 4091), (3615, 4287), (3561, 4193), (3693, 4349), (3558, 4191), (3634, 4277), (3462, 4143), (3535, 4193), (3443, 4093), (3570, 4197), (3440, 4052), (3432, 4029), (3495, 4153), (3551, 4183), (3464, 4084), (3487, 4128)]
         : compromised: 0.8471, honest: 0.8446

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.8471, Honest: 0.8446
Overall test accuracy: mean=0.8458 ± 0.0051

=== BALANCE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.500
Node 2: acceptance=0.500
Node 3: acceptance=0.571
Node 4: acceptance=0.333
Node 5: acceptance=0.500
Node 6: acceptance=0.417
Node 7: acceptance=0.364
Node 8: acceptance=0.286
Node 9: acceptance=0.636
Node 10: acceptance=0.625
Node 11: acceptance=0.417
Node 12: acceptance=0.583
Node 13: acceptance=0.556
Node 14: acceptance=0.429
Node 15: acceptance=0.444
Node 16: acceptance=0.286
Node 17: acceptance=0.625
Node 18: acceptance=0.500
Node 19: acceptance=0.400

Performance Summary:
  - Distance computation time: 0.948s (43.6%)
  - Filtering time: 1.053s (48.4%)
  - Aggregation time: 0.172s (7.9%)
  - Total time: 2.173s
  - Mean acceptance rate: 0.474

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
