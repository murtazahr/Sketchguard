Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8420 ± 0.0795
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 002: test acc mean=0.5167 ± 0.0148 | min=0.4911 max=0.5625
         : test loss mean=0.7688 ± 0.0764
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.510204', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (575, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5174
Round 003: test acc mean=0.5188 ± 0.0177 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.518777', '0.521397', '0.503993', '0.562500', '0.491135', '0.526224', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.559792', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (594, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (602, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (646, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5128, honest: 0.5195
Round 004: test acc mean=0.5049 ± 0.0225 | min=0.4384 max=0.5393
         : test loss mean=90.7584 ± 185.9669
         : individual accs = ['0.471053', '0.497409', '0.493345', '0.528497', '0.502646', '0.514410', '0.509170', '0.504880', '0.438380', '0.491135', '0.525350', '0.500444', '0.536458', '0.506897', '0.483096', '0.516157', '0.515598', '0.507515', '0.539326', '0.517090']
         : correct/total = [(537, 1140), (576, 1158), (556, 1127), (612, 1158), (570, 1134), (589, 1145), (583, 1145), (569, 1127), (498, 1136), (554, 1128), (601, 1144), (563, 1125), (618, 1152), (588, 1160), (543, 1124), (591, 1145), (595, 1154), (574, 1131), (624, 1157), (590, 1141)]
         : compromised: 0.5107, honest: 0.5043
Round 005: test acc mean=0.4957 ± 0.0192 | min=0.4701 max=0.5510
         : test loss mean=22.0018 ± 29.0311
         : individual accs = ['0.490351', '0.498273', '0.493345', '0.485320', '0.470899', '0.485590', '0.490830', '0.551020', '0.470070', '0.491135', '0.525350', '0.488889', '0.509549', '0.506897', '0.512456', '0.482096', '0.515598', '0.488064', '0.477960', '0.480280']
         : correct/total = [(559, 1140), (577, 1158), (556, 1127), (562, 1158), (534, 1134), (556, 1145), (562, 1145), (621, 1127), (534, 1136), (554, 1128), (601, 1144), (550, 1125), (587, 1152), (588, 1160), (576, 1124), (552, 1145), (595, 1154), (552, 1131), (553, 1157), (548, 1141)]
         : compromised: 0.4962, honest: 0.4956
Round 006: test acc mean=0.5059 ± 0.0181 | min=0.4747 max=0.5296
         : test loss mean=10.5475 ± 25.0468
         : individual accs = ['0.528947', '0.491364', '0.493345', '0.519862', '0.477954', '0.485590', '0.521397', '0.496007', '0.529049', '0.491135', '0.474650', '0.501333', '0.477431', '0.506897', '0.517794', '0.517031', '0.515598', '0.529620', '0.522040', '0.520596']
         : correct/total = [(603, 1140), (569, 1158), (556, 1127), (602, 1158), (542, 1134), (556, 1145), (597, 1145), (559, 1127), (601, 1136), (554, 1128), (543, 1144), (564, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (599, 1131), (604, 1157), (594, 1141)]
         : compromised: 0.4962, honest: 0.5070
Round 007: test acc mean=0.5086 ± 0.0295 | min=0.4715 max=0.5971
         : test loss mean=0.7059 ± 0.0213
         : individual accs = ['0.530702', '0.499136', '0.503993', '0.471503', '0.522046', '0.485590', '0.521397', '0.503993', '0.562500', '0.491135', '0.474650', '0.501333', '0.482639', '0.493103', '0.482206', '0.517031', '0.597054', '0.491600', '0.522040', '0.517967']
         : correct/total = [(605, 1140), (578, 1158), (568, 1127), (546, 1158), (592, 1134), (556, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (543, 1144), (564, 1125), (556, 1152), (572, 1160), (542, 1124), (592, 1145), (689, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.4893, honest: 0.5107
Round 008: test acc mean=0.5250 ± 0.0371 | min=0.4830 max=0.6153
         : test loss mean=0.6913 ± 0.0147
         : individual accs = ['0.571053', '0.509499', '0.507542', '0.512953', '0.528219', '0.487336', '0.522271', '0.502218', '0.562500', '0.492908', '0.565559', '0.577778', '0.486979', '0.493103', '0.500890', '0.482969', '0.615251', '0.491600', '0.522040', '0.567923']
         : correct/total = [(651, 1140), (590, 1158), (572, 1127), (594, 1158), (599, 1134), (558, 1145), (598, 1145), (566, 1127), (639, 1136), (556, 1128), (647, 1144), (650, 1125), (561, 1152), (572, 1160), (563, 1124), (553, 1145), (710, 1154), (556, 1131), (604, 1157), (648, 1141)]
         : compromised: 0.4902, honest: 0.5289
Round 009: test acc mean=0.5919 ± 0.0619 | min=0.5022 max=0.7166
         : test loss mean=0.6564 ± 0.0351
         : individual accs = ['0.703509', '0.571675', '0.614907', '0.620035', '0.533510', '0.557205', '0.570306', '0.559006', '0.521127', '0.616135', '0.669580', '0.633778', '0.647569', '0.531034', '0.514235', '0.643668', '0.716638', '0.502210', '0.580812', '0.531989']
         : correct/total = [(802, 1140), (662, 1158), (693, 1127), (718, 1158), (605, 1134), (638, 1145), (653, 1145), (630, 1127), (592, 1136), (695, 1128), (766, 1144), (713, 1125), (746, 1152), (616, 1160), (578, 1124), (737, 1145), (827, 1154), (568, 1131), (672, 1157), (607, 1141)]
         : compromised: 0.5441, honest: 0.5973
Round 010: test acc mean=0.6858 ± 0.0848 | min=0.5390 max=0.8328
         : test loss mean=0.5880 ± 0.0679
         : individual accs = ['0.779825', '0.752159', '0.768412', '0.729706', '0.607584', '0.631441', '0.609607', '0.588287', '0.597711', '0.747340', '0.787587', '0.755556', '0.746528', '0.562069', '0.636121', '0.731878', '0.832756', '0.690539', '0.622299', '0.539001']
         : correct/total = [(889, 1140), (871, 1158), (866, 1127), (845, 1158), (689, 1134), (723, 1145), (698, 1145), (663, 1127), (679, 1136), (843, 1128), (901, 1144), (850, 1125), (860, 1152), (652, 1160), (715, 1124), (838, 1145), (961, 1154), (781, 1131), (720, 1157), (615, 1141)]
         : compromised: 0.5968, honest: 0.6957

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 10.0% compromised
Final accuracy - Compromised: 0.5968, Honest: 0.6957
Overall test accuracy: mean=0.6858 ± 0.0848

=== BALANCE SUMMARY ===
Node 0: acceptance=0.908
Node 1: acceptance=0.930
Node 2: acceptance=0.975
Node 3: acceptance=0.914
Node 4: acceptance=0.922
Node 5: acceptance=0.940
Node 6: acceptance=0.867
Node 7: acceptance=0.936
Node 8: acceptance=0.829
Node 9: acceptance=0.973
Node 10: acceptance=0.963
Node 11: acceptance=0.867
Node 12: acceptance=0.892
Node 13: acceptance=0.922
Node 14: acceptance=0.871
Node 15: acceptance=0.922
Node 16: acceptance=1.000
Node 17: acceptance=0.912
Node 18: acceptance=0.908
Node 19: acceptance=0.860

Performance Summary:
  - Distance computation time: 1.544s (42.5%)
  - Filtering time: 1.678s (46.2%)
  - Aggregation time: 0.412s (11.3%)
  - Total time: 3.634s
  - Mean acceptance rate: 0.916

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
