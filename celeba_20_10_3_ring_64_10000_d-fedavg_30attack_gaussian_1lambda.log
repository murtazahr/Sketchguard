Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 6/20 nodes: [5, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5154, honest: 0.5168
Round 002: test acc mean=0.5305 ± 0.0810 | min=0.4711 max=0.8225
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.588946', '0.822538', '0.471503', '0.523810', '0.485590', '0.517031', '0.496007', '0.677817', '0.519504', '0.525350', '0.502222', '0.477431', '0.506897', '0.483986', '0.502183', '0.487868', '0.497790', '0.525497', '0.526731']
         : correct/total = [(537, 1140), (682, 1158), (927, 1127), (546, 1158), (594, 1134), (556, 1145), (592, 1145), (559, 1127), (770, 1136), (586, 1128), (601, 1144), (565, 1125), (550, 1152), (588, 1160), (544, 1124), (575, 1145), (563, 1154), (563, 1131), (608, 1157), (601, 1141)]
         : compromised: 0.4962, honest: 0.5452
Round 003: test acc mean=0.5031 ± 0.0229 | min=0.4707 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.516415', '0.471503', '0.491182', '0.470742', '0.531878', '0.503993', '0.562500', '0.484043', '0.474650', '0.496000', '0.507812', '0.506897', '0.500890', '0.475109', '0.518198', '0.508400', '0.521175', '0.482910']
         : correct/total = [(603, 1140), (589, 1158), (582, 1127), (546, 1158), (557, 1134), (539, 1145), (609, 1145), (568, 1127), (639, 1136), (546, 1128), (543, 1144), (558, 1125), (585, 1152), (588, 1160), (563, 1124), (544, 1145), (598, 1154), (575, 1131), (603, 1157), (551, 1141)]
         : compromised: 0.5027, honest: 0.5033
Round 004: test acc mean=0.4921 ± 0.0233 | min=0.4506 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.506655', '0.471503', '0.450617', '0.478603', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.476562', '0.506897', '0.472420', '0.482096', '0.484402', '0.505747', '0.484875', '0.511832']
         : correct/total = [(537, 1140), (589, 1158), (571, 1127), (546, 1158), (511, 1134), (548, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (549, 1152), (588, 1160), (531, 1124), (552, 1145), (559, 1154), (572, 1131), (561, 1157), (584, 1141)]
         : compromised: 0.4875, honest: 0.4941
Round 005: test acc mean=0.5029 ± 0.0251 | min=0.4585 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.506655', '0.471503', '0.542328', '0.494323', '0.468122', '0.503993', '0.562500', '0.508865', '0.525350', '0.499556', '0.484375', '0.506897', '0.508007', '0.458515', '0.484402', '0.528736', '0.506482', '0.517090']
         : correct/total = [(537, 1140), (589, 1158), (571, 1127), (546, 1158), (615, 1134), (566, 1145), (536, 1145), (568, 1127), (639, 1136), (574, 1128), (601, 1144), (562, 1125), (558, 1152), (588, 1160), (571, 1124), (525, 1145), (559, 1154), (598, 1131), (586, 1157), (590, 1141)]
         : compromised: 0.5048, honest: 0.5020
Round 006: test acc mean=0.4982 ± 0.0215 | min=0.4715 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.491364', '0.506655', '0.471503', '0.511464', '0.489083', '0.478603', '0.503993', '0.562500', '0.491135', '0.474650', '0.504000', '0.521701', '0.506897', '0.480427', '0.485590', '0.486135', '0.508400', '0.477960', '0.482910']
         : correct/total = [(603, 1140), (569, 1158), (571, 1127), (546, 1158), (580, 1134), (560, 1145), (548, 1145), (568, 1127), (639, 1136), (554, 1128), (543, 1144), (567, 1125), (601, 1152), (588, 1160), (540, 1124), (556, 1145), (561, 1154), (575, 1131), (553, 1157), (551, 1141)]
         : compromised: 0.4974, honest: 0.4985
Round 007: test acc mean=0.5026 ± 0.0244 | min=0.4515 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.491364', '0.506655', '0.528497', '0.477954', '0.505677', '0.479476', '0.503993', '0.562500', '0.508865', '0.474650', '0.504000', '0.476562', '0.506897', '0.517794', '0.521397', '0.451473', '0.494253', '0.525497', '0.484663']
         : correct/total = [(603, 1140), (569, 1158), (571, 1127), (612, 1158), (542, 1134), (579, 1145), (549, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (567, 1125), (549, 1152), (588, 1160), (582, 1124), (597, 1145), (521, 1154), (559, 1131), (608, 1157), (553, 1141)]
         : compromised: 0.5044, honest: 0.5017
Round 008: test acc mean=0.5005 ± 0.0222 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.471503', '0.471781', '0.484716', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.500444', '0.477431', '0.506897', '0.494662', '0.505677', '0.512998', '0.489832', '0.531547', '0.489921']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (546, 1158), (535, 1134), (555, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (563, 1125), (550, 1152), (588, 1160), (556, 1124), (579, 1145), (592, 1154), (554, 1131), (615, 1157), (559, 1141)]
         : compromised: 0.4975, honest: 0.5018
Round 009: test acc mean=0.4992 ± 0.0242 | min=0.4664 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.528497', '0.520282', '0.495197', '0.466376', '0.498669', '0.562500', '0.491135', '0.474650', '0.498667', '0.522569', '0.506897', '0.482206', '0.482969', '0.467938', '0.472149', '0.522040', '0.518843']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (612, 1158), (590, 1134), (567, 1145), (534, 1145), (562, 1127), (639, 1136), (554, 1128), (543, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (540, 1154), (534, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5002, honest: 0.4988
Round 010: test acc mean=0.4993 ± 0.0221 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.491364', '0.493345', '0.471503', '0.504409', '0.540611', '0.480349', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.498264', '0.506897', '0.499110', '0.482096', '0.493068', '0.508400', '0.477096', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (556, 1127), (546, 1158), (572, 1134), (619, 1145), (550, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (574, 1152), (588, 1160), (561, 1124), (552, 1145), (569, 1154), (575, 1131), (552, 1157), (591, 1141)]
         : compromised: 0.5051, honest: 0.4969

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: d-fedavg
Attack: gaussian, 30.0% compromised
Final accuracy - Compromised: 0.5051, Honest: 0.4969
Overall test accuracy: mean=0.4993 ± 0.0221
