Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 2,219,692 parameters
  - Rho parameter: 0.19999999999999996
  - Stage 1: Distance-based filtering (select 20% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6074 ± 0.0699 | min=0.4767 max=0.7158
         : test loss mean=26920726.1333 ± 62153071.8870
         : individual accs = ['0.683333', '0.656304', '0.637977', '0.476684', '0.571429', '0.592140', '0.643668', '0.560781', '0.636444', '0.655142', '0.644231', '0.485333', '0.679688', '0.506897', '0.626335', '0.684716', '0.715771', '0.581786', '0.615385', '0.493427']
         : correct/total = [(779, 1140), (760, 1158), (719, 1127), (552, 1158), (648, 1134), (678, 1145), (737, 1145), (632, 1127), (723, 1136), (739, 1128), (737, 1144), (546, 1125), (783, 1152), (588, 1160), (704, 1124), (784, 1145), (826, 1154), (658, 1131), (712, 1157), (563, 1141)]
         : compromised: 0.6010, honest: 0.6328
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 002: test acc mean=0.6768 ± 0.0857 | min=0.4987 max=0.7686
         : test loss mean=nan ± nan
         : individual accs = ['0.735965', '0.676166', '0.726708', '0.528497', '0.666667', '0.716157', '0.743231', '0.685004', '0.713028', '0.762411', '0.719406', '0.498667', '0.711806', '0.506897', '0.712633', '0.743231', '0.768631', '0.702034', '0.700951', '0.517967']
         : correct/total = [(839, 1140), (783, 1158), (819, 1127), (612, 1158), (756, 1134), (820, 1145), (851, 1145), (772, 1127), (810, 1136), (860, 1128), (823, 1144), (561, 1125), (820, 1152), (588, 1160), (801, 1124), (851, 1145), (887, 1154), (794, 1131), (811, 1157), (591, 1141)]
         : compromised: 0.6675, honest: 0.7141
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 003: test acc mean=0.7526 ± 0.1210 | min=0.4987 max=0.8421
         : test loss mean=nan ± nan
         : individual accs = ['0.842105', '0.783247', '0.824312', '0.528497', '0.808642', '0.817467', '0.816594', '0.805679', '0.828345', '0.828901', '0.821678', '0.498667', '0.796007', '0.506897', '0.817616', '0.779913', '0.840555', '0.803714', '0.784788', '0.517967']
         : correct/total = [(960, 1140), (907, 1158), (929, 1127), (612, 1158), (917, 1134), (936, 1145), (935, 1145), (908, 1127), (941, 1136), (935, 1128), (940, 1144), (561, 1125), (917, 1152), (588, 1160), (919, 1124), (893, 1145), (970, 1154), (909, 1131), (908, 1157), (591, 1141)]
         : compromised: 0.7347, honest: 0.8242
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 004: test acc mean=0.7930 ± 0.1405 | min=0.4987 max=0.8812
         : test loss mean=nan ± nan
         : individual accs = ['0.851754', '0.868739', '0.859805', '0.528497', '0.868607', '0.867249', '0.868122', '0.866903', '0.881162', '0.878546', '0.875000', '0.498667', '0.863715', '0.506897', '0.861210', '0.839301', '0.867418', '0.854111', '0.835782', '0.517967']
         : correct/total = [(971, 1140), (1006, 1158), (969, 1127), (612, 1158), (985, 1134), (993, 1145), (994, 1145), (977, 1127), (1001, 1136), (991, 1128), (1001, 1144), (561, 1125), (995, 1152), (588, 1160), (968, 1124), (961, 1145), (1001, 1154), (966, 1131), (967, 1157), (591, 1141)]
         : compromised: 0.7753, honest: 0.8637
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 005: test acc mean=0.7983 ± 0.1435 | min=0.4987 max=0.8927
         : test loss mean=nan ± nan
         : individual accs = ['0.873684', '0.879965', '0.874889', '0.528497', '0.865079', '0.830568', '0.874236', '0.866903', '0.887324', '0.892730', '0.881993', '0.498667', '0.868924', '0.506897', '0.867438', '0.861135', '0.884749', '0.870911', '0.834054', '0.517967']
         : correct/total = [(996, 1140), (1019, 1158), (986, 1127), (612, 1158), (981, 1134), (951, 1145), (1001, 1145), (977, 1127), (1008, 1136), (1007, 1128), (1009, 1144), (561, 1125), (1001, 1152), (588, 1160), (975, 1124), (986, 1145), (1021, 1154), (985, 1131), (965, 1157), (591, 1141)]
         : compromised: 0.7798, honest: 0.8726
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 006: test acc mean=0.8131 ± 0.1506 | min=0.4987 max=0.9013
         : test loss mean=nan ± nan
         : individual accs = ['0.895614', '0.895509', '0.879326', '0.528497', '0.885362', '0.901310', '0.896070', '0.890861', '0.899648', '0.883865', '0.895105', '0.498667', '0.895833', '0.506897', '0.901246', '0.865502', '0.893414', '0.877984', '0.853068', '0.517967']
         : correct/total = [(1021, 1140), (1037, 1158), (991, 1127), (612, 1158), (1004, 1134), (1032, 1145), (1026, 1145), (1004, 1127), (1022, 1136), (997, 1128), (1024, 1144), (561, 1125), (1032, 1152), (588, 1160), (1013, 1124), (991, 1145), (1031, 1154), (993, 1131), (987, 1157), (591, 1141)]
         : compromised: 0.7935, honest: 0.8913
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 007: test acc mean=0.8194 ± 0.1535 | min=0.4987 max=0.9086
         : test loss mean=nan ± nan
         : individual accs = ['0.898246', '0.902418', '0.889973', '0.528497', '0.886243', '0.904803', '0.896943', '0.908607', '0.899648', '0.900709', '0.897727', '0.498667', '0.898438', '0.506897', '0.902135', '0.879476', '0.898614', '0.888594', '0.884183', '0.517967']
         : correct/total = [(1024, 1140), (1045, 1158), (1003, 1127), (612, 1158), (1005, 1134), (1036, 1145), (1027, 1145), (1024, 1127), (1022, 1136), (1016, 1128), (1027, 1144), (561, 1125), (1035, 1152), (588, 1160), (1014, 1124), (1007, 1145), (1037, 1154), (1005, 1131), (1023, 1157), (591, 1141)]
         : compromised: 0.7998, honest: 0.8979
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 008: test acc mean=0.8207 ± 0.1541 | min=0.4987 max=0.9118
         : test loss mean=nan ± nan
         : individual accs = ['0.902632', '0.900691', '0.887311', '0.528497', '0.895062', '0.911790', '0.897817', '0.909494', '0.892606', '0.893617', '0.900350', '0.498667', '0.898438', '0.506897', '0.910142', '0.888210', '0.899480', '0.886826', '0.886776', '0.517967']
         : correct/total = [(1029, 1140), (1043, 1158), (1000, 1127), (612, 1158), (1015, 1134), (1044, 1145), (1028, 1145), (1025, 1127), (1014, 1136), (1008, 1128), (1030, 1144), (561, 1125), (1035, 1152), (588, 1160), (1023, 1124), (1017, 1145), (1038, 1154), (1003, 1131), (1026, 1157), (591, 1141)]
         : compromised: 0.8004, honest: 0.9017
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 009: test acc mean=0.8212 ± 0.1545 | min=0.4987 max=0.9113
         : test loss mean=nan ± nan
         : individual accs = ['0.904386', '0.891192', '0.887311', '0.528497', '0.902116', '0.907424', '0.904803', '0.911269', '0.895246', '0.901596', '0.899476', '0.498667', '0.901042', '0.506897', '0.905694', '0.893450', '0.907279', '0.893899', '0.865169', '0.517967']
         : correct/total = [(1031, 1140), (1032, 1158), (1000, 1127), (612, 1158), (1023, 1134), (1039, 1145), (1036, 1145), (1027, 1127), (1017, 1136), (1017, 1128), (1029, 1144), (561, 1125), (1038, 1152), (588, 1160), (1018, 1124), (1023, 1145), (1047, 1154), (1011, 1131), (1001, 1157), (591, 1141)]
         : compromised: 0.7999, honest: 0.9063
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 010: test acc mean=0.8243 ± 0.1559 | min=0.4987 max=0.9175
         : test loss mean=nan ± nan
         : individual accs = ['0.908772', '0.902418', '0.897072', '0.528497', '0.904762', '0.901310', '0.903930', '0.917480', '0.892606', '0.911348', '0.900350', '0.498667', '0.907986', '0.506897', '0.911032', '0.897817', '0.905546', '0.893899', '0.878133', '0.517967']
         : correct/total = [(1036, 1140), (1045, 1158), (1011, 1127), (612, 1158), (1026, 1134), (1032, 1145), (1035, 1145), (1034, 1127), (1014, 1136), (1028, 1128), (1030, 1144), (561, 1125), (1046, 1152), (588, 1160), (1024, 1124), (1028, 1145), (1045, 1154), (1011, 1131), (1016, 1157), (591, 1141)]
         : compromised: 0.8031, honest: 0.9091
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: ubar
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.8031, Honest: 0.9091
Overall test accuracy: mean=0.8243 ± 0.1559

=== UBAR SUMMARY ===
Node 0: stage1=0.167, stage2=1.000, overall=0.167
Node 1: stage1=0.167, stage2=1.000, overall=0.167
Node 2: stage1=0.200, stage2=1.000, overall=0.200
Node 3: stage1=0.250, stage2=1.000, overall=0.250
Node 4: stage1=0.250, stage2=1.000, overall=0.250
Node 5: stage1=0.200, stage2=1.000, overall=0.200
Node 6: stage1=0.200, stage2=1.000, overall=0.200
Node 7: stage1=0.200, stage2=1.000, overall=0.200
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.333, stage2=1.000, overall=0.333
Node 10: stage1=0.250, stage2=1.000, overall=0.250
Node 11: stage1=0.143, stage2=1.000, overall=0.143
Node 12: stage1=0.143, stage2=1.000, overall=0.143
Node 13: stage1=0.250, stage2=1.000, overall=0.250
Node 14: stage1=0.143, stage2=1.000, overall=0.143
Node 15: stage1=0.167, stage2=1.000, overall=0.167
Node 16: stage1=0.200, stage2=1.000, overall=0.200
Node 17: stage1=0.200, stage2=1.000, overall=0.200
Node 18: stage1=0.250, stage2=1.000, overall=0.250
Node 19: stage1=0.500, stage2=1.000, overall=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Distance computation: 0.021s (11.7%)
    - Loss computation: 0.151s (86.0%)
    - Aggregation: 0.004s (2.3%)
  TOTALS:
    - Total computation: 0.176s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.176s

=== PER-NODE AVERAGE TIME ===
  - Distance computation: 0.012s
  - Loss computation: 0.115s
  - Aggregation: 0.003s
  - Model transfer: 0.000s
  - Total per node: 0.130s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total distance computation: 0.232s
  - Total loss computation: 2.307s
  - Total aggregation: 0.052s
  - Total model transfer: 0.000s
  - Grand total: 2.591s
  - Mean Stage 1 acceptance rate: 0.236
  - Mean Stage 2 acceptance rate: 1.000
  - Overall acceptance rate: 0.236

UBAR Algorithm Properties:
  - Model dimension: 2,219,692
  - Rho parameter: 0.19999999999999996
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 20% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
