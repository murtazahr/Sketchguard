Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8371 ± 0.0777
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7528 ± 0.0585
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
Round 003: test acc mean=0.5233 ± 0.0201 | min=0.4911 max=0.5649
         : test loss mean=0.6804 ± 0.0562
         : individual accs = ['0.564912', '0.510363', '0.493345', '0.528497', '0.535273', '0.538865', '0.527511', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.546007', '0.507759', '0.517794', '0.517904', '0.528596', '0.508400', '0.537597', '0.521472']
         : correct/total = [(644, 1140), (591, 1158), (556, 1127), (612, 1158), (607, 1134), (617, 1145), (604, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (629, 1152), (589, 1160), (582, 1124), (593, 1145), (610, 1154), (575, 1131), (622, 1157), (595, 1141)]
Round 004: test acc mean=0.5357 ± 0.0259 | min=0.4911 max=0.5936
         : test loss mean=0.6441 ± 0.0293
         : individual accs = ['0.528947', '0.517271', '0.593611', '0.584629', '0.529982', '0.541485', '0.531878', '0.506655', '0.564261', '0.491135', '0.532343', '0.584889', '0.530382', '0.528448', '0.519573', '0.520524', '0.536395', '0.513705', '0.530683', '0.527607']
         : correct/total = [(603, 1140), (599, 1158), (669, 1127), (677, 1158), (601, 1134), (620, 1145), (609, 1145), (571, 1127), (641, 1136), (554, 1128), (609, 1144), (658, 1125), (611, 1152), (613, 1160), (584, 1124), (596, 1145), (619, 1154), (581, 1131), (614, 1157), (602, 1141)]
Round 005: test acc mean=0.5886 ± 0.0532 | min=0.4938 max=0.7040
         : test loss mean=0.6000 ± 0.0321
         : individual accs = ['0.540351', '0.559585', '0.631766', '0.544905', '0.557319', '0.596507', '0.692576', '0.552795', '0.603873', '0.493794', '0.687937', '0.557333', '0.703993', '0.556034', '0.601423', '0.565066', '0.578856', '0.562334', '0.610199', '0.575811']
         : correct/total = [(616, 1140), (648, 1158), (712, 1127), (631, 1158), (632, 1134), (683, 1145), (793, 1145), (623, 1127), (686, 1136), (557, 1128), (787, 1144), (627, 1125), (811, 1152), (645, 1160), (676, 1124), (647, 1145), (668, 1154), (636, 1131), (706, 1157), (657, 1141)]
Round 006: test acc mean=0.6883 ± 0.0697 | min=0.5526 max=0.7850
         : test loss mean=0.5535 ± 0.0315
         : individual accs = ['0.748246', '0.571675', '0.737356', '0.784974', '0.663139', '0.696070', '0.678603', '0.680568', '0.770246', '0.714539', '0.710664', '0.593778', '0.753472', '0.679310', '0.636121', '0.565066', '0.721837', '0.552608', '0.757131', '0.751096']
         : correct/total = [(853, 1140), (662, 1158), (831, 1127), (909, 1158), (752, 1134), (797, 1145), (777, 1145), (767, 1127), (875, 1136), (806, 1128), (813, 1144), (668, 1125), (868, 1152), (788, 1160), (715, 1124), (647, 1145), (833, 1154), (625, 1131), (876, 1157), (857, 1141)]
Round 007: test acc mean=0.7396 ± 0.0425 | min=0.6672 max=0.8142
         : test loss mean=0.5235 ± 0.0220
         : individual accs = ['0.759649', '0.670121', '0.791482', '0.680484', '0.722222', '0.745852', '0.772052', '0.703638', '0.738556', '0.713652', '0.753497', '0.782222', '0.814236', '0.778448', '0.670819', '0.667249', '0.754766', '0.734748', '0.757995', '0.780894']
         : correct/total = [(866, 1140), (776, 1158), (892, 1127), (788, 1158), (819, 1134), (854, 1145), (884, 1145), (793, 1127), (839, 1136), (805, 1128), (862, 1144), (880, 1125), (938, 1152), (903, 1160), (754, 1124), (764, 1145), (871, 1154), (831, 1131), (877, 1157), (891, 1141)]
Round 008: test acc mean=0.7790 ± 0.0435 | min=0.6897 max=0.8715
         : test loss mean=0.4979 ± 0.0292
         : individual accs = ['0.730702', '0.723661', '0.795031', '0.764249', '0.759259', '0.819214', '0.825328', '0.830524', '0.782570', '0.689716', '0.795455', '0.818667', '0.871528', '0.803448', '0.750000', '0.716157', '0.757366', '0.758621', '0.785653', '0.801928']
         : correct/total = [(833, 1140), (838, 1158), (896, 1127), (885, 1158), (861, 1134), (938, 1145), (945, 1145), (936, 1127), (889, 1136), (778, 1128), (910, 1144), (921, 1125), (1004, 1152), (932, 1160), (843, 1124), (820, 1145), (874, 1154), (858, 1131), (909, 1157), (915, 1141)]
Round 009: test acc mean=0.8081 ± 0.0295 | min=0.7415 max=0.8594
         : test loss mean=0.4640 ± 0.0246
         : individual accs = ['0.791228', '0.800518', '0.817214', '0.817789', '0.768959', '0.842795', '0.817467', '0.833185', '0.792254', '0.781028', '0.817308', '0.811556', '0.859375', '0.834483', '0.813167', '0.741485', '0.780763', '0.770999', '0.813310', '0.857143']
         : correct/total = [(902, 1140), (927, 1158), (921, 1127), (947, 1158), (872, 1134), (965, 1145), (936, 1145), (939, 1127), (900, 1136), (881, 1128), (935, 1144), (913, 1125), (990, 1152), (968, 1160), (914, 1124), (849, 1145), (901, 1154), (872, 1131), (941, 1157), (978, 1141)]
Round 010: test acc mean=0.8422 ± 0.0245 | min=0.7913 max=0.8889
         : test loss mean=0.4381 ± 0.0242
         : individual accs = ['0.858772', '0.808290', '0.853594', '0.834197', '0.807760', '0.855022', '0.853275', '0.858030', '0.863556', '0.832447', '0.848776', '0.888889', '0.868924', '0.830172', '0.836299', '0.791266', '0.819757', '0.846154', '0.814175', '0.875548']
         : correct/total = [(979, 1140), (936, 1158), (962, 1127), (966, 1158), (916, 1134), (979, 1145), (977, 1145), (967, 1127), (981, 1136), (939, 1128), (971, 1144), (1000, 1125), (1001, 1152), (963, 1160), (940, 1124), (906, 1145), (946, 1154), (957, 1131), (942, 1157), (999, 1141)]

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Overall test accuracy: mean=0.8422 ± 0.0245

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.952s (43.0%)
  - Filtering time: 2.092s (46.1%)
  - Aggregation time: 0.498s (11.0%)
  - Total time: 4.542s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
