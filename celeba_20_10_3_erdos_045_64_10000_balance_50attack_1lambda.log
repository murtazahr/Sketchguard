Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Degree statistics: avg=9.90, min=7, max=14
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6523 ± 0.0593 | min=0.5256 max=0.7200
         : test loss mean=0.6806 ± 0.0042
         : individual accs = ['0.697368', '0.684801', '0.533274', '0.710708', '0.525573', '0.598253', '0.663755', '0.597161', '0.573063', '0.703014', '0.644231', '0.718222', '0.707465', '0.712931', '0.634342', '0.666376', '0.688042', '0.649867', '0.719965', '0.617003']
         : correct/total = [(795, 1140), (793, 1158), (601, 1127), (823, 1158), (596, 1134), (685, 1145), (760, 1145), (673, 1127), (651, 1136), (793, 1128), (737, 1144), (808, 1125), (815, 1152), (827, 1160), (713, 1124), (763, 1145), (794, 1154), (735, 1131), (833, 1157), (704, 1141)]
         : compromised: 0.6625, honest: 0.6420
Round 002: test acc mean=0.6452 ± 0.0557 | min=0.5178 max=0.7314
         : test loss mean=0.6683 ± 0.0134
         : individual accs = ['0.657018', '0.670984', '0.577640', '0.682211', '0.590829', '0.547598', '0.626201', '0.672582', '0.700704', '0.680851', '0.697552', '0.593778', '0.707465', '0.602586', '0.517794', '0.654148', '0.731369', '0.633068', '0.686258', '0.673094']
         : correct/total = [(749, 1140), (777, 1158), (651, 1127), (790, 1158), (670, 1134), (627, 1145), (717, 1145), (758, 1127), (796, 1136), (768, 1128), (798, 1144), (668, 1125), (815, 1152), (699, 1160), (582, 1124), (749, 1145), (844, 1154), (716, 1131), (794, 1157), (768, 1141)]
         : compromised: 0.6191, honest: 0.6712
Round 003: test acc mean=0.6935 ± 0.0379 | min=0.5872 max=0.7764
         : test loss mean=0.6311 ± 0.0255
         : individual accs = ['0.676316', '0.694301', '0.674357', '0.739206', '0.663139', '0.680349', '0.714410', '0.692990', '0.733275', '0.722518', '0.721154', '0.663111', '0.681424', '0.702586', '0.587189', '0.702183', '0.776430', '0.654288', '0.707001', '0.684487']
         : correct/total = [(771, 1140), (804, 1158), (760, 1127), (856, 1158), (752, 1134), (779, 1145), (818, 1145), (781, 1127), (833, 1136), (815, 1128), (825, 1144), (746, 1125), (785, 1152), (815, 1160), (660, 1124), (804, 1145), (896, 1154), (740, 1131), (818, 1157), (781, 1141)]
         : compromised: 0.6747, honest: 0.7124
Round 004: test acc mean=0.7595 ± 0.0166 | min=0.7286 max=0.7893
         : test loss mean=0.5461 ± 0.0277
         : individual accs = ['0.755263', '0.753886', '0.755989', '0.767703', '0.783951', '0.767686', '0.757205', '0.748891', '0.779049', '0.756206', '0.789336', '0.772444', '0.750000', '0.746552', '0.736655', '0.738865', '0.786828', '0.747126', '0.728608', '0.768624']
         : correct/total = [(861, 1140), (873, 1158), (852, 1127), (889, 1158), (889, 1134), (879, 1145), (867, 1145), (844, 1127), (885, 1136), (853, 1128), (903, 1144), (869, 1125), (864, 1152), (866, 1160), (828, 1124), (846, 1145), (908, 1154), (845, 1131), (843, 1157), (877, 1141)]
         : compromised: 0.7498, honest: 0.7693
Round 005: test acc mean=0.8029 ± 0.0199 | min=0.7700 max=0.8484
         : test loss mean=0.4479 ± 0.0281
         : individual accs = ['0.800877', '0.810881', '0.791482', '0.802245', '0.797178', '0.787773', '0.820961', '0.793256', '0.830986', '0.837766', '0.819930', '0.800889', '0.769965', '0.780172', '0.806050', '0.796507', '0.848354', '0.800177', '0.774417', '0.787905']
         : correct/total = [(913, 1140), (939, 1158), (892, 1127), (929, 1158), (904, 1134), (902, 1145), (940, 1145), (894, 1127), (944, 1136), (945, 1128), (938, 1144), (901, 1125), (887, 1152), (905, 1160), (906, 1124), (912, 1145), (979, 1154), (905, 1131), (896, 1157), (899, 1141)]
         : compromised: 0.7918, honest: 0.8139
Round 006: test acc mean=0.8459 ± 0.0181 | min=0.7986 max=0.8724
         : test loss mean=0.3646 ± 0.0193
         : individual accs = ['0.856140', '0.866149', '0.856256', '0.854922', '0.820988', '0.834061', '0.845415', '0.833185', '0.852993', '0.870567', '0.872378', '0.860444', '0.829861', '0.835345', '0.838078', '0.837555', '0.866551', '0.834660', '0.798617', '0.853637']
         : correct/total = [(976, 1140), (1003, 1158), (965, 1127), (990, 1158), (931, 1134), (955, 1145), (968, 1145), (939, 1127), (969, 1136), (982, 1128), (998, 1144), (968, 1125), (956, 1152), (969, 1160), (942, 1124), (959, 1145), (1000, 1154), (944, 1131), (924, 1157), (974, 1141)]
         : compromised: 0.8391, honest: 0.8527
Round 007: test acc mean=0.8696 ± 0.0118 | min=0.8480 max=0.8929
         : test loss mean=0.3143 ± 0.0146
         : individual accs = ['0.866667', '0.892919', '0.873114', '0.870466', '0.861552', '0.885590', '0.875983', '0.874002', '0.865317', '0.882092', '0.879371', '0.875556', '0.855903', '0.872414', '0.859431', '0.848035', '0.875217', '0.852343', '0.849611', '0.875548']
         : correct/total = [(988, 1140), (1034, 1158), (984, 1127), (1008, 1158), (977, 1134), (1014, 1145), (1003, 1145), (985, 1127), (983, 1136), (995, 1128), (1006, 1144), (985, 1125), (986, 1152), (1012, 1160), (966, 1124), (971, 1145), (1010, 1154), (964, 1131), (983, 1157), (999, 1141)]
         : compromised: 0.8665, honest: 0.8726
Round 008: test acc mean=0.8745 ± 0.0090 | min=0.8608 max=0.8889
         : test loss mean=0.2961 ± 0.0139
         : individual accs = ['0.878070', '0.885147', '0.864241', '0.867876', '0.870370', '0.887336', '0.877729', '0.881100', '0.868838', '0.871454', '0.881993', '0.888889', '0.877604', '0.861207', '0.888790', '0.865502', '0.878683', '0.868258', '0.860847', '0.865907']
         : correct/total = [(1001, 1140), (1025, 1158), (974, 1127), (1005, 1158), (987, 1134), (1016, 1145), (1005, 1145), (993, 1127), (987, 1136), (983, 1128), (1009, 1144), (1000, 1125), (1011, 1152), (999, 1160), (999, 1124), (991, 1145), (1014, 1154), (982, 1131), (996, 1157), (988, 1141)]
         : compromised: 0.8748, honest: 0.8742
Round 009: test acc mean=0.8885 ± 0.0100 | min=0.8574 max=0.9013
         : test loss mean=0.2723 ± 0.0187
         : individual accs = ['0.890351', '0.896373', '0.880213', '0.895509', '0.882716', '0.901310', '0.896943', '0.895297', '0.893486', '0.891844', '0.894231', '0.896000', '0.883681', '0.889655', '0.894128', '0.881223', '0.890815', '0.870911', '0.857390', '0.887818']
         : correct/total = [(1015, 1140), (1038, 1158), (992, 1127), (1037, 1158), (1001, 1134), (1032, 1145), (1027, 1145), (1009, 1127), (1015, 1136), (1006, 1128), (1023, 1144), (1008, 1125), (1018, 1152), (1032, 1160), (1005, 1124), (1009, 1145), (1028, 1154), (985, 1131), (992, 1157), (1013, 1141)]
         : compromised: 0.8851, honest: 0.8919
Round 010: test acc mean=0.8941 ± 0.0083 | min=0.8753 max=0.9051
         : test loss mean=0.2610 ± 0.0151
         : individual accs = ['0.897368', '0.893782', '0.888199', '0.897237', '0.884480', '0.904803', '0.893450', '0.902396', '0.898768', '0.905142', '0.897727', '0.902222', '0.894097', '0.898276', '0.899466', '0.882096', '0.895147', '0.875332', '0.877269', '0.893953']
         : correct/total = [(1023, 1140), (1035, 1158), (1001, 1127), (1039, 1158), (1003, 1134), (1036, 1145), (1023, 1145), (1017, 1127), (1021, 1136), (1021, 1128), (1027, 1144), (1015, 1125), (1030, 1152), (1042, 1160), (1011, 1124), (1010, 1145), (1033, 1154), (990, 1131), (1015, 1157), (1020, 1141)]
         : compromised: 0.8916, honest: 0.8966

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 50.0% compromised
Final accuracy - Compromised: 0.8916, Honest: 0.8966
Overall test accuracy: mean=0.8941 ± 0.0083

=== BALANCE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.500
Node 2: acceptance=0.500
Node 3: acceptance=0.571
Node 4: acceptance=0.333
Node 5: acceptance=0.500
Node 6: acceptance=0.417
Node 7: acceptance=0.364
Node 8: acceptance=0.286
Node 9: acceptance=0.636
Node 10: acceptance=0.625
Node 11: acceptance=0.417
Node 12: acceptance=0.583
Node 13: acceptance=0.556
Node 14: acceptance=0.429
Node 15: acceptance=0.444
Node 16: acceptance=0.286
Node 17: acceptance=0.625
Node 18: acceptance=0.500
Node 19: acceptance=0.400

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.035s (75.9%)
    - Aggregation: 0.011s (24.1%)
  TOTALS:
    - Total computation: 0.046s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.046s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.025s
  - Aggregation: 0.004s
  - Model transfer: 0.000s
  - Total per node: 0.029s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.499s
  - Total aggregation: 0.088s
  - Total model transfer: 0.000s
  - Grand total: 0.587s
  - Mean acceptance rate: 0.474

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
