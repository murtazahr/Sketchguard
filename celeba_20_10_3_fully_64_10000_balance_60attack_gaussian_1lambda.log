Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8340 ± 0.0709
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 002: test acc mean=0.5164 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.7701 ± 0.0645
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.505768', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (570, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5160
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 004: test acc mean=0.5055 ± 0.0251 | min=0.4750 max=0.5668
         : test loss mean=157.7073 ± 169.8229
         : individual accs = ['0.529825', '0.503454', '0.499556', '0.474957', '0.522046', '0.566812', '0.482969', '0.496007', '0.562500', '0.508865', '0.525350', '0.494222', '0.481771', '0.493966', '0.486655', '0.517904', '0.484402', '0.486295', '0.511668', '0.481157']
         : correct/total = [(604, 1140), (583, 1158), (563, 1127), (550, 1158), (592, 1134), (649, 1145), (553, 1145), (559, 1127), (639, 1136), (574, 1128), (601, 1144), (556, 1125), (555, 1152), (573, 1160), (547, 1124), (593, 1145), (559, 1154), (550, 1131), (592, 1157), (549, 1141)]
         : compromised: 0.5066, honest: 0.5038
Round 005: test acc mean=0.4966 ± 0.0233 | min=0.4375 max=0.5316
         : test loss mean=128.3877 ± 101.9787
         : individual accs = ['0.466667', '0.508636', '0.506655', '0.526770', '0.522046', '0.517031', '0.479476', '0.482697', '0.437500', '0.491135', '0.490385', '0.531556', '0.484375', '0.486207', '0.483986', '0.513537', '0.493068', '0.472149', '0.528090', '0.510955']
         : correct/total = [(532, 1140), (589, 1158), (571, 1127), (610, 1158), (592, 1134), (592, 1145), (549, 1145), (544, 1127), (497, 1136), (554, 1128), (561, 1144), (598, 1125), (558, 1152), (564, 1160), (544, 1124), (588, 1145), (569, 1154), (534, 1131), (611, 1157), (583, 1141)]
         : compromised: 0.4997, honest: 0.4921
Round 006: test acc mean=0.4941 ± 0.0221 | min=0.4375 max=0.5271
         : test loss mean=228.0767 ± 253.5999
         : individual accs = ['0.478070', '0.505181', '0.527063', '0.494819', '0.483245', '0.470742', '0.521397', '0.495120', '0.437500', '0.508865', '0.459790', '0.498667', '0.477431', '0.488793', '0.513345', '0.492576', '0.515598', '0.509284', '0.522040', '0.482033']
         : correct/total = [(545, 1140), (585, 1158), (594, 1127), (573, 1158), (548, 1134), (539, 1145), (597, 1145), (558, 1127), (497, 1136), (574, 1128), (526, 1144), (561, 1125), (550, 1152), (567, 1160), (577, 1124), (564, 1145), (595, 1154), (576, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.4948, honest: 0.4930
Round 007: test acc mean=0.5003 ± 0.0222 | min=0.4747 max=0.5625
         : test loss mean=0.8423 ± 0.1809
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.478603', '0.496007', '0.562500', '0.508865', '0.474650', '0.501333', '0.477431', '0.493103', '0.482206', '0.482969', '0.484402', '0.508400', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (548, 1145), (559, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (553, 1145), (559, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5026, honest: 0.4969
Round 008: test acc mean=0.5021 ± 0.0221 | min=0.4747 max=0.5625
         : test loss mean=0.7084 ± 0.0237
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.528497', '0.522046', '0.514410', '0.478603', '0.503993', '0.562500', '0.491135', '0.474650', '0.501333', '0.477431', '0.493103', '0.482206', '0.482969', '0.515598', '0.508400', '0.477960', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (612, 1158), (592, 1134), (589, 1145), (548, 1145), (568, 1127), (639, 1136), (554, 1128), (543, 1144), (564, 1125), (550, 1152), (572, 1160), (542, 1124), (553, 1145), (595, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5037, honest: 0.4996
Round 009: test acc mean=0.5221 ± 0.0207 | min=0.4911 max=0.5749
         : test loss mean=0.7060 ± 0.0249
         : individual accs = ['0.530702', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.520524', '0.503993', '0.564261', '0.491135', '0.536713', '0.502222', '0.523438', '0.510345', '0.545374', '0.524891', '0.519064', '0.508400', '0.517718', '0.574934']
         : correct/total = [(605, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (596, 1145), (568, 1127), (641, 1136), (554, 1128), (614, 1144), (565, 1125), (603, 1152), (592, 1160), (613, 1124), (601, 1145), (599, 1154), (575, 1131), (599, 1157), (656, 1141)]
         : compromised: 0.5201, honest: 0.5250
Round 010: test acc mean=0.5704 ± 0.0541 | min=0.4911 max=0.6629
         : test loss mean=0.6762 ± 0.0400
         : individual accs = ['0.636842', '0.553541', '0.529725', '0.526770', '0.644621', '0.514410', '0.522271', '0.503993', '0.662852', '0.491135', '0.610140', '0.567111', '0.522569', '0.575862', '0.662811', '0.606987', '0.577990', '0.513705', '0.560069', '0.624014']
         : correct/total = [(726, 1140), (641, 1158), (597, 1127), (610, 1158), (731, 1134), (589, 1145), (598, 1145), (568, 1127), (753, 1136), (554, 1128), (698, 1144), (638, 1125), (602, 1152), (668, 1160), (745, 1124), (695, 1145), (667, 1154), (581, 1131), (648, 1157), (712, 1141)]
         : compromised: 0.5664, honest: 0.5764

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.5664, Honest: 0.5764
Overall test accuracy: mean=0.5704 ± 0.0541

=== BALANCE SUMMARY ===
Node 0: acceptance=0.621
Node 1: acceptance=0.642
Node 2: acceptance=0.653
Node 3: acceptance=0.647
Node 4: acceptance=0.616
Node 5: acceptance=0.647
Node 6: acceptance=0.616
Node 7: acceptance=0.611
Node 8: acceptance=0.642
Node 9: acceptance=0.611
Node 10: acceptance=0.611
Node 11: acceptance=0.637
Node 12: acceptance=0.637
Node 13: acceptance=0.642
Node 14: acceptance=0.653
Node 15: acceptance=0.642
Node 16: acceptance=0.616
Node 17: acceptance=0.637
Node 18: acceptance=0.642
Node 19: acceptance=0.611

Performance Summary:
  - Distance computation time: 2.980s (45.0%)
  - Filtering time: 3.125s (47.2%)
  - Aggregation time: 0.517s (7.8%)
  - Total time: 6.622s
  - Mean acceptance rate: 0.632

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
