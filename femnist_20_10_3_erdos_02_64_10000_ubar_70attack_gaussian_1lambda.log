Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 6,603,710 parameters
  - Rho parameter: 0.30000000000000004
  - Stage 1: Distance-based filtering (select 30% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.3833 ± 0.1269 | min=0.0036 max=0.5328
         : test loss mean=44444025.4999 ± 193727000.0811
         : individual accs = ['0.450581', '0.404711', '0.421710', '0.417955', '0.494011', '0.352694', '0.410923', '0.482180', '0.413982', '0.428805', '0.150857', '0.481517', '0.268507', '0.003574', '0.532823', '0.349218', '0.442572', '0.504662', '0.230901', '0.424176']
         : correct/total = [(1860, 4128), (1701, 4203), (1721, 4081), (1811, 4333), (2021, 4091), (1512, 4287), (1723, 4193), (2097, 4349), (1735, 4191), (1834, 4277), (625, 4143), (2019, 4193), (1099, 4093), (15, 4197), (2159, 4052), (1407, 4029), (1838, 4153), (2111, 4183), (943, 4084), (1751, 4128)]
         : compromised: 0.3727, honest: 0.4082
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 002: test acc mean=0.6614 ± 0.1460 | min=0.0477 max=0.7457
         : test loss mean=nan ± nan
         : individual accs = ['0.737888', '0.674280', '0.702769', '0.667898', '0.730139', '0.677863', '0.732888', '0.745689', '0.679313', '0.711714', '0.650495', '0.573575', '0.665282', '0.047653', '0.695953', '0.674609', '0.723333', '0.695912', '0.735309', '0.704700']
         : correct/total = [(3046, 4128), (2834, 4203), (2868, 4081), (2894, 4333), (2987, 4091), (2906, 4287), (3073, 4193), (3243, 4349), (2847, 4191), (3044, 4277), (2695, 4143), (2405, 4193), (2723, 4093), (200, 4197), (2820, 4052), (2718, 4029), (3004, 4153), (2911, 4183), (3003, 4084), (2909, 4128)]
         : compromised: 0.6377, honest: 0.7165
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 003: test acc mean=0.7454 ± 0.1604 | min=0.0477 max=0.8009
         : test loss mean=nan ± nan
         : individual accs = ['0.795300', '0.782298', '0.784367', '0.768521', '0.786849', '0.782132', '0.784164', '0.800874', '0.787402', '0.776011', '0.764181', '0.762938', '0.783044', '0.047653', '0.792201', '0.788781', '0.786901', '0.784843', '0.781832', '0.766957']
         : correct/total = [(3283, 4128), (3288, 4203), (3201, 4081), (3330, 4333), (3219, 4091), (3353, 4287), (3288, 4193), (3483, 4349), (3300, 4191), (3319, 4277), (3166, 4143), (3199, 4193), (3205, 4093), (200, 4197), (3210, 4052), (3178, 4029), (3268, 4153), (3283, 4183), (3193, 4084), (3166, 4128)]
         : compromised: 0.7284, honest: 0.7850
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 004: test acc mean=0.7721 ± 0.1664 | min=0.0477 max=0.8260
         : test loss mean=nan ± nan
         : individual accs = ['0.807413', '0.813229', '0.812056', '0.799908', '0.809826', '0.813856', '0.817553', '0.823178', '0.819613', '0.809680', '0.803765', '0.795612', '0.814317', '0.047653', '0.817127', '0.826011', '0.810980', '0.797753', '0.809011', '0.792636']
         : correct/total = [(3333, 4128), (3418, 4203), (3314, 4081), (3466, 4333), (3313, 4091), (3489, 4287), (3428, 4193), (3580, 4349), (3435, 4191), (3463, 4277), (3330, 4143), (3336, 4193), (3333, 4093), (200, 4197), (3311, 4052), (3328, 4029), (3368, 4153), (3337, 4183), (3304, 4084), (3272, 4128)]
         : compromised: 0.7555, honest: 0.8108
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 005: test acc mean=0.7836 ± 0.1690 | min=0.0477 max=0.8338
         : test loss mean=nan ± nan
         : individual accs = ['0.819525', '0.831549', '0.819407', '0.817217', '0.826693', '0.825052', '0.822323', '0.833755', '0.832021', '0.824877', '0.814627', '0.797758', '0.826044', '0.047653', '0.829220', '0.817324', '0.822056', '0.819508', '0.829334', '0.816618']
         : correct/total = [(3383, 4128), (3495, 4203), (3344, 4081), (3541, 4333), (3382, 4091), (3537, 4287), (3448, 4193), (3626, 4349), (3487, 4191), (3528, 4277), (3375, 4143), (3345, 4193), (3381, 4093), (200, 4197), (3360, 4052), (3293, 4029), (3414, 4153), (3428, 4183), (3387, 4084), (3371, 4128)]
         : compromised: 0.7665, honest: 0.8236
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 006: test acc mean=0.7907 ± 0.1706 | min=0.0477 max=0.8387
         : test loss mean=nan ± nan
         : individual accs = ['0.827519', '0.835118', '0.827493', '0.828987', '0.827915', '0.832750', '0.829716', '0.836284', '0.837748', '0.838672', '0.823316', '0.801336', '0.829954', '0.047653', '0.832428', '0.834947', '0.831206', '0.831461', '0.832272', '0.827519']
         : correct/total = [(3416, 4128), (3510, 4203), (3377, 4081), (3592, 4333), (3387, 4091), (3570, 4287), (3479, 4193), (3637, 4349), (3511, 4191), (3587, 4277), (3411, 4143), (3360, 4193), (3397, 4093), (200, 4197), (3373, 4052), (3364, 4029), (3452, 4153), (3478, 4183), (3399, 4084), (3416, 4128)]
         : compromised: 0.7735, honest: 0.8308
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 007: test acc mean=0.7982 ± 0.1723 | min=0.0477 max=0.8525
         : test loss mean=nan ± nan
         : individual accs = ['0.835998', '0.852486', '0.840725', '0.839603', '0.838181', '0.838582', '0.842833', '0.846401', '0.838702', '0.844050', '0.827902', '0.819461', '0.834596', '0.047653', '0.834403', '0.831472', '0.845654', '0.842219', '0.835455', '0.827762']
         : correct/total = [(3451, 4128), (3583, 4203), (3431, 4081), (3638, 4333), (3429, 4091), (3595, 4287), (3534, 4193), (3681, 4349), (3515, 4191), (3610, 4277), (3430, 4143), (3436, 4193), (3416, 4093), (200, 4197), (3381, 4052), (3350, 4029), (3512, 4153), (3523, 4183), (3412, 4084), (3417, 4128)]
         : compromised: 0.7804, honest: 0.8397
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 008: test acc mean=0.8002 ± 0.1729 | min=0.0477 max=0.8512
         : test loss mean=nan ± nan
         : individual accs = ['0.828973', '0.839400', '0.840235', '0.851142', '0.841359', '0.847446', '0.851181', '0.850310', '0.844667', '0.846621', '0.830316', '0.816838', '0.839482', '0.047653', '0.841066', '0.838421', '0.840597', '0.839589', '0.845984', '0.822917']
         : correct/total = [(3422, 4128), (3528, 4203), (3429, 4081), (3688, 4333), (3442, 4091), (3633, 4287), (3569, 4193), (3698, 4349), (3540, 4191), (3621, 4277), (3440, 4143), (3425, 4193), (3436, 4093), (200, 4197), (3408, 4052), (3378, 4029), (3491, 4153), (3512, 4183), (3455, 4084), (3397, 4128)]
         : compromised: 0.7833, honest: 0.8397
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 009: test acc mean=0.8046 ± 0.1738 | min=0.0477 max=0.8560
         : test loss mean=nan ± nan
         : individual accs = ['0.837452', '0.848917', '0.845136', '0.855989', '0.839404', '0.843480', '0.851181', '0.854909', '0.854927', '0.851064', '0.834178', '0.820653', '0.840948', '0.047653', '0.838598', '0.848101', '0.844450', '0.848673', '0.841577', '0.843992']
         : correct/total = [(3457, 4128), (3568, 4203), (3449, 4081), (3709, 4333), (3434, 4091), (3616, 4287), (3569, 4193), (3718, 4349), (3583, 4191), (3640, 4277), (3456, 4143), (3441, 4193), (3442, 4093), (200, 4197), (3398, 4052), (3417, 4029), (3507, 4153), (3550, 4183), (3437, 4084), (3484, 4128)]
         : compromised: 0.7878, honest: 0.8436
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...
Round 010: test acc mean=0.8074 ± 0.1745 | min=0.0477 max=0.8574
         : test loss mean=nan ± nan
         : individual accs = ['0.843023', '0.853200', '0.850037', '0.855989', '0.842581', '0.847679', '0.856666', '0.854219', '0.853257', '0.857377', '0.832006', '0.821130', '0.845346', '0.047653', '0.848717', '0.847108', '0.843968', '0.855606', '0.848923', '0.843992']
         : correct/total = [(3480, 4128), (3586, 4203), (3469, 4081), (3709, 4333), (3447, 4091), (3634, 4287), (3592, 4193), (3715, 4349), (3576, 4191), (3667, 4277), (3447, 4143), (3443, 4193), (3460, 4093), (200, 4197), (3439, 4052), (3413, 4029), (3505, 4153), (3579, 4183), (3467, 4084), (3484, 4128)]
         : compromised: 0.7911, honest: 0.8455
         : ubar stats = ['Node 0: s1=0.167, s2=1.000', 'Node 1: s1=0.167, s2=1.000', 'Node 2: s1=0.200, s2=1.000']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: ubar
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.7911, Honest: 0.8455
Overall test accuracy: mean=0.8074 ± 0.1745

=== UBAR SUMMARY ===
Node 0: stage1=0.167, stage2=1.000, overall=0.167
Node 1: stage1=0.167, stage2=1.000, overall=0.167
Node 2: stage1=0.200, stage2=1.000, overall=0.200
Node 3: stage1=0.250, stage2=1.000, overall=0.250
Node 4: stage1=0.250, stage2=1.000, overall=0.250
Node 5: stage1=0.200, stage2=1.000, overall=0.200
Node 6: stage1=0.200, stage2=1.000, overall=0.200
Node 7: stage1=0.200, stage2=1.000, overall=0.200
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.333, stage2=1.000, overall=0.333
Node 10: stage1=0.250, stage2=1.000, overall=0.250
Node 11: stage1=0.286, stage2=0.800, overall=0.229
Node 12: stage1=0.286, stage2=0.650, overall=0.186
Node 13: stage1=0.250, stage2=1.000, overall=0.250
Node 14: stage1=0.286, stage2=0.500, overall=0.143
Node 15: stage1=0.167, stage2=1.000, overall=0.167
Node 16: stage1=0.200, stage2=1.000, overall=0.200
Node 17: stage1=0.200, stage2=1.000, overall=0.200
Node 18: stage1=0.250, stage2=1.000, overall=0.250
Node 19: stage1=0.500, stage2=1.000, overall=0.500

Performance Summary:
  - Distance computation time: 0.475s (0.5%)
  - Loss computation time: 95.934s (99.4%)
  - Aggregation time: 0.112s (0.1%)
  - Total time: 96.521s
  - Mean Stage 1 acceptance rate: 0.257
  - Mean Stage 2 acceptance rate: 0.948
  - Overall acceptance rate: 0.244

UBAR Algorithm Properties:
  - Model dimension: 6,603,710
  - Rho parameter: 0.30000000000000004
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 30% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
