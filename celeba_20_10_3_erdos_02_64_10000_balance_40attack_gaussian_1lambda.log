Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8668 ± 0.1225
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5191
Round 002: test acc mean=0.6100 ± 0.1559 | min=0.4911 max=0.9109
         : test loss mean=0.6450 ± 0.2161
         : individual accs = ['0.591228', '0.508636', '0.493345', '0.543178', '0.910935', '0.910044', '0.542358', '0.820763', '0.847711', '0.491135', '0.527972', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.889948', '0.508400', '0.522040', '0.529360']
         : correct/total = [(674, 1140), (589, 1158), (556, 1127), (629, 1158), (1033, 1134), (1042, 1145), (621, 1145), (925, 1127), (963, 1136), (554, 1128), (604, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (1027, 1154), (575, 1131), (604, 1157), (604, 1141)]
         : compromised: 0.5619, honest: 0.6421
Round 003: test acc mean=0.5284 ± 0.0548 | min=0.4911 max=0.7581
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.758107']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (865, 1141)]
         : compromised: 0.5124, honest: 0.5390
Round 004: test acc mean=0.5087 ± 0.0182 | min=0.4728 max=0.5616
         : test loss mean=nan ± nan
         : individual accs = ['0.510526', '0.508636', '0.506655', '0.525043', '0.522046', '0.510917', '0.520524', '0.494232', '0.561620', '0.507979', '0.513986', '0.503111', '0.479167', '0.506034', '0.489324', '0.517031', '0.512998', '0.494253', '0.472774', '0.517967']
         : correct/total = [(582, 1140), (589, 1158), (571, 1127), (608, 1158), (592, 1134), (585, 1145), (596, 1145), (557, 1127), (638, 1136), (573, 1128), (588, 1144), (566, 1125), (552, 1152), (587, 1160), (550, 1124), (592, 1145), (592, 1154), (559, 1131), (547, 1157), (591, 1141)]
         : compromised: 0.4955, honest: 0.5176
Round 005: test acc mean=0.5063 ± 0.0158 | min=0.4797 max=0.5332
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.507542', '0.528497', '0.517637', '0.489083', '0.531004', '0.496007', '0.513204', '0.515071', '0.498252', '0.504889', '0.501736', '0.496552', '0.511566', '0.486463', '0.496534', '0.533156', '0.479689', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (572, 1127), (612, 1158), (587, 1134), (560, 1145), (608, 1145), (559, 1127), (583, 1136), (581, 1128), (570, 1144), (568, 1125), (578, 1152), (576, 1160), (575, 1124), (557, 1145), (573, 1154), (603, 1131), (555, 1157), (550, 1141)]
         : compromised: 0.5032, honest: 0.5084
Round 006: test acc mean=0.5108 ± 0.0237 | min=0.4715 max=0.5737
         : test loss mean=98516.6212 ± 304584.7566
         : individual accs = ['0.488596', '0.508636', '0.495120', '0.471503', '0.522046', '0.502183', '0.521397', '0.501331', '0.563380', '0.500000', '0.524476', '0.496889', '0.495660', '0.520690', '0.500890', '0.483843', '0.573657', '0.508400', '0.520311', '0.517967']
         : correct/total = [(557, 1140), (589, 1158), (558, 1127), (546, 1158), (592, 1134), (575, 1145), (597, 1145), (565, 1127), (640, 1136), (564, 1128), (600, 1144), (559, 1125), (571, 1152), (604, 1160), (563, 1124), (554, 1145), (662, 1154), (575, 1131), (602, 1157), (591, 1141)]
         : compromised: 0.5067, honest: 0.5136
Round 007: test acc mean=0.5026 ± 0.0212 | min=0.4689 max=0.5625
         : test loss mean=1497414.9492 ± 4313017.6698
         : individual accs = ['0.484211', '0.494819', '0.506655', '0.468912', '0.519400', '0.503930', '0.478603', '0.496007', '0.562500', '0.491135', '0.525350', '0.501333', '0.477431', '0.506897', '0.517794', '0.482969', '0.484402', '0.508400', '0.522040', '0.518843']
         : correct/total = [(552, 1140), (573, 1158), (571, 1127), (543, 1158), (589, 1134), (577, 1145), (548, 1145), (559, 1127), (639, 1136), (554, 1128), (601, 1144), (564, 1125), (550, 1152), (588, 1160), (582, 1124), (553, 1145), (559, 1154), (575, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5041, honest: 0.5016
Round 008: test acc mean=0.5081 ± 0.0201 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.508429', '0.528497', '0.522046', '0.514410', '0.503057', '0.496007', '0.562500', '0.509752', '0.494755', '0.501333', '0.522569', '0.475000', '0.482206', '0.514410', '0.512998', '0.491600', '0.522040', '0.520596']
         : correct/total = [(537, 1140), (589, 1158), (573, 1127), (612, 1158), (592, 1134), (589, 1145), (576, 1145), (559, 1127), (639, 1136), (575, 1128), (566, 1144), (564, 1125), (602, 1152), (551, 1160), (542, 1124), (589, 1145), (592, 1154), (556, 1131), (604, 1157), (594, 1141)]
         : compromised: 0.5022, honest: 0.5120
Round 009: test acc mean=0.4954 ± 0.0206 | min=0.4375 max=0.5253
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.505768', '0.487910', '0.477954', '0.514410', '0.521397', '0.505768', '0.437500', '0.491135', '0.525350', '0.496000', '0.477431', '0.493103', '0.517794', '0.482969', '0.515598', '0.508400', '0.477960', '0.492550']
         : correct/total = [(537, 1140), (589, 1158), (570, 1127), (565, 1158), (542, 1134), (589, 1145), (597, 1145), (570, 1127), (497, 1136), (554, 1128), (601, 1144), (558, 1125), (550, 1152), (572, 1160), (582, 1124), (553, 1145), (595, 1154), (575, 1131), (553, 1157), (562, 1141)]
         : compromised: 0.4992, honest: 0.4929
Round 010: test acc mean=0.5016 ± 0.0239 | min=0.4375 max=0.5285
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.491364', '0.493345', '0.528497', '0.453263', '0.510044', '0.521397', '0.496007', '0.437500', '0.491135', '0.525350', '0.498667', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (569, 1158), (556, 1127), (612, 1158), (514, 1134), (584, 1145), (597, 1145), (559, 1127), (497, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5080, honest: 0.4973

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5080, Honest: 0.4973
Overall test accuracy: mean=0.5016 ± 0.0239

=== BALANCE SUMMARY ===
Node 0: acceptance=0.483
Node 1: acceptance=0.550
Node 2: acceptance=0.560
Node 3: acceptance=0.450
Node 4: acceptance=0.450
Node 5: acceptance=0.440
Node 6: acceptance=0.460
Node 7: acceptance=0.500
Node 8: acceptance=0.500
Node 9: acceptance=0.500
Node 10: acceptance=0.500
Node 11: acceptance=0.471
Node 12: acceptance=0.471
Node 13: acceptance=0.500
Node 14: acceptance=0.457
Node 15: acceptance=0.433
Node 16: acceptance=0.440
Node 17: acceptance=0.500
Node 18: acceptance=0.550
Node 19: acceptance=0.450

Performance Summary:
  - Distance computation time: 0.756s (39.9%)
  - Filtering time: 0.887s (46.9%)
  - Aggregation time: 0.251s (13.2%)
  - Total time: 1.894s
  - Mean acceptance rate: 0.483

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
