Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4983 ± 0.0345 | min=0.4467 max=0.5570
         : test loss mean=3.7481 ± 0.0250
         : individual accs = ['0.546512', '0.499167', '0.521931', '0.515117', '0.466879', '0.557033', '0.478893', '0.497586', '0.523503', '0.455226', '0.457157', '0.538040', '0.460298', '0.465094', '0.506663', '0.526433', '0.454370', '0.542912', '0.505877', '0.446705']
         : correct/total = [(2256, 4128), (2098, 4203), (2130, 4081), (2232, 4333), (1910, 4091), (2388, 4287), (2008, 4193), (2164, 4349), (2194, 4191), (1947, 4277), (1894, 4143), (2256, 4193), (1884, 4093), (1952, 4197), (2053, 4052), (2121, 4029), (1887, 4153), (2271, 4183), (2066, 4084), (1844, 4128)]
         : compromised: 0.5123, honest: 0.4842
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 002: test acc mean=0.6724 ± 0.0223 | min=0.6113 max=0.7075
         : test loss mean=3.4070 ± 0.0761
         : individual accs = ['0.678537', '0.672377', '0.656947', '0.696977', '0.684429', '0.694892', '0.611257', '0.684295', '0.650680', '0.707505', '0.660632', '0.682805', '0.680186', '0.667381', '0.704097', '0.672127', '0.640260', '0.651685', '0.680460', '0.671269']
         : correct/total = [(2801, 4128), (2826, 4203), (2681, 4081), (3020, 4333), (2800, 4091), (2979, 4287), (2563, 4193), (2976, 4349), (2727, 4191), (3026, 4277), (2737, 4143), (2863, 4193), (2784, 4093), (2801, 4197), (2853, 4052), (2708, 4029), (2659, 4153), (2726, 4183), (2779, 4084), (2771, 4128)]
         : compromised: 0.6763, honest: 0.6686
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 003: test acc mean=0.6780 ± 0.0291 | min=0.6235 max=0.7369
         : test loss mean=3.0003 ± 0.1887
         : individual accs = ['0.710514', '0.663098', '0.643960', '0.736903', '0.682474', '0.628645', '0.708800', '0.716027', '0.705560', '0.681319', '0.658219', '0.662533', '0.689714', '0.670479', '0.695212', '0.649044', '0.688659', '0.623476', '0.660382', '0.685562']
         : correct/total = [(2933, 4128), (2787, 4203), (2628, 4081), (3193, 4333), (2792, 4091), (2695, 4287), (2972, 4193), (3114, 4349), (2957, 4191), (2914, 4277), (2727, 4143), (2778, 4193), (2823, 4093), (2814, 4197), (2817, 4052), (2615, 4029), (2860, 4153), (2608, 4183), (2697, 4084), (2830, 4128)]
         : compromised: 0.6587, honest: 0.6974
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 004: test acc mean=0.6598 ± 0.0466 | min=0.5707 max=0.7250
         : test loss mean=2.2073 ± 0.2528
         : individual accs = ['0.684593', '0.617892', '0.570693', '0.712209', '0.713517', '0.607651', '0.713570', '0.724994', '0.718206', '0.685527', '0.645909', '0.639161', '0.577571', '0.669288', '0.678924', '0.660958', '0.686732', '0.591202', '0.642997', '0.655281']
         : correct/total = [(2826, 4128), (2597, 4203), (2329, 4081), (3086, 4333), (2919, 4091), (2605, 4287), (2992, 4193), (3153, 4349), (3010, 4191), (2932, 4277), (2676, 4143), (2680, 4193), (2364, 4093), (2809, 4197), (2751, 4052), (2663, 4029), (2852, 4153), (2473, 4183), (2626, 4084), (2705, 4128)]
         : compromised: 0.6256, honest: 0.6941
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 005: test acc mean=0.7191 ± 0.0318 | min=0.6467 max=0.7599
         : test loss mean=1.2921 ± 0.1685
         : individual accs = ['0.735223', '0.646681', '0.680470', '0.740826', '0.731850', '0.725216', '0.748390', '0.759945', '0.751611', '0.754968', '0.717113', '0.707608', '0.699243', '0.705980', '0.714215', '0.692231', '0.758006', '0.652403', '0.723800', '0.735465']
         : correct/total = [(3035, 4128), (2718, 4203), (2777, 4081), (3210, 4333), (2994, 4091), (3109, 4287), (3138, 4193), (3305, 4349), (3150, 4191), (3229, 4277), (2971, 4143), (2967, 4193), (2862, 4093), (2963, 4197), (2894, 4052), (2789, 4029), (3148, 4153), (2729, 4183), (2956, 4084), (3036, 4128)]
         : compromised: 0.6948, honest: 0.7433
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 006: test acc mean=0.7996 ± 0.0082 | min=0.7864 max=0.8153
         : test loss mean=0.7013 ± 0.0350
         : individual accs = ['0.788275', '0.793481', '0.797109', '0.801754', '0.786360', '0.800793', '0.803244', '0.811911', '0.815319', '0.810849', '0.795317', '0.788934', '0.793061', '0.803669', '0.809477', '0.802929', '0.806646', '0.795840', '0.795054', '0.791909']
         : correct/total = [(3254, 4128), (3335, 4203), (3253, 4081), (3474, 4333), (3217, 4091), (3433, 4287), (3368, 4193), (3531, 4349), (3417, 4191), (3468, 4277), (3295, 4143), (3308, 4193), (3246, 4093), (3373, 4197), (3280, 4052), (3235, 4029), (3350, 4153), (3329, 4183), (3247, 4084), (3269, 4128)]
         : compromised: 0.7980, honest: 0.8012
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 007: test acc mean=0.8252 ± 0.0063 | min=0.8154 max=0.8356
         : test loss mean=0.5555 ± 0.0209
         : individual accs = ['0.815407', '0.834642', '0.820387', '0.829910', '0.816671', '0.818988', '0.830909', '0.832145', '0.835600', '0.830956', '0.815593', '0.821846', '0.818715', '0.828449', '0.830454', '0.827997', '0.823742', '0.820942', '0.829089', '0.821705']
         : correct/total = [(3366, 4128), (3508, 4203), (3348, 4081), (3596, 4333), (3341, 4091), (3511, 4287), (3484, 4193), (3619, 4349), (3502, 4191), (3554, 4277), (3379, 4143), (3446, 4193), (3351, 4093), (3477, 4197), (3365, 4052), (3336, 4029), (3421, 4153), (3434, 4183), (3386, 4084), (3392, 4128)]
         : compromised: 0.8252, honest: 0.8253
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 008: test acc mean=0.8318 ± 0.0065 | min=0.8152 max=0.8421
         : test loss mean=0.5144 ± 0.0199
         : individual accs = ['0.823643', '0.832976', '0.828228', '0.840757', '0.827426', '0.839981', '0.832578', '0.836514', '0.834407', '0.833294', '0.823316', '0.834486', '0.825067', '0.831546', '0.842053', '0.837429', '0.828798', '0.830983', '0.836435', '0.815165']
         : correct/total = [(3400, 4128), (3501, 4203), (3380, 4081), (3643, 4333), (3385, 4091), (3601, 4287), (3491, 4193), (3638, 4349), (3497, 4191), (3564, 4277), (3411, 4143), (3499, 4193), (3377, 4093), (3490, 4197), (3412, 4052), (3374, 4029), (3442, 4153), (3476, 4183), (3416, 4084), (3365, 4128)]
         : compromised: 0.8339, honest: 0.8296
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 009: test acc mean=0.8420 ± 0.0058 | min=0.8314 max=0.8540
         : test loss mean=0.4819 ± 0.0185
         : individual accs = ['0.831395', '0.850821', '0.839990', '0.842834', '0.833048', '0.844180', '0.847126', '0.849161', '0.853973', '0.847557', '0.838764', '0.839971', '0.835329', '0.837741', '0.846989', '0.844626', '0.838189', '0.841262', '0.840597', '0.836967']
         : correct/total = [(3432, 4128), (3576, 4203), (3428, 4081), (3652, 4333), (3408, 4091), (3619, 4287), (3552, 4193), (3693, 4349), (3579, 4191), (3625, 4277), (3475, 4143), (3522, 4193), (3419, 4093), (3516, 4197), (3432, 4052), (3403, 4029), (3481, 4153), (3519, 4183), (3433, 4084), (3455, 4128)]
         : compromised: 0.8422, honest: 0.8419
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...
Round 010: test acc mean=0.8471 ± 0.0055 | min=0.8366 max=0.8568
         : test loss mean=0.4638 ± 0.0196
         : individual accs = ['0.839390', '0.856769', '0.842196', '0.850219', '0.838426', '0.843714', '0.851181', '0.852840', '0.851348', '0.851765', '0.836592', '0.843072', '0.844857', '0.849178', '0.849704', '0.855051', '0.845413', '0.849151', '0.848678', '0.842054']
         : correct/total = [(3465, 4128), (3601, 4203), (3437, 4081), (3684, 4333), (3430, 4091), (3617, 4287), (3569, 4193), (3709, 4349), (3568, 4191), (3643, 4277), (3466, 4143), (3535, 4193), (3458, 4093), (3564, 4197), (3443, 4052), (3445, 4029), (3511, 4153), (3552, 4183), (3466, 4084), (3476, 4128)]
         : compromised: 0.8482, honest: 0.8459
         : coarse stats = ['Node 0: acc_rate=0.474', 'Node 1: acc_rate=0.526', 'Node 2: acc_rate=0.526']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: coarse
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.8482, Honest: 0.8459
Overall test accuracy: mean=0.8471 ± 0.0055

=== COARSE SUMMARY ===
Node 0: acceptance=0.474
Node 1: acceptance=0.526
Node 2: acceptance=0.526
Node 3: acceptance=0.474
Node 4: acceptance=0.474
Node 5: acceptance=0.526
Node 6: acceptance=0.474
Node 7: acceptance=0.474
Node 8: acceptance=0.474
Node 9: acceptance=0.474
Node 10: acceptance=0.474
Node 11: acceptance=0.526
Node 12: acceptance=0.526
Node 13: acceptance=0.526
Node 14: acceptance=0.526
Node 15: acceptance=0.526
Node 16: acceptance=0.474
Node 17: acceptance=0.526
Node 18: acceptance=0.526
Node 19: acceptance=0.474

Performance Summary:
  - Sketching time: 16.459s (97.5%)
  - Filtering time: 0.028s (0.2%)
  - Aggregation time: 0.402s (2.4%)
  - Total time: 16.889s
  - Mean acceptance rate: 0.500

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
