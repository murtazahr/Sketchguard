Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8427 ± 0.0767
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7551 ± 0.0591
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 004: test acc mean=0.5081 ± 0.0242 | min=0.4382 max=0.5358
         : test loss mean=23.3578 ± 19.6175
         : individual accs = ['0.528070', '0.531952', '0.493345', '0.471503', '0.523810', '0.530131', '0.521397', '0.509317', '0.519366', '0.491135', '0.525350', '0.438222', '0.522569', '0.479310', '0.517794', '0.517031', '0.485269', '0.535809', '0.518583', '0.501315']
         : correct/total = [(602, 1140), (616, 1158), (556, 1127), (546, 1158), (594, 1134), (607, 1145), (597, 1145), (574, 1127), (590, 1136), (554, 1128), (601, 1144), (493, 1125), (602, 1152), (556, 1160), (582, 1124), (592, 1145), (560, 1154), (606, 1131), (600, 1157), (572, 1141)]
         : compromised: 0.5170, honest: 0.5058
Round 005: test acc mean=0.5025 ± 0.0215 | min=0.4689 max=0.5625
         : test loss mean=27.5713 ± 24.7661
         : individual accs = ['0.519298', '0.491364', '0.506655', '0.513817', '0.507055', '0.514410', '0.521397', '0.496007', '0.562500', '0.508865', '0.474650', '0.498667', '0.483507', '0.485345', '0.517794', '0.471616', '0.484402', '0.502210', '0.522040', '0.468887']
         : correct/total = [(592, 1140), (569, 1158), (571, 1127), (595, 1158), (575, 1134), (589, 1145), (597, 1145), (559, 1127), (639, 1136), (574, 1128), (543, 1144), (561, 1125), (557, 1152), (563, 1160), (582, 1124), (540, 1145), (559, 1154), (568, 1131), (604, 1157), (535, 1141)]
         : compromised: 0.4964, honest: 0.5041
Round 006: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7879 ± 0.1053
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7407 ± 0.0333
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 008: test acc mean=0.5168 ± 0.0153 | min=0.4911 max=0.5625
         : test loss mean=0.7451 ± 0.0471
         : individual accs = ['0.535965', '0.508636', '0.494232', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(611, 1140), (589, 1158), (557, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5177
Round 009: test acc mean=0.5186 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.7326 ± 0.0405
         : individual accs = ['0.529825', '0.508636', '0.511979', '0.538860', '0.522928', '0.514410', '0.526638', '0.503993', '0.562500', '0.491135', '0.526224', '0.498667', '0.522569', '0.506897', '0.520463', '0.517031', '0.515598', '0.509284', '0.527226', '0.517967']
         : correct/total = [(604, 1140), (589, 1158), (577, 1127), (624, 1158), (593, 1134), (589, 1145), (603, 1145), (568, 1127), (639, 1136), (554, 1128), (602, 1144), (561, 1125), (602, 1152), (588, 1160), (585, 1124), (592, 1145), (595, 1154), (576, 1131), (610, 1157), (591, 1141)]
         : compromised: 0.5133, honest: 0.5200
Round 010: test acc mean=0.5299 ± 0.0235 | min=0.4911 max=0.5856
         : test loss mean=0.7084 ± 0.0443
         : individual accs = ['0.528947', '0.508636', '0.515528', '0.561313', '0.522928', '0.514410', '0.544105', '0.585626', '0.562500', '0.491135', '0.527098', '0.501333', '0.522569', '0.506897', '0.540036', '0.524017', '0.564991', '0.514589', '0.540190', '0.520596']
         : correct/total = [(603, 1140), (589, 1158), (581, 1127), (650, 1158), (593, 1134), (589, 1145), (623, 1145), (660, 1127), (639, 1136), (554, 1128), (603, 1144), (564, 1125), (602, 1152), (588, 1160), (607, 1124), (600, 1145), (652, 1154), (582, 1131), (625, 1157), (594, 1141)]
         : compromised: 0.5146, honest: 0.5337

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.5146, Honest: 0.5337
Overall test accuracy: mean=0.5299 ± 0.0235

=== BALANCE SUMMARY ===
Node 0: acceptance=0.853
Node 1: acceptance=0.853
Node 2: acceptance=0.853
Node 3: acceptance=0.853
Node 4: acceptance=0.853
Node 5: acceptance=0.889
Node 6: acceptance=0.853
Node 7: acceptance=0.853
Node 8: acceptance=0.853
Node 9: acceptance=0.853
Node 10: acceptance=0.853
Node 11: acceptance=0.853
Node 12: acceptance=0.889
Node 13: acceptance=0.889
Node 14: acceptance=0.853
Node 15: acceptance=0.853
Node 16: acceptance=0.853
Node 17: acceptance=0.889
Node 18: acceptance=0.853
Node 19: acceptance=0.853

Performance Summary:
  - Distance computation time: 2.956s (44.4%)
  - Filtering time: 3.097s (46.6%)
  - Aggregation time: 0.598s (9.0%)
  - Total time: 6.651s
  - Mean acceptance rate: 0.860

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
