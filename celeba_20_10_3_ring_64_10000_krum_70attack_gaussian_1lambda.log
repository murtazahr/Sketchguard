Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 002: test acc mean=0.5028 ± 0.0260 | min=0.4486 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.482456', '0.512090', '0.493345', '0.529361', '0.530864', '0.482969', '0.495197', '0.496007', '0.562500', '0.448582', '0.513986', '0.498667', '0.522569', '0.506897', '0.517794', '0.482969', '0.515598', '0.451813', '0.522040', '0.490798']
         : correct/total = [(550, 1140), (593, 1158), (556, 1127), (613, 1158), (602, 1134), (553, 1145), (567, 1145), (559, 1127), (639, 1136), (506, 1128), (588, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (553, 1145), (595, 1154), (511, 1131), (604, 1157), (560, 1141)]
         : compromised: 0.5049, honest: 0.4979
Round 003: test acc mean=0.5072 ± 0.0184 | min=0.4727 max=0.5458
         : test loss mean=nan ± nan
         : individual accs = ['0.531579', '0.512090', '0.493345', '0.545769', '0.472663', '0.513537', '0.491703', '0.498669', '0.526408', '0.508865', '0.525350', '0.487111', '0.522569', '0.506897', '0.517794', '0.506550', '0.493934', '0.485411', '0.522040', '0.482033']
         : correct/total = [(606, 1140), (593, 1158), (556, 1127), (632, 1158), (536, 1134), (588, 1145), (563, 1145), (562, 1127), (598, 1136), (574, 1128), (601, 1144), (548, 1125), (602, 1152), (588, 1160), (582, 1124), (580, 1145), (570, 1154), (549, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5081, honest: 0.5052
Round 004: test acc mean=0.4950 ± 0.0248 | min=0.4259 max=0.5293
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.493955', '0.493345', '0.470639', '0.425926', '0.496070', '0.478603', '0.505768', '0.477113', '0.529255', '0.513112', '0.463111', '0.522569', '0.506897', '0.517794', '0.489956', '0.515598', '0.490716', '0.522040', '0.517090']
         : correct/total = [(537, 1140), (572, 1158), (556, 1127), (545, 1158), (483, 1134), (568, 1145), (548, 1145), (570, 1127), (542, 1136), (597, 1128), (587, 1144), (521, 1125), (602, 1152), (588, 1160), (582, 1124), (561, 1145), (595, 1154), (555, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.4957, honest: 0.4935
Round 005: test acc mean=0.5019 ± 0.0230 | min=0.4472 max=0.5372
         : test loss mean=nan ± nan
         : individual accs = ['0.511404', '0.483592', '0.493345', '0.528497', '0.478836', '0.537118', '0.478603', '0.496007', '0.447183', '0.537234', '0.485140', '0.476444', '0.522569', '0.506897', '0.517794', '0.516157', '0.515598', '0.502210', '0.522040', '0.482033']
         : correct/total = [(583, 1140), (560, 1158), (556, 1127), (612, 1158), (543, 1134), (615, 1145), (548, 1145), (559, 1127), (508, 1136), (606, 1128), (555, 1144), (536, 1125), (602, 1152), (588, 1160), (582, 1124), (591, 1145), (595, 1154), (568, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5010, honest: 0.5040
Round 006: test acc mean=0.5080 ± 0.0193 | min=0.4610 max=0.5576
         : test loss mean=nan ± nan
         : individual accs = ['0.492982', '0.500000', '0.493345', '0.509499', '0.522046', '0.514410', '0.503930', '0.507542', '0.536972', '0.557624', '0.502622', '0.495111', '0.522569', '0.506897', '0.517794', '0.490830', '0.461005', '0.508400', '0.522040', '0.495180']
         : correct/total = [(562, 1140), (579, 1158), (556, 1127), (590, 1158), (592, 1134), (589, 1145), (577, 1145), (572, 1127), (610, 1136), (629, 1128), (575, 1144), (557, 1125), (602, 1152), (588, 1160), (582, 1124), (562, 1145), (532, 1154), (575, 1131), (604, 1157), (565, 1141)]
         : compromised: 0.5084, honest: 0.5073
Round 007: test acc mean=0.5070 ± 0.0164 | min=0.4805 max=0.5423
         : test loss mean=nan ± nan
         : individual accs = ['0.532456', '0.493092', '0.493345', '0.524180', '0.542328', '0.489083', '0.521397', '0.498669', '0.491197', '0.480496', '0.493007', '0.508444', '0.522569', '0.506897', '0.517794', '0.515284', '0.494801', '0.492485', '0.522040', '0.500438']
         : correct/total = [(607, 1140), (571, 1158), (556, 1127), (607, 1158), (615, 1134), (560, 1145), (597, 1145), (562, 1127), (558, 1136), (542, 1128), (564, 1144), (572, 1125), (602, 1152), (588, 1160), (582, 1124), (590, 1145), (571, 1154), (557, 1131), (604, 1157), (571, 1141)]
         : compromised: 0.5070, honest: 0.5070
Round 008: test acc mean=0.5123 ± 0.0146 | min=0.4856 max=0.5461
         : test loss mean=nan ± nan
         : individual accs = ['0.508772', '0.508636', '0.493345', '0.528497', '0.522928', '0.485590', '0.516157', '0.497782', '0.492077', '0.546099', '0.525350', '0.506667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.491600', '0.522040', '0.520596']
         : correct/total = [(580, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (556, 1145), (591, 1145), (561, 1127), (559, 1136), (616, 1128), (601, 1144), (570, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (556, 1131), (604, 1157), (594, 1141)]
         : compromised: 0.5092, honest: 0.5194
Round 009: test acc mean=0.5076 ± 0.0254 | min=0.4500 max=0.5616
         : test loss mean=nan ± nan
         : individual accs = ['0.518421', '0.491364', '0.493345', '0.489637', '0.523810', '0.517904', '0.467249', '0.527950', '0.561620', '0.541667', '0.472902', '0.502222', '0.522569', '0.506897', '0.517794', '0.517031', '0.490468', '0.450044', '0.522040', '0.517090']
         : correct/total = [(591, 1140), (569, 1158), (556, 1127), (567, 1158), (594, 1134), (593, 1145), (535, 1145), (595, 1127), (638, 1136), (611, 1128), (541, 1144), (565, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (566, 1154), (509, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.5055, honest: 0.5125
Round 010: test acc mean=0.5104 ± 0.0128 | min=0.4680 max=0.5284
         : test loss mean=nan ± nan
         : individual accs = ['0.512281', '0.509499', '0.493345', '0.468048', '0.504409', '0.504803', '0.528384', '0.503993', '0.511444', '0.507979', '0.525350', '0.510222', '0.522569', '0.506897', '0.517794', '0.514410', '0.508666', '0.520778', '0.522040', '0.515337']
         : correct/total = [(584, 1140), (590, 1158), (556, 1127), (542, 1158), (572, 1134), (578, 1145), (605, 1145), (568, 1127), (581, 1136), (573, 1128), (601, 1144), (574, 1125), (602, 1152), (588, 1160), (582, 1124), (589, 1145), (587, 1154), (589, 1131), (604, 1157), (588, 1141)]
         : compromised: 0.5104, honest: 0.5104

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: krum
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.5104, Honest: 0.5104
Overall test accuracy: mean=0.5104 ± 0.0128
