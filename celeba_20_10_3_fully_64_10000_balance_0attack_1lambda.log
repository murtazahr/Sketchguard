Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Degree statistics: avg=19.00, min=19, max=19
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6954 ± 0.0335 | min=0.5908 max=0.7394
         : test loss mean=0.6808 ± 0.0034
         : individual accs = ['0.720175', '0.678756', '0.661934', '0.697755', '0.590829', '0.717904', '0.695197', '0.649512', '0.739437', '0.721631', '0.690559', '0.724444', '0.710938', '0.706897', '0.674377', '0.717031', '0.715771', '0.689655', '0.730337', '0.675723']
         : correct/total = [(821, 1140), (786, 1158), (746, 1127), (808, 1158), (670, 1134), (822, 1145), (796, 1145), (732, 1127), (840, 1136), (814, 1128), (790, 1144), (815, 1125), (819, 1152), (820, 1160), (758, 1124), (821, 1145), (826, 1154), (780, 1131), (845, 1157), (771, 1141)]
Round 002: test acc mean=0.6515 ± 0.0496 | min=0.5229 max=0.7292
         : test loss mean=0.6794 ± 0.0047
         : individual accs = ['0.648246', '0.666667', '0.683230', '0.660622', '0.522928', '0.549345', '0.648908', '0.654836', '0.663732', '0.647163', '0.687063', '0.678222', '0.729167', '0.655172', '0.567616', '0.690830', '0.682842', '0.622458', '0.690579', '0.680105']
         : correct/total = [(739, 1140), (772, 1158), (770, 1127), (765, 1158), (593, 1134), (629, 1145), (743, 1145), (738, 1127), (754, 1136), (730, 1128), (786, 1144), (763, 1125), (840, 1152), (760, 1160), (638, 1124), (791, 1145), (788, 1154), (704, 1131), (799, 1157), (776, 1141)]
Round 003: test acc mean=0.6288 ± 0.0511 | min=0.5178 max=0.6857
         : test loss mean=0.6717 ± 0.0070
         : individual accs = ['0.589474', '0.660622', '0.669920', '0.666667', '0.522046', '0.571179', '0.584279', '0.598048', '0.685739', '0.667553', '0.623252', '0.656889', '0.662326', '0.674138', '0.517794', '0.639301', '0.684575', '0.580018', '0.668107', '0.653812']
         : correct/total = [(672, 1140), (765, 1158), (755, 1127), (772, 1158), (592, 1134), (654, 1145), (669, 1145), (674, 1127), (779, 1136), (753, 1128), (713, 1144), (739, 1125), (763, 1152), (782, 1160), (582, 1124), (732, 1145), (790, 1154), (656, 1131), (773, 1157), (746, 1141)]
Round 004: test acc mean=0.6729 ± 0.0324 | min=0.5881 max=0.7173
         : test loss mean=0.6405 ± 0.0107
         : individual accs = ['0.671053', '0.675302', '0.684117', '0.695164', '0.630511', '0.667249', '0.643668', '0.637090', '0.700704', '0.681738', '0.705420', '0.717333', '0.704861', '0.702586', '0.588078', '0.634061', '0.707972', '0.671088', '0.688850', '0.652060']
         : correct/total = [(765, 1140), (782, 1158), (771, 1127), (805, 1158), (715, 1134), (764, 1145), (737, 1145), (718, 1127), (796, 1136), (769, 1128), (807, 1144), (807, 1125), (812, 1152), (815, 1160), (661, 1124), (726, 1145), (817, 1154), (759, 1131), (797, 1157), (744, 1141)]
Round 005: test acc mean=0.7374 ± 0.0122 | min=0.7160 max=0.7564
         : test loss mean=0.5668 ± 0.0124
         : individual accs = ['0.720175', '0.744387', '0.729370', '0.740069', '0.716049', '0.755459', '0.749345', '0.730257', '0.719190', '0.745567', '0.752622', '0.756444', '0.739583', '0.737931', '0.725979', '0.737118', '0.747834', '0.736516', '0.719965', '0.744961']
         : correct/total = [(821, 1140), (862, 1158), (822, 1127), (857, 1158), (812, 1134), (865, 1145), (858, 1145), (823, 1127), (817, 1136), (841, 1128), (861, 1144), (851, 1125), (852, 1152), (856, 1160), (816, 1124), (844, 1145), (863, 1154), (833, 1131), (833, 1157), (850, 1141)]
Round 006: test acc mean=0.7731 ± 0.0142 | min=0.7480 max=0.8033
         : test loss mean=0.4888 ± 0.0147
         : individual accs = ['0.750000', '0.788428', '0.782609', '0.772021', '0.775132', '0.786026', '0.765066', '0.756877', '0.771127', '0.790780', '0.803322', '0.792000', '0.776910', '0.769828', '0.765125', '0.766812', '0.759099', '0.748011', '0.764045', '0.778265']
         : correct/total = [(855, 1140), (913, 1158), (882, 1127), (894, 1158), (879, 1134), (900, 1145), (876, 1145), (853, 1127), (876, 1136), (892, 1128), (919, 1144), (891, 1125), (895, 1152), (893, 1160), (860, 1124), (878, 1145), (876, 1154), (846, 1131), (884, 1157), (888, 1141)]
Round 007: test acc mean=0.8144 ± 0.0137 | min=0.7952 max=0.8409
         : test loss mean=0.4152 ± 0.0159
         : individual accs = ['0.803509', '0.824698', '0.820763', '0.808290', '0.797178', '0.831441', '0.820087', '0.803904', '0.817782', '0.832447', '0.840909', '0.836444', '0.805556', '0.818103', '0.804270', '0.798253', '0.797227', '0.809903', '0.795160', '0.821209']
         : correct/total = [(916, 1140), (955, 1158), (925, 1127), (936, 1158), (904, 1134), (952, 1145), (939, 1145), (906, 1127), (929, 1136), (939, 1128), (962, 1144), (941, 1125), (928, 1152), (949, 1160), (904, 1124), (914, 1145), (920, 1154), (916, 1131), (920, 1157), (937, 1141)]
Round 008: test acc mean=0.8483 ± 0.0108 | min=0.8263 max=0.8638
         : test loss mean=0.3514 ± 0.0133
         : individual accs = ['0.847368', '0.863558', '0.855368', '0.855786', '0.835097', '0.863755', '0.844541', '0.831411', '0.855634', '0.854610', '0.863636', '0.846222', '0.841146', '0.847414', '0.856762', '0.832314', '0.854419', '0.841733', '0.826275', '0.849255']
         : correct/total = [(966, 1140), (1000, 1158), (964, 1127), (991, 1158), (947, 1134), (989, 1145), (967, 1145), (937, 1127), (972, 1136), (964, 1128), (988, 1144), (952, 1125), (969, 1152), (983, 1160), (963, 1124), (953, 1145), (986, 1154), (952, 1131), (956, 1157), (969, 1141)]
Round 009: test acc mean=0.8667 ± 0.0134 | min=0.8401 max=0.8869
         : test loss mean=0.3149 ± 0.0219
         : individual accs = ['0.866667', '0.886874', '0.846495', '0.873057', '0.856261', '0.878603', '0.875983', '0.872227', '0.863556', '0.875887', '0.885490', '0.881778', '0.863715', '0.869828', '0.866548', '0.846288', '0.863085', '0.845270', '0.840104', '0.875548']
         : correct/total = [(988, 1140), (1027, 1158), (954, 1127), (1011, 1158), (971, 1134), (1006, 1145), (1003, 1145), (983, 1127), (981, 1136), (988, 1128), (1013, 1144), (992, 1125), (995, 1152), (1009, 1160), (974, 1124), (969, 1145), (996, 1154), (956, 1131), (972, 1157), (999, 1141)]
Round 010: test acc mean=0.8797 ± 0.0092 | min=0.8557 max=0.8910
         : test loss mean=0.2904 ± 0.0152
         : individual accs = ['0.880702', '0.887737', '0.869565', '0.889465', '0.868607', '0.889956', '0.880349', '0.882875', '0.884683', '0.890957', '0.887238', '0.882667', '0.877604', '0.879310', '0.886121', '0.863755', '0.883016', '0.870911', '0.855661', '0.883436']
         : correct/total = [(1004, 1140), (1028, 1158), (980, 1127), (1030, 1158), (985, 1134), (1019, 1145), (1008, 1145), (995, 1127), (1005, 1136), (1005, 1128), (1015, 1144), (993, 1125), (1011, 1152), (1020, 1160), (996, 1124), (989, 1145), (1019, 1154), (985, 1131), (990, 1157), (1008, 1141)]

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: fully, Aggregation: balance
Overall test accuracy: mean=0.8797 ± 0.0092

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.060s (77.9%)
    - Aggregation: 0.017s (22.1%)
  TOTALS:
    - Total computation: 0.077s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.077s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.046s
  - Aggregation: 0.010s
  - Model transfer: 0.000s
  - Total per node: 0.056s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.925s
  - Total aggregation: 0.196s
  - Total model transfer: 0.000s
  - Grand total: 1.121s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
