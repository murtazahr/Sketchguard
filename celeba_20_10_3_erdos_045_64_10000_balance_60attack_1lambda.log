Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5154 ± 0.0179 | min=0.4774 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.538860', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.524476', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.515598', '0.505747', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (624, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (600, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (572, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5153, honest: 0.5157
Round 002: test acc mean=0.4979 ± 0.0200 | min=0.4585 max=0.5380
         : test loss mean=4.1137 ± 3.1122
         : individual accs = ['0.517544', '0.521589', '0.486247', '0.497409', '0.531746', '0.458515', '0.537991', '0.501331', '0.497359', '0.505319', '0.487762', '0.482667', '0.486111', '0.508621', '0.490214', '0.476856', '0.519931', '0.481874', '0.471046', '0.497809']
         : correct/total = [(590, 1140), (604, 1158), (548, 1127), (576, 1158), (603, 1134), (525, 1145), (616, 1145), (565, 1127), (565, 1136), (570, 1128), (558, 1144), (543, 1125), (560, 1152), (590, 1160), (551, 1124), (546, 1145), (600, 1154), (545, 1131), (545, 1157), (568, 1141)]
         : compromised: 0.4882, honest: 0.5124
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9052 ± 0.2185
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 004: test acc mean=0.5386 ± 0.0235 | min=0.4960 max=0.5810
         : test loss mean=14.0174 ± 7.7871
         : individual accs = ['0.567544', '0.519862', '0.504880', '0.533679', '0.551146', '0.508297', '0.560699', '0.496007', '0.580986', '0.537234', '0.544580', '0.507556', '0.529514', '0.560345', '0.565836', '0.549345', '0.564991', '0.520778', '0.527226', '0.541630']
         : correct/total = [(647, 1140), (602, 1158), (569, 1127), (618, 1158), (625, 1134), (582, 1145), (642, 1145), (559, 1127), (660, 1136), (606, 1128), (623, 1144), (571, 1125), (610, 1152), (650, 1160), (636, 1124), (629, 1145), (652, 1154), (589, 1131), (610, 1157), (618, 1141)]
         : compromised: 0.5340, honest: 0.5455
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8428 ± 0.1274
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 006: test acc mean=0.5590 ± 0.0436 | min=0.5164 max=0.7073
         : test loss mean=24.7681 ± 11.5416
         : individual accs = ['0.550877', '0.541451', '0.556344', '0.632124', '0.560847', '0.521397', '0.552838', '0.516415', '0.586268', '0.568262', '0.534091', '0.520000', '0.546875', '0.553448', '0.537367', '0.523144', '0.538995', '0.707339', '0.537597', '0.594216']
         : correct/total = [(628, 1140), (627, 1158), (627, 1127), (732, 1158), (636, 1134), (597, 1145), (633, 1145), (582, 1127), (666, 1136), (641, 1128), (611, 1144), (585, 1125), (630, 1152), (642, 1160), (604, 1124), (599, 1145), (622, 1154), (800, 1131), (622, 1157), (678, 1141)]
         : compromised: 0.5636, honest: 0.5521
Round 007: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9214 ± 0.1293
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 008: test acc mean=0.5966 ± 0.0723 | min=0.5233 max=0.7816
         : test loss mean=23.3339 ± 11.9971
         : individual accs = ['0.551754', '0.667530', '0.578527', '0.739206', '0.585538', '0.539738', '0.549345', '0.563443', '0.608275', '0.724291', '0.567308', '0.536000', '0.609375', '0.523276', '0.532918', '0.565939', '0.553726', '0.781609', '0.547969', '0.605609']
         : correct/total = [(629, 1140), (773, 1158), (652, 1127), (856, 1158), (664, 1134), (618, 1145), (629, 1145), (635, 1127), (691, 1136), (817, 1128), (649, 1144), (603, 1125), (702, 1152), (607, 1160), (599, 1124), (648, 1145), (639, 1154), (884, 1131), (634, 1157), (691, 1141)]
         : compromised: 0.6025, honest: 0.5876
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.9273 ± 0.0938
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 010: test acc mean=0.6261 ± 0.0794 | min=0.5319 max=0.7922
         : test loss mean=18.4415 ± 10.0472
         : individual accs = ['0.570175', '0.707254', '0.556344', '0.783247', '0.597884', '0.558952', '0.581659', '0.573203', '0.624120', '0.780142', '0.657343', '0.572444', '0.617188', '0.531897', '0.581851', '0.668122', '0.590121', '0.792219', '0.539326', '0.638037']
         : correct/total = [(650, 1140), (819, 1158), (627, 1127), (907, 1158), (678, 1134), (640, 1145), (666, 1145), (646, 1127), (709, 1136), (880, 1128), (752, 1144), (644, 1125), (711, 1152), (617, 1160), (654, 1124), (765, 1145), (681, 1154), (896, 1131), (624, 1157), (728, 1141)]
         : compromised: 0.6277, honest: 0.6236

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.6277, Honest: 0.6236
Overall test accuracy: mean=0.6261 ± 0.0794

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 1.529s (41.9%)
  - Filtering time: 1.668s (45.7%)
  - Aggregation time: 0.457s (12.5%)
  - Total time: 3.655s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
