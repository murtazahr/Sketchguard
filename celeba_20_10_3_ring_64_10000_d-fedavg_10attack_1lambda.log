/home/student.unimelb.edu.au/mrangwala/miniconda3/envs/edgedrift/lib/python3.12/site-packages/torch/_inductor/compile_fx.py:282: UserWarning: TensorFloat32 tensor cores for float32 matrix multiplication available but not enabled. Consider setting `torch.set_float32_matmul_precision('high')` for better performance.
  warnings.warn(
Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.5701 ± 0.0690 | min=0.4480 max=0.6617
         : test loss mean=121.3334 ± 203.6201
         : individual accs = ['0.565789', '0.642487', '0.596273', '0.613990', '0.447972', '0.517031', '0.460262', '0.507542', '0.637324', '0.610816', '0.661713', '0.598222', '0.479167', '0.538793', '0.475089', '0.590393', '0.521664', '0.650752', '0.648228', '0.638913']
         : correct/total = [(645, 1140), (744, 1158), (672, 1127), (711, 1158), (508, 1134), (592, 1145), (527, 1145), (572, 1127), (724, 1136), (689, 1128), (757, 1144), (673, 1125), (552, 1152), (625, 1160), (534, 1124), (676, 1145), (602, 1154), (736, 1131), (750, 1157), (729, 1141)]
         : compromised: 0.5279, honest: 0.5748
Round 002: test acc mean=0.5922 ± 0.0838 | min=0.4822 max=0.7069
         : test loss mean=44342.5846 ± 82792.4647
         : individual accs = ['0.653509', '0.654577', '0.671695', '0.528497', '0.522046', '0.514410', '0.521397', '0.500444', '0.706866', '0.641844', '0.680944', '0.497778', '0.522569', '0.493103', '0.482206', '0.518777', '0.684575', '0.679929', '0.695765', '0.672217']
         : correct/total = [(745, 1140), (758, 1158), (757, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (564, 1127), (803, 1136), (724, 1128), (779, 1144), (560, 1125), (602, 1152), (572, 1160), (542, 1124), (594, 1145), (790, 1154), (769, 1131), (805, 1157), (767, 1141)]
         : compromised: 0.5038, honest: 0.6020
Round 003: test acc mean=0.5782 ± 0.1062 | min=0.4799 max=0.7616
         : test loss mean=38285160677.2530 ± 166880967045.8310
         : individual accs = ['0.714035', '0.712435', '0.490683', '0.528497', '0.522046', '0.514410', '0.521397', '0.496894', '0.527289', '0.743794', '0.479895', '0.498667', '0.522569', '0.507759', '0.512456', '0.517031', '0.493068', '0.759505', '0.738980', '0.761613']
         : correct/total = [(814, 1140), (825, 1158), (553, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (560, 1127), (599, 1136), (839, 1128), (549, 1144), (561, 1125), (602, 1152), (589, 1160), (576, 1124), (592, 1145), (569, 1154), (859, 1131), (855, 1157), (869, 1141)]
         : compromised: 0.5111, honest: 0.5856
Round 004: test acc mean=0.5732 ± 0.1219 | min=0.4375 max=0.8195
         : test loss mean=nan ± nan
         : individual accs = ['0.791228', '0.734024', '0.493345', '0.528497', '0.475309', '0.514410', '0.479476', '0.503993', '0.437500', '0.603723', '0.474650', '0.498667', '0.521701', '0.506897', '0.517794', '0.517031', '0.515598', '0.728559', '0.802939', '0.819457']
         : correct/total = [(902, 1140), (850, 1158), (556, 1127), (612, 1158), (539, 1134), (589, 1145), (549, 1145), (568, 1127), (497, 1136), (681, 1128), (543, 1144), (561, 1125), (601, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (824, 1131), (929, 1157), (935, 1141)]
         : compromised: 0.5107, honest: 0.5802
Round 005: test acc mean=0.5510 ± 0.1093 | min=0.4771 max=0.8344
         : test loss mean=nan ± nan
         : individual accs = ['0.784211', '0.508636', '0.493345', '0.528497', '0.477072', '0.487336', '0.480349', '0.503993', '0.562500', '0.492021', '0.525350', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.515598', '0.509284', '0.800346', '0.834356']
         : correct/total = [(894, 1140), (589, 1158), (556, 1127), (612, 1158), (541, 1134), (558, 1145), (550, 1145), (568, 1127), (639, 1136), (555, 1128), (601, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (576, 1131), (926, 1157), (952, 1141)]
         : compromised: 0.4971, honest: 0.5570
Round 006: test acc mean=0.5237 ± 0.0821 | min=0.4684 max=0.8694
         : test loss mean=nan ± nan
         : individual accs = ['0.468421', '0.508636', '0.506655', '0.528497', '0.477954', '0.485590', '0.482096', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.477096', '0.869413']
         : correct/total = [(534, 1140), (589, 1158), (571, 1127), (612, 1158), (542, 1134), (556, 1145), (552, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (552, 1157), (992, 1141)]
         : compromised: 0.4962, honest: 0.5268
Round 007: test acc mean=0.5117 ± 0.0189 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5107, honest: 0.5118
Round 008: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170
Round 010: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5107, honest: 0.5170

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: d-fedavg
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.5107, Honest: 0.5170
Overall test accuracy: mean=0.5164 ± 0.0150
