Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4727 ± 0.0423 | min=0.3968 max=0.5517
         : test loss mean=3.7555 ± 0.0311
         : individual accs = ['0.539486', '0.471092', '0.497672', '0.451881', '0.435101', '0.551668', '0.439304', '0.495976', '0.483894', '0.413374', '0.396814', '0.530885', '0.431224', '0.460329', '0.484452', '0.492926', '0.458223', '0.530481', '0.464006', '0.425872']
         : correct/total = [(2227, 4128), (1980, 4203), (2031, 4081), (1958, 4333), (1780, 4091), (2365, 4287), (1842, 4193), (2157, 4349), (2028, 4191), (1768, 4277), (1644, 4143), (2226, 4193), (1765, 4093), (1932, 4197), (1963, 4052), (1986, 4029), (1903, 4153), (2219, 4183), (1895, 4084), (1758, 4128)]
         : compromised: 0.4875, honest: 0.4505
         : coarse stats = ['Node 0: acc_rate=0.438', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 002: test acc mean=0.6676 ± 0.0205 | min=0.6227 max=0.7017
         : test loss mean=3.3099 ± 0.1227
         : individual accs = ['0.690649', '0.668570', '0.639304', '0.689592', '0.674896', '0.701656', '0.622705', '0.667510', '0.650203', '0.699322', '0.653633', '0.683282', '0.676765', '0.654753', '0.685341', '0.655001', '0.647965', '0.646187', '0.674584', '0.669574']
         : correct/total = [(2851, 4128), (2810, 4203), (2609, 4081), (2988, 4333), (2761, 4091), (3008, 4287), (2611, 4193), (2903, 4349), (2725, 4191), (2991, 4277), (2708, 4143), (2865, 4193), (2770, 4093), (2748, 4197), (2777, 4052), (2639, 4029), (2691, 4153), (2703, 4183), (2755, 4084), (2764, 4128)]
         : compromised: 0.6688, honest: 0.6658
         : coarse stats = ['Node 0: acc_rate=0.438', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 003: test acc mean=0.6703 ± 0.0326 | min=0.5905 max=0.7272
         : test loss mean=2.7170 ± 0.2557
         : individual accs = ['0.711240', '0.684749', '0.590542', '0.727210', '0.691762', '0.643574', '0.702600', '0.683146', '0.646385', '0.676876', '0.682839', '0.666349', '0.668458', '0.677627', '0.685341', '0.608091', '0.684806', '0.631126', '0.652791', '0.691376']
         : correct/total = [(2936, 4128), (2878, 4203), (2410, 4081), (3151, 4333), (2830, 4091), (2759, 4287), (2946, 4193), (2971, 4349), (2709, 4191), (2895, 4277), (2829, 4143), (2794, 4193), (2736, 4093), (2844, 4197), (2777, 4052), (2450, 4029), (2844, 4153), (2640, 4183), (2666, 4084), (2854, 4128)]
         : compromised: 0.6569, honest: 0.6906
         : coarse stats = ['Node 0: acc_rate=0.438', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 004: test acc mean=0.6998 ± 0.0279 | min=0.6496 max=0.7451
         : test loss mean=1.7678 ± 0.2457
         : individual accs = ['0.723110', '0.686652', '0.655967', '0.705977', '0.745050', '0.649638', '0.731457', '0.719476', '0.727750', '0.725041', '0.711320', '0.669211', '0.650867', '0.706695', '0.692744', '0.694217', '0.729352', '0.689457', '0.670421', '0.710998']
         : correct/total = [(2985, 4128), (2886, 4203), (2677, 4081), (3059, 4333), (3048, 4091), (2785, 4287), (3067, 4193), (3129, 4349), (3050, 4191), (3101, 4277), (2947, 4143), (2806, 4193), (2664, 4093), (2966, 4197), (2807, 4052), (2797, 4029), (3029, 4153), (2884, 4183), (2738, 4084), (2935, 4128)]
         : compromised: 0.6833, honest: 0.7245
         : coarse stats = ['Node 0: acc_rate=0.438', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
Round 005: test acc mean=0.7679 ± 0.0149 | min=0.7383 max=0.7924
         : test loss mean=0.9708 ± 0.1067
         : individual accs = ['0.775921', '0.738282', '0.767704', '0.749365', '0.760450', '0.775834', '0.767470', '0.783858', '0.792412', '0.784195', '0.777215', '0.757453', '0.761544', '0.773410', '0.755183', '0.744353', '0.791235', '0.751614', '0.773262', '0.776405']
         : correct/total = [(3203, 4128), (3103, 4203), (3133, 4081), (3247, 4333), (3111, 4091), (3326, 4287), (3218, 4193), (3409, 4349), (3321, 4191), (3354, 4277), (3220, 4143), (3176, 4193), (3117, 4093), (3246, 4197), (3060, 4052), (2999, 4029), (3286, 4153), (3144, 4183), (3158, 4084), (3205, 4128)]
         : compromised: 0.7617, honest: 0.7771
         : coarse stats = ['Node 0: acc_rate=0.438', 'Node 1: acc_rate=0.545', 'Node 2: acc_rate=0.417']...
