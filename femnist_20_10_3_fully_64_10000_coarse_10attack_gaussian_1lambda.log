Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.5038 ± 0.0333 | min=0.4520 max=0.5584
         : test loss mean=3.7402 ± 0.0231
         : individual accs = ['0.558382', '0.505591', '0.527812', '0.506347', '0.458323', '0.546769', '0.494157', '0.493447', '0.539728', '0.467150', '0.476466', '0.530169', '0.472270', '0.463188', '0.520237', '0.542070', '0.465928', '0.546737', '0.509060', '0.452035']
         : correct/total = [(2305, 4128), (2125, 4203), (2154, 4081), (2194, 4333), (1875, 4091), (2344, 4287), (2072, 4193), (2146, 4349), (2262, 4191), (1998, 4277), (1974, 4143), (2223, 4193), (1933, 4093), (1944, 4197), (2108, 4052), (2184, 4029), (1935, 4153), (2287, 4183), (2079, 4084), (1866, 4128)]
         : compromised: 0.5050, honest: 0.5037
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 002: test acc mean=0.6824 ± 0.0184 | min=0.6337 max=0.7103
         : test loss mean=3.4432 ± 0.0318
         : individual accs = ['0.679264', '0.679753', '0.674099', '0.700669', '0.679540', '0.702123', '0.633675', '0.690044', '0.666189', '0.710311', '0.690321', '0.697830', '0.691180', '0.668811', '0.701876', '0.695458', '0.655189', '0.665073', '0.695642', '0.670785']
         : correct/total = [(2804, 4128), (2857, 4203), (2751, 4081), (3036, 4333), (2780, 4091), (3010, 4287), (2657, 4193), (3001, 4349), (2792, 4191), (3038, 4277), (2860, 4143), (2926, 4193), (2829, 4093), (2807, 4197), (2844, 4052), (2802, 4029), (2721, 4153), (2782, 4183), (2841, 4084), (2769, 4128)]
         : compromised: 0.6855, honest: 0.6820
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 003: test acc mean=0.7060 ± 0.0233 | min=0.6347 max=0.7369
         : test loss mean=3.1989 ± 0.0624
         : individual accs = ['0.736919', '0.698073', '0.682921', '0.727210', '0.692496', '0.634710', '0.714286', '0.727524', '0.725125', '0.681319', '0.702148', '0.729072', '0.733203', '0.704313', '0.725814', '0.711095', '0.687936', '0.701171', '0.697600', '0.706395']
         : correct/total = [(3042, 4128), (2934, 4203), (2787, 4081), (3151, 4333), (2833, 4091), (2721, 4287), (2995, 4193), (3164, 4349), (3039, 4191), (2914, 4277), (2909, 4143), (3057, 4193), (3001, 4093), (2956, 4197), (2941, 4052), (2865, 4029), (2857, 4153), (2933, 4183), (2849, 4084), (2916, 4128)]
         : compromised: 0.6695, honest: 0.7100
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 004: test acc mean=0.6928 ± 0.0260 | min=0.6377 max=0.7283
         : test loss mean=2.7621 ± 0.0931
         : individual accs = ['0.696705', '0.721389', '0.653271', '0.704362', '0.714006', '0.637742', '0.716909', '0.709588', '0.720830', '0.670563', '0.656288', '0.707846', '0.657708', '0.702645', '0.728282', '0.706379', '0.709848', '0.674874', '0.694417', '0.672965']
         : correct/total = [(2876, 4128), (3032, 4203), (2666, 4081), (3052, 4333), (2921, 4091), (2734, 4287), (3006, 4193), (3086, 4349), (3021, 4191), (2868, 4277), (2719, 4143), (2968, 4193), (2692, 4093), (2949, 4197), (2951, 4052), (2846, 4029), (2948, 4153), (2823, 4183), (2836, 4084), (2778, 4128)]
         : compromised: 0.6702, honest: 0.6953
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 005: test acc mean=0.6522 ± 0.0360 | min=0.5673 max=0.7071
         : test loss mean=2.1613 ± 0.1167
         : individual accs = ['0.679748', '0.645967', '0.567263', '0.631433', '0.689807', '0.595988', '0.682566', '0.683835', '0.675018', '0.676175', '0.638909', '0.666587', '0.647203', '0.606147', '0.658193', '0.631174', '0.697086', '0.609849', '0.707150', '0.653828']
         : correct/total = [(2806, 4128), (2715, 4203), (2315, 4081), (2736, 4333), (2822, 4091), (2555, 4287), (2862, 4193), (2974, 4349), (2829, 4191), (2892, 4277), (2647, 4143), (2795, 4193), (2649, 4093), (2544, 4197), (2667, 4052), (2543, 4029), (2895, 4153), (2551, 4183), (2888, 4084), (2699, 4128)]
         : compromised: 0.6011, honest: 0.6579
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 006: test acc mean=0.7033 ± 0.0225 | min=0.6326 max=0.7309
         : test loss mean=1.4059 ± 0.0902
         : individual accs = ['0.667393', '0.704259', '0.694683', '0.693515', '0.729650', '0.632610', '0.723587', '0.720625', '0.691720', '0.703998', '0.722906', '0.723110', '0.700220', '0.694544', '0.721372', '0.703649', '0.713219', '0.698303', '0.730901', '0.696463']
         : correct/total = [(2755, 4128), (2960, 4203), (2835, 4081), (3005, 4333), (2985, 4091), (2712, 4287), (3034, 4193), (3134, 4349), (2899, 4191), (3011, 4277), (2995, 4143), (3032, 4193), (2866, 4093), (2915, 4197), (2923, 4052), (2835, 4029), (2962, 4153), (2921, 4183), (2985, 4084), (2875, 4128)]
         : compromised: 0.6636, honest: 0.7078
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 007: test acc mean=0.7843 ± 0.0087 | min=0.7687 max=0.8006
         : test loss mean=0.8268 ± 0.0426
         : individual accs = ['0.781008', '0.789436', '0.768684', '0.784676', '0.778783', '0.783532', '0.800620', '0.795125', '0.788117', '0.788637', '0.781559', '0.778679', '0.771073', '0.777937', '0.794423', '0.777364', '0.789550', '0.781018', '0.800441', '0.774467']
         : correct/total = [(3224, 4128), (3318, 4203), (3137, 4081), (3400, 4333), (3186, 4091), (3359, 4287), (3357, 4193), (3458, 4349), (3303, 4191), (3373, 4277), (3238, 4143), (3265, 4193), (3156, 4093), (3265, 4197), (3219, 4052), (3132, 4029), (3279, 4153), (3267, 4183), (3269, 4084), (3197, 4128)]
         : compromised: 0.7807, honest: 0.7846
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 008: test acc mean=0.8174 ± 0.0072 | min=0.7984 max=0.8248
         : test loss mean=0.5926 ± 0.0228
         : individual accs = ['0.807655', '0.824411', '0.814996', '0.824833', '0.806404', '0.822487', '0.822561', '0.820878', '0.822715', '0.819967', '0.807627', '0.821846', '0.812851', '0.818203', '0.824038', '0.823281', '0.817000', '0.815683', '0.821988', '0.798450']
         : correct/total = [(3334, 4128), (3465, 4203), (3326, 4081), (3574, 4333), (3299, 4091), (3526, 4287), (3449, 4193), (3570, 4349), (3448, 4191), (3507, 4277), (3346, 4143), (3446, 4193), (3327, 4093), (3434, 4197), (3339, 4052), (3317, 4029), (3393, 4153), (3412, 4183), (3357, 4084), (3296, 4128)]
         : compromised: 0.8203, honest: 0.8171
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 009: test acc mean=0.8326 ± 0.0053 | min=0.8232 max=0.8447
         : test loss mean=0.5230 ± 0.0185
         : individual accs = ['0.823159', '0.833928', '0.831169', '0.838218', '0.826937', '0.833217', '0.837348', '0.834675', '0.844667', '0.840542', '0.827178', '0.828285', '0.831664', '0.833214', '0.837364', '0.835443', '0.830966', '0.829070', '0.830803', '0.824370']
         : correct/total = [(3398, 4128), (3505, 4203), (3392, 4081), (3632, 4333), (3383, 4091), (3572, 4287), (3511, 4193), (3630, 4349), (3540, 4191), (3595, 4277), (3427, 4143), (3473, 4193), (3404, 4093), (3497, 4197), (3393, 4052), (3366, 4029), (3451, 4153), (3468, 4183), (3393, 4084), (3403, 4128)]
         : compromised: 0.8332, honest: 0.8325
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...
Round 010: test acc mean=0.8406 ± 0.0055 | min=0.8311 max=0.8479
         : test loss mean=0.4916 ± 0.0193
         : individual accs = ['0.833091', '0.846538', '0.834844', '0.842372', '0.831093', '0.837649', '0.843787', '0.845712', '0.846815', '0.844985', '0.831282', '0.834248', '0.842170', '0.843698', '0.843781', '0.847853', '0.842042', '0.846283', '0.838149', '0.834787']
         : correct/total = [(3439, 4128), (3558, 4203), (3407, 4081), (3650, 4333), (3400, 4091), (3591, 4287), (3538, 4193), (3678, 4349), (3549, 4191), (3614, 4277), (3444, 4143), (3498, 4193), (3447, 4093), (3541, 4197), (3419, 4052), (3416, 4029), (3497, 4153), (3540, 4183), (3423, 4084), (3446, 4128)]
         : compromised: 0.8407, honest: 0.8405
         : coarse stats = ['Node 0: acc_rate=0.895', 'Node 1: acc_rate=0.895', 'Node 2: acc_rate=0.895']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: coarse
Attack: gaussian, 10.0% compromised
Final accuracy - Compromised: 0.8407, Honest: 0.8405
Overall test accuracy: mean=0.8406 ± 0.0055

=== COARSE SUMMARY ===
Node 0: acceptance=0.895
Node 1: acceptance=0.895
Node 2: acceptance=0.895
Node 3: acceptance=0.895
Node 4: acceptance=0.895
Node 5: acceptance=0.947
Node 6: acceptance=0.895
Node 7: acceptance=0.895
Node 8: acceptance=0.895
Node 9: acceptance=0.895
Node 10: acceptance=0.895
Node 11: acceptance=0.895
Node 12: acceptance=0.895
Node 13: acceptance=0.947
Node 14: acceptance=0.895
Node 15: acceptance=0.895
Node 16: acceptance=0.895
Node 17: acceptance=0.895
Node 18: acceptance=0.895
Node 19: acceptance=0.895

Performance Summary:
  - Sketching time: 13.517s (95.8%)
  - Filtering time: 0.028s (0.2%)
  - Aggregation time: 0.558s (4.0%)
  - Total time: 14.103s
  - Mean acceptance rate: 0.900

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
