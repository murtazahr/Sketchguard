Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4177 ± 0.0664 | min=0.2911 max=0.5328
         : test loss mean=3.7171 ± 0.0945
         : individual accs = ['0.512839', '0.390435', '0.457731', '0.411032', '0.494011', '0.352694', '0.358932', '0.386526', '0.413982', '0.397942', '0.315955', '0.484617', '0.390667', '0.334286', '0.532823', '0.453959', '0.442572', '0.507530', '0.291136', '0.424176']
         : correct/total = [(2117, 4128), (1641, 4203), (1868, 4081), (1781, 4333), (2021, 4091), (1512, 4287), (1505, 4193), (1681, 4349), (1735, 4191), (1702, 4277), (1309, 4143), (2032, 4193), (1599, 4093), (1403, 4197), (2159, 4052), (1829, 4029), (1838, 4153), (2123, 4183), (1189, 4084), (1751, 4128)]
         : compromised: 0.4196, honest: 0.4158
Round 002: test acc mean=0.6893 ± 0.0237 | min=0.6376 max=0.7180
         : test loss mean=2.1813 ± 0.8993
         : individual accs = ['0.718023', '0.664287', '0.637589', '0.709439', '0.700073', '0.704455', '0.669449', '0.703610', '0.708184', '0.691139', '0.698286', '0.640114', '0.692402', '0.717417', '0.695953', '0.669893', '0.716590', '0.663399', '0.681685', '0.704215']
         : correct/total = [(2964, 4128), (2792, 4203), (2602, 4081), (3074, 4333), (2864, 4091), (3020, 4287), (2807, 4193), (3060, 4349), (2968, 4191), (2956, 4277), (2893, 4143), (2684, 4193), (2834, 4093), (3011, 4197), (2820, 4052), (2699, 4029), (2976, 4153), (2775, 4183), (2784, 4084), (2907, 4128)]
         : compromised: 0.6767, honest: 0.7019
Round 003: test acc mean=0.7467 ± 0.0429 | min=0.6330 max=0.7939
         : test loss mean=1.5425 ± 0.8677
         : individual accs = ['0.778828', '0.699262', '0.700074', '0.759751', '0.779272', '0.774901', '0.744097', '0.788457', '0.780482', '0.748889', '0.757181', '0.632960', '0.731981', '0.793900', '0.789487', '0.719533', '0.778955', '0.688023', '0.699559', '0.787548']
         : correct/total = [(3215, 4128), (2939, 4203), (2857, 4081), (3292, 4333), (3188, 4091), (3322, 4287), (3120, 4193), (3429, 4349), (3271, 4191), (3203, 4277), (3137, 4143), (2654, 4193), (2996, 4093), (3332, 4197), (3199, 4052), (2899, 4029), (3235, 4153), (2878, 4183), (2857, 4084), (3251, 4128)]
         : compromised: 0.7230, honest: 0.7703
Round 004: test acc mean=0.7841 ± 0.0271 | min=0.7250 max=0.8160
         : test loss mean=1.1161 ± 0.6250
         : individual accs = ['0.791667', '0.724958', '0.749571', '0.798985', '0.801760', '0.804059', '0.785834', '0.816050', '0.810546', '0.792378', '0.789283', '0.725972', '0.774982', '0.809626', '0.812192', '0.783569', '0.795810', '0.752331', '0.756856', '0.804990']
         : correct/total = [(3268, 4128), (3047, 4203), (3059, 4081), (3462, 4333), (3280, 4091), (3447, 4287), (3295, 4193), (3549, 4349), (3397, 4191), (3389, 4277), (3270, 4143), (3044, 4193), (3172, 4093), (3398, 4197), (3291, 4052), (3157, 4029), (3305, 4153), (3147, 4183), (3091, 4084), (3323, 4128)]
         : compromised: 0.7694, honest: 0.7987
Round 005: test acc mean=0.8037 ± 0.0166 | min=0.7609 max=0.8258
         : test loss mean=0.8047 ± 0.3650
         : individual accs = ['0.813227', '0.760885', '0.761823', '0.807754', '0.813982', '0.815489', '0.799666', '0.816969', '0.825817', '0.804770', '0.804972', '0.794658', '0.807720', '0.812485', '0.820336', '0.795235', '0.813869', '0.794167', '0.795054', '0.814922']
         : correct/total = [(3357, 4128), (3198, 4203), (3109, 4081), (3500, 4333), (3330, 4091), (3496, 4287), (3353, 4193), (3553, 4349), (3461, 4191), (3442, 4277), (3335, 4143), (3332, 4193), (3306, 4093), (3410, 4197), (3324, 4052), (3204, 4029), (3380, 4153), (3322, 4183), (3247, 4084), (3364, 4128)]
         : compromised: 0.7958, honest: 0.8116
Round 006: test acc mean=0.8201 ± 0.0100 | min=0.7942 max=0.8354
         : test loss mean=0.6902 ± 0.2988
         : individual accs = ['0.816860', '0.806567', '0.794168', '0.824371', '0.817893', '0.824353', '0.824708', '0.835364', '0.829874', '0.821370', '0.814386', '0.822800', '0.817738', '0.832976', '0.830701', '0.812857', '0.826872', '0.825723', '0.802644', '0.820252']
         : correct/total = [(3372, 4128), (3390, 4203), (3241, 4081), (3572, 4333), (3346, 4091), (3534, 4287), (3458, 4193), (3633, 4349), (3478, 4191), (3513, 4277), (3374, 4143), (3450, 4193), (3347, 4093), (3496, 4197), (3366, 4052), (3275, 4029), (3434, 4153), (3454, 4183), (3278, 4084), (3386, 4128)]
         : compromised: 0.8171, honest: 0.8232
Round 007: test acc mean=0.8296 ± 0.0143 | min=0.7795 max=0.8439
         : test loss mean=0.6435 ± 0.3045
         : individual accs = ['0.828488', '0.842731', '0.779466', '0.838218', '0.827915', '0.830651', '0.835202', '0.843872', '0.835839', '0.835165', '0.819937', '0.837825', '0.830931', '0.841792', '0.836871', '0.817573', '0.837948', '0.836959', '0.812194', '0.821705']
         : correct/total = [(3420, 4128), (3542, 4203), (3181, 4081), (3632, 4333), (3387, 4091), (3561, 4287), (3502, 4193), (3670, 4349), (3503, 4191), (3572, 4277), (3397, 4143), (3513, 4193), (3401, 4093), (3533, 4197), (3391, 4052), (3294, 4029), (3480, 4153), (3501, 4183), (3317, 4084), (3392, 4128)]
         : compromised: 0.8267, honest: 0.8324
Round 008: test acc mean=0.8342 ± 0.0085 | min=0.8168 max=0.8476
         : test loss mean=0.5169 ± 0.0563
         : individual accs = ['0.829215', '0.838449', '0.817447', '0.842834', '0.833293', '0.843247', '0.839017', '0.847551', '0.839179', '0.840776', '0.827178', '0.838302', '0.831419', '0.839409', '0.841807', '0.816828', '0.834096', '0.837915', '0.823457', '0.823159']
         : correct/total = [(3423, 4128), (3524, 4203), (3336, 4081), (3652, 4333), (3409, 4091), (3615, 4287), (3518, 4193), (3686, 4349), (3517, 4191), (3596, 4277), (3427, 4143), (3515, 4193), (3403, 4093), (3523, 4197), (3411, 4052), (3291, 4029), (3464, 4153), (3505, 4183), (3363, 4084), (3398, 4128)]
         : compromised: 0.8328, honest: 0.8356
Round 009: test acc mean=0.8415 ± 0.0060 | min=0.8323 max=0.8521
         : test loss mean=0.4826 ± 0.0208
         : individual accs = ['0.833818', '0.848917', '0.844156', '0.845373', '0.834270', '0.841148', '0.846172', '0.852150', '0.851348', '0.850129', '0.839488', '0.839971', '0.843147', '0.840600', '0.838598', '0.834450', '0.834096', '0.840545', '0.832272', '0.838663']
         : correct/total = [(3442, 4128), (3568, 4203), (3445, 4081), (3663, 4333), (3413, 4091), (3606, 4287), (3548, 4193), (3706, 4349), (3568, 4191), (3636, 4277), (3478, 4143), (3522, 4193), (3451, 4093), (3528, 4197), (3398, 4052), (3362, 4029), (3464, 4153), (3516, 4183), (3399, 4084), (3462, 4128)]
         : compromised: 0.8404, honest: 0.8426
Round 010: test acc mean=0.8446 ± 0.0065 | min=0.8343 max=0.8532
         : test loss mean=0.4702 ± 0.0211
         : individual accs = ['0.841328', '0.852962', '0.841215', '0.849296', '0.836715', '0.835316', '0.852611', '0.851230', '0.851348', '0.853168', '0.835868', '0.845457', '0.846079', '0.851799', '0.847483', '0.836684', '0.834337', '0.847956', '0.841087', '0.839147']
         : correct/total = [(3473, 4128), (3585, 4203), (3433, 4081), (3680, 4333), (3423, 4091), (3581, 4287), (3575, 4193), (3702, 4349), (3568, 4191), (3649, 4277), (3463, 4143), (3545, 4193), (3463, 4093), (3575, 4197), (3434, 4052), (3371, 4029), (3465, 4153), (3547, 4183), (3435, 4084), (3464, 4128)]
         : compromised: 0.8446, honest: 0.8445

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.8446, Honest: 0.8445
Overall test accuracy: mean=0.8446 ± 0.0065

=== BALANCE SUMMARY ===
Node 0: acceptance=0.667
Node 1: acceptance=0.400
Node 2: acceptance=0.320
Node 3: acceptance=0.500
Node 4: acceptance=0.250
Node 5: acceptance=0.200
Node 6: acceptance=0.400
Node 7: acceptance=0.400
Node 8: acceptance=0.500
Node 9: acceptance=0.667
Node 10: acceptance=0.500
Node 11: acceptance=0.343
Node 12: acceptance=0.471
Node 13: acceptance=0.250
Node 14: acceptance=0.143
Node 15: acceptance=0.283
Node 16: acceptance=0.200
Node 17: acceptance=0.480
Node 18: acceptance=0.425
Node 19: acceptance=0.500

Performance Summary:
  - Distance computation time: 2.140s (43.8%)
  - Filtering time: 2.598s (53.2%)
  - Aggregation time: 0.147s (3.0%)
  - Total time: 4.886s
  - Mean acceptance rate: 0.395

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
