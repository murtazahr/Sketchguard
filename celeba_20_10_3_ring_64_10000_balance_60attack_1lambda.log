Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5158
Round 002: test acc mean=0.4955 ± 0.0202 | min=0.4737 max=0.5625
         : test loss mean=11.3465 ± 9.4546
         : individual accs = ['0.473684', '0.501727', '0.506655', '0.493955', '0.482363', '0.504803', '0.475983', '0.497782', '0.562500', '0.531028', '0.500874', '0.497778', '0.477431', '0.491379', '0.489324', '0.485590', '0.485269', '0.491600', '0.479689', '0.481157']
         : correct/total = [(540, 1140), (581, 1158), (571, 1127), (572, 1158), (547, 1134), (578, 1145), (545, 1145), (561, 1127), (639, 1136), (599, 1128), (573, 1144), (560, 1125), (550, 1152), (570, 1160), (550, 1124), (556, 1145), (560, 1154), (556, 1131), (555, 1157), (549, 1141)]
         : compromised: 0.4985, honest: 0.4910
Round 003: test acc mean=0.5171 ± 0.0149 | min=0.4911 max=0.5625
         : test loss mean=0.8756 ± 0.1590
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.522414', '0.517794', '0.517031', '0.515598', '0.507515', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (606, 1160), (582, 1124), (592, 1145), (595, 1154), (574, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5180, honest: 0.5158
Round 004: test acc mean=0.5617 ± 0.0587 | min=0.4938 max=0.6879
         : test loss mean=3.8156 ± 3.4178
         : individual accs = ['0.591228', '0.638169', '0.505768', '0.591537', '0.493827', '0.514410', '0.497817', '0.512866', '0.562500', '0.687943', '0.647727', '0.590222', '0.531250', '0.506897', '0.499110', '0.650655', '0.506066', '0.586207', '0.535004', '0.585451']
         : correct/total = [(674, 1140), (739, 1158), (570, 1127), (685, 1158), (560, 1134), (589, 1145), (570, 1145), (578, 1127), (639, 1136), (776, 1128), (741, 1144), (664, 1125), (612, 1152), (588, 1160), (561, 1124), (745, 1145), (584, 1154), (663, 1131), (619, 1157), (668, 1141)]
         : compromised: 0.5593, honest: 0.5654
Round 005: test acc mean=0.5240 ± 0.0380 | min=0.4911 max=0.6796
         : test loss mean=0.8817 ± 0.2206
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.549345', '0.521397', '0.503993', '0.679577', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (629, 1145), (597, 1145), (568, 1127), (772, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5294, honest: 0.5158
Round 006: test acc mean=0.6174 ± 0.1012 | min=0.4810 max=0.7677
         : test loss mean=3.8375 ± 3.6783
         : individual accs = ['0.719298', '0.740069', '0.483585', '0.626943', '0.520282', '0.514410', '0.692576', '0.694765', '0.584507', '0.767730', '0.725524', '0.745778', '0.522569', '0.481034', '0.503559', '0.586026', '0.516464', '0.514589', '0.690579', '0.718668']
         : correct/total = [(820, 1140), (857, 1158), (545, 1127), (726, 1158), (590, 1134), (589, 1145), (793, 1145), (783, 1127), (664, 1136), (866, 1128), (830, 1144), (839, 1125), (602, 1152), (558, 1160), (566, 1124), (671, 1145), (596, 1154), (582, 1131), (799, 1157), (820, 1141)]
         : compromised: 0.5828, honest: 0.6694
Round 007: test acc mean=0.5475 ± 0.0730 | min=0.4911 max=0.7921
         : test loss mean=0.9124 ± 0.2641
         : individual accs = ['0.574561', '0.582038', '0.493345', '0.528497', '0.522046', '0.792140', '0.521397', '0.503993', '0.705986', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.559205', '0.563541']
         : correct/total = [(655, 1140), (674, 1158), (556, 1127), (612, 1158), (592, 1134), (907, 1145), (597, 1145), (568, 1127), (802, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (647, 1157), (643, 1141)]
         : compromised: 0.5610, honest: 0.5272
Round 008: test acc mean=0.6420 ± 0.1177 | min=0.4871 max=0.7939
         : test loss mean=4.0359 ± 4.0850
         : individual accs = ['0.774561', '0.784111', '0.494232', '0.675302', '0.526455', '0.514410', '0.793886', '0.787933', '0.582746', '0.748227', '0.735140', '0.735111', '0.521701', '0.487069', '0.516904', '0.585153', '0.514731', '0.545535', '0.745030', '0.772130']
         : correct/total = [(883, 1140), (908, 1158), (557, 1127), (782, 1158), (597, 1134), (589, 1145), (909, 1145), (888, 1127), (662, 1136), (844, 1128), (841, 1144), (827, 1125), (601, 1152), (565, 1160), (581, 1124), (670, 1145), (594, 1154), (617, 1131), (862, 1157), (881, 1141)]
         : compromised: 0.5989, honest: 0.7066
Round 009: test acc mean=0.5494 ± 0.0761 | min=0.4911 max=0.7965
         : test loss mean=0.9733 ± 0.3627
         : individual accs = ['0.590351', '0.575130', '0.493345', '0.528497', '0.522046', '0.796507', '0.521397', '0.503993', '0.722711', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.546240', '0.583699']
         : correct/total = [(673, 1140), (666, 1158), (556, 1127), (612, 1158), (592, 1134), (912, 1145), (597, 1145), (568, 1127), (821, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (632, 1157), (666, 1141)]
         : compromised: 0.5611, honest: 0.5317
Round 010: test acc mean=0.6492 ± 0.1168 | min=0.4898 max=0.8148
         : test loss mean=3.7275 ± 3.7084
         : individual accs = ['0.762281', '0.776339', '0.489796', '0.689119', '0.516755', '0.514410', '0.814847', '0.800355', '0.602993', '0.733156', '0.715909', '0.758222', '0.519965', '0.493966', '0.524911', '0.607860', '0.517331', '0.608311', '0.766638', '0.770377']
         : correct/total = [(869, 1140), (899, 1158), (552, 1127), (798, 1158), (586, 1134), (589, 1145), (933, 1145), (902, 1127), (685, 1136), (827, 1128), (819, 1144), (853, 1125), (599, 1152), (573, 1160), (590, 1124), (696, 1145), (597, 1154), (688, 1131), (887, 1157), (879, 1141)]
         : compromised: 0.6127, honest: 0.7039

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.6127, Honest: 0.7039
Overall test accuracy: mean=0.6492 ± 0.1168

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.321s (31.3%)
  - Filtering time: 0.456s (44.5%)
  - Aggregation time: 0.248s (24.2%)
  - Total time: 1.026s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
