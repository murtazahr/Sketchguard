Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4348 ± 0.0591 | min=0.2925 max=0.5321
         : test loss mean=3.7768 ± 0.0342
         : individual accs = ['0.510901', '0.449441', '0.484440', '0.450265', '0.436079', '0.532074', '0.370856', '0.441481', '0.376283', '0.399579', '0.292542', '0.517768', '0.348400', '0.446509', '0.431885', '0.448002', '0.441608', '0.510638', '0.392262', '0.415940']
         : correct/total = [(2109, 4128), (1889, 4203), (1977, 4081), (1951, 4333), (1784, 4091), (2281, 4287), (1555, 4193), (1920, 4349), (1577, 4191), (1709, 4277), (1212, 4143), (2171, 4193), (1426, 4093), (1874, 4197), (1750, 4052), (1805, 4029), (1834, 4153), (2136, 4183), (1602, 4084), (1717, 4128)]
         : compromised: 0.4411, honest: 0.4204
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 002: test acc mean=0.6638 ± 0.0259 | min=0.6086 max=0.6957
         : test loss mean=3.1790 ± 0.2167
         : individual accs = ['0.692103', '0.680704', '0.625582', '0.688668', '0.682474', '0.692792', '0.608633', '0.648655', '0.661417', '0.691139', '0.639633', '0.695683', '0.676765', '0.648797', '0.685834', '0.643584', '0.668432', '0.653359', '0.672625', '0.619186']
         : correct/total = [(2857, 4128), (2861, 4203), (2553, 4081), (2984, 4333), (2792, 4091), (2970, 4287), (2552, 4193), (2821, 4349), (2772, 4191), (2956, 4277), (2650, 4143), (2917, 4193), (2770, 4093), (2723, 4197), (2779, 4052), (2593, 4029), (2776, 4153), (2733, 4183), (2747, 4084), (2556, 4128)]
         : compromised: 0.6610, honest: 0.6704
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 003: test acc mean=0.6731 ± 0.0450 | min=0.5764 max=0.7357
         : test loss mean=2.2046 ± 0.4121
         : individual accs = ['0.706880', '0.647157', '0.588336', '0.735749', '0.719628', '0.612783', '0.658001', '0.700621', '0.732045', '0.703063', '0.698286', '0.576437', '0.682385', '0.705980', '0.675222', '0.643088', '0.725740', '0.658379', '0.648139', '0.644380']
         : correct/total = [(2918, 4128), (2720, 4203), (2401, 4081), (3188, 4333), (2944, 4091), (2627, 4287), (2759, 4193), (3047, 4349), (3068, 4191), (3007, 4277), (2893, 4143), (2417, 4193), (2793, 4093), (2963, 4197), (2736, 4052), (2591, 4029), (3014, 4153), (2754, 4183), (2647, 4084), (2660, 4128)]
         : compromised: 0.6577, honest: 0.7090
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 004: test acc mean=0.7635 ± 0.0203 | min=0.7054 max=0.7903
         : test loss mean=1.0960 ± 0.2045
         : individual accs = ['0.772771', '0.758268', '0.762803', '0.772213', '0.777805', '0.742944', '0.762461', '0.781329', '0.790265', '0.779285', '0.770939', '0.730026', '0.744442', '0.785085', '0.763820', '0.771407', '0.786179', '0.763328', '0.748776', '0.705426']
         : correct/total = [(3190, 4128), (3187, 4203), (3113, 4081), (3346, 4333), (3182, 4091), (3185, 4287), (3197, 4193), (3398, 4349), (3312, 4191), (3333, 4277), (3194, 4143), (3061, 4193), (3047, 4093), (3295, 4197), (3095, 4052), (3108, 4029), (3265, 4153), (3193, 4183), (3058, 4084), (2912, 4128)]
         : compromised: 0.7572, honest: 0.7781
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 005: test acc mean=0.8048 ± 0.0073 | min=0.7903 max=0.8187
         : test loss mean=0.6733 ± 0.0432
         : individual accs = ['0.800872', '0.799191', '0.808135', '0.802908', '0.796871', '0.808258', '0.795850', '0.810991', '0.818659', '0.810147', '0.800145', '0.795612', '0.802101', '0.815583', '0.813179', '0.803673', '0.809535', '0.790342', '0.811214', '0.802326']
         : correct/total = [(3306, 4128), (3359, 4203), (3298, 4081), (3479, 4333), (3260, 4091), (3465, 4287), (3337, 4193), (3527, 4349), (3431, 4191), (3465, 4277), (3315, 4143), (3336, 4193), (3283, 4093), (3423, 4197), (3295, 4052), (3238, 4029), (3362, 4153), (3306, 4183), (3313, 4084), (3312, 4128)]
         : compromised: 0.8048, honest: 0.8048
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 006: test acc mean=0.8232 ± 0.0053 | min=0.8129 max=0.8318
         : test loss mean=0.5629 ± 0.0196
         : individual accs = ['0.813953', '0.826077', '0.818917', '0.825987', '0.818382', '0.823186', '0.820415', '0.830996', '0.829874', '0.822773', '0.812937', '0.820415', '0.821647', '0.831785', '0.830207', '0.824274', '0.827354', '0.825484', '0.821743', '0.817103']
         : correct/total = [(3360, 4128), (3472, 4203), (3342, 4081), (3579, 4333), (3348, 4091), (3529, 4287), (3440, 4193), (3614, 4349), (3478, 4191), (3519, 4277), (3368, 4143), (3440, 4193), (3363, 4093), (3491, 4197), (3364, 4052), (3321, 4029), (3436, 4153), (3453, 4183), (3356, 4084), (3373, 4128)]
         : compromised: 0.8241, honest: 0.8211
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 007: test acc mean=0.8353 ± 0.0056 | min=0.8231 max=0.8458
         : test loss mean=0.5139 ± 0.0196
         : individual accs = ['0.827035', '0.845824', '0.835089', '0.839603', '0.827182', '0.833450', '0.841641', '0.842722', '0.837032', '0.837737', '0.823075', '0.836871', '0.832397', '0.837741', '0.836377', '0.834450', '0.836022', '0.836959', '0.837659', '0.826550']
         : correct/total = [(3414, 4128), (3555, 4203), (3408, 4081), (3638, 4333), (3384, 4091), (3573, 4287), (3529, 4193), (3665, 4349), (3508, 4191), (3583, 4277), (3410, 4143), (3509, 4193), (3407, 4093), (3516, 4197), (3389, 4052), (3362, 4029), (3472, 4153), (3501, 4183), (3421, 4084), (3412, 4128)]
         : compromised: 0.8365, honest: 0.8323
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 008: test acc mean=0.8378 ± 0.0068 | min=0.8198 max=0.8466
         : test loss mean=0.4909 ± 0.0206
         : individual accs = ['0.828004', '0.839400', '0.835089', '0.842142', '0.833781', '0.844180', '0.844980', '0.845252', '0.839656', '0.846621', '0.826454', '0.840210', '0.833618', '0.838456', '0.845508', '0.838918', '0.838912', '0.834808', '0.839618', '0.819767']
         : correct/total = [(3418, 4128), (3528, 4203), (3408, 4081), (3649, 4333), (3411, 4091), (3619, 4287), (3543, 4193), (3676, 4349), (3519, 4191), (3621, 4277), (3424, 4143), (3523, 4193), (3412, 4093), (3519, 4197), (3426, 4052), (3380, 4029), (3484, 4153), (3492, 4183), (3429, 4084), (3384, 4128)]
         : compromised: 0.8383, honest: 0.8365
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 009: test acc mean=0.8462 ± 0.0063 | min=0.8343 max=0.8555
         : test loss mean=0.4685 ± 0.0180
         : individual accs = ['0.838663', '0.851297', '0.843421', '0.851835', '0.834270', '0.847213', '0.855473', '0.853530', '0.853018', '0.854805', '0.835626', '0.843072', '0.839726', '0.846319', '0.852419', '0.849342', '0.840356', '0.847717', '0.843046', '0.843508']
         : correct/total = [(3462, 4128), (3578, 4203), (3442, 4081), (3691, 4333), (3413, 4091), (3632, 4287), (3587, 4193), (3712, 4349), (3575, 4191), (3656, 4277), (3462, 4143), (3535, 4193), (3437, 4093), (3552, 4197), (3454, 4052), (3422, 4029), (3490, 4153), (3546, 4183), (3443, 4084), (3482, 4128)]
         : compromised: 0.8477, honest: 0.8429
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...
Round 010: test acc mean=0.8502 ± 0.0056 | min=0.8396 max=0.8615
         : test loss mean=0.4553 ± 0.0187
         : individual accs = ['0.842054', '0.861527', '0.844891', '0.853912', '0.839648', '0.846279', '0.857858', '0.853070', '0.853734', '0.851064', '0.841178', '0.848557', '0.846812', '0.855373', '0.852912', '0.856292', '0.849747', '0.852976', '0.849412', '0.846172']
         : correct/total = [(3476, 4128), (3621, 4203), (3448, 4081), (3700, 4333), (3435, 4091), (3628, 4287), (3597, 4193), (3710, 4349), (3578, 4191), (3640, 4277), (3485, 4143), (3558, 4193), (3466, 4093), (3590, 4197), (3456, 4052), (3450, 4029), (3529, 4153), (3568, 4183), (3469, 4084), (3493, 4128)]
         : compromised: 0.8519, honest: 0.8461
         : coarse stats = ['Node 0: acc_rate=0.312', 'Node 1: acc_rate=0.364', 'Node 2: acc_rate=0.333']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.8519, Honest: 0.8461
Overall test accuracy: mean=0.8502 ± 0.0056

=== COARSE SUMMARY ===
Node 0: acceptance=0.312
Node 1: acceptance=0.364
Node 2: acceptance=0.333
Node 3: acceptance=0.375
Node 4: acceptance=0.364
Node 5: acceptance=0.267
Node 6: acceptance=0.286
Node 7: acceptance=0.286
Node 8: acceptance=0.200
Node 9: acceptance=0.308
Node 10: acceptance=0.222
Node 11: acceptance=0.357
Node 12: acceptance=0.333
Node 13: acceptance=0.231
Node 14: acceptance=0.267
Node 15: acceptance=0.273
Node 16: acceptance=0.231
Node 17: acceptance=0.444
Node 18: acceptance=0.312
Node 19: acceptance=0.312

Performance Summary:
  - Sketching time: 21.161s (98.6%)
  - Filtering time: 0.025s (0.1%)
  - Aggregation time: 0.286s (1.3%)
  - Total time: 21.472s
  - Mean acceptance rate: 0.304

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
