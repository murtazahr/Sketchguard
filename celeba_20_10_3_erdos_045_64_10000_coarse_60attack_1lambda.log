Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 30,758 → Sketch size: 1000
  Compression ratio: 30.8x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 30,758 parameters
  - Sketch size: 1000
  - Compression ratio: 30.8x
  - Complexity: O(d + N×k) = O(30,758 + 20×1000)
  - Theoretical speedup vs BALANCE: 12.1x
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5072 ± 0.0188 | min=0.4454 max=0.5289
         : test loss mean=27.3954 ± 20.0986
         : individual accs = ['0.528947', '0.496546', '0.492458', '0.504318', '0.522046', '0.525764', '0.521397', '0.508429', '0.445423', '0.491135', '0.525350', '0.497778', '0.513889', '0.500000', '0.517794', '0.517031', '0.488735', '0.507515', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (575, 1158), (555, 1127), (584, 1158), (592, 1134), (602, 1145), (597, 1145), (573, 1127), (506, 1136), (554, 1128), (601, 1144), (560, 1125), (592, 1152), (580, 1160), (582, 1124), (592, 1145), (564, 1154), (574, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5034, honest: 0.5130
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.5141 ± 0.0156 | min=0.4889 max=0.5625
         : test loss mean=50.4918 ± 37.3032
         : individual accs = ['0.529825', '0.504318', '0.488909', '0.519862', '0.500000', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.526224', '0.498667', '0.518229', '0.506034', '0.518683', '0.517031', '0.515598', '0.508400', '0.522904', '0.513585']
         : correct/total = [(604, 1140), (584, 1158), (551, 1127), (602, 1158), (567, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (602, 1144), (561, 1125), (597, 1152), (587, 1160), (583, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (586, 1141)]
         : compromised: 0.5150, honest: 0.5127
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.5111 ± 0.0221 | min=0.4747 max=0.5625
         : test loss mean=0.7005 ± 0.0141
         : individual accs = ['0.528947', '0.502591', '0.506655', '0.488774', '0.490300', '0.485590', '0.521397', '0.496007', '0.562500', '0.491135', '0.474650', '0.498667', '0.545139', '0.493103', '0.542705', '0.517031', '0.519931', '0.508400', '0.522040', '0.525855']
         : correct/total = [(603, 1140), (582, 1158), (571, 1127), (566, 1158), (556, 1134), (556, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (543, 1144), (561, 1125), (628, 1152), (572, 1160), (610, 1124), (592, 1145), (600, 1154), (575, 1131), (604, 1157), (600, 1141)]
         : compromised: 0.5144, honest: 0.5060
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.5168 ± 0.0151 | min=0.4911 max=0.5625
         : test loss mean=19.6379 ± 7.7462
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.527511', '0.505768', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (604, 1145), (570, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5167, honest: 0.5169
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.5163 ± 0.0139 | min=0.4911 max=0.5537
         : test loss mean=0.6940 ± 0.0055
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.553682', '0.505282', '0.491135', '0.525350', '0.500444', '0.522569', '0.501724', '0.517794', '0.517031', '0.525130', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (624, 1127), (574, 1136), (554, 1128), (601, 1144), (563, 1125), (602, 1152), (582, 1160), (582, 1124), (592, 1145), (606, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5117, honest: 0.5232
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.5296 ± 0.0229 | min=0.4982 max=0.6004
         : test loss mean=13.7362 ± 5.0791
         : individual accs = ['0.528947', '0.532815', '0.514641', '0.547496', '0.527337', '0.523144', '0.525764', '0.506655', '0.574824', '0.498227', '0.525350', '0.515556', '0.544271', '0.506897', '0.532918', '0.519651', '0.517331', '0.600354', '0.529818', '0.519720']
         : correct/total = [(603, 1140), (617, 1158), (580, 1127), (634, 1158), (598, 1134), (599, 1145), (602, 1145), (571, 1127), (653, 1136), (562, 1128), (601, 1144), (580, 1125), (627, 1152), (588, 1160), (599, 1124), (595, 1145), (597, 1154), (679, 1131), (613, 1157), (593, 1141)]
         : compromised: 0.5369, honest: 0.5187
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.5219 ± 0.0233 | min=0.4911 max=0.5757
         : test loss mean=0.6919 ± 0.0049
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522928', '0.514410', '0.559825', '0.512866', '0.575704', '0.491135', '0.525350', '0.498667', '0.522569', '0.506034', '0.517794', '0.517031', '0.562392', '0.508400', '0.551426', '0.492550']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (593, 1134), (589, 1145), (641, 1145), (578, 1127), (654, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (587, 1160), (582, 1124), (592, 1145), (649, 1154), (575, 1131), (638, 1157), (562, 1141)]
         : compromised: 0.5202, honest: 0.5245
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.5698 ± 0.0393 | min=0.5226 max=0.6976
         : test loss mean=9.6472 ± 3.5985
         : individual accs = ['0.559649', '0.581174', '0.566105', '0.602763', '0.537037', '0.581659', '0.542358', '0.522626', '0.580106', '0.593085', '0.567308', '0.536000', '0.626736', '0.543966', '0.567616', '0.553712', '0.537262', '0.697613', '0.574762', '0.524978']
         : correct/total = [(638, 1140), (673, 1158), (638, 1127), (698, 1158), (609, 1134), (666, 1145), (621, 1145), (589, 1127), (659, 1136), (669, 1128), (649, 1144), (603, 1125), (722, 1152), (631, 1160), (638, 1124), (634, 1145), (620, 1154), (789, 1131), (665, 1157), (599, 1141)]
         : compromised: 0.5844, honest: 0.5480
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.5173 ± 0.0156 | min=0.4911 max=0.5651
         : test loss mean=0.6984 ± 0.0123
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.525573', '0.514410', '0.524891', '0.503993', '0.565141', '0.491135', '0.525350', '0.500444', '0.522569', '0.506897', '0.517794', '0.517031', '0.519931', '0.508400', '0.528090', '0.515337']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (596, 1134), (589, 1145), (601, 1145), (568, 1127), (642, 1136), (554, 1128), (601, 1144), (563, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (600, 1154), (575, 1131), (611, 1157), (588, 1141)]
         : compromised: 0.5176, honest: 0.5169
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.6097 ± 0.0422 | min=0.5495 max=0.7259
         : test loss mean=7.2981 ± 2.6932
         : individual accs = ['0.598246', '0.652850', '0.564330', '0.641623', '0.580247', '0.640175', '0.577293', '0.589175', '0.659331', '0.636525', '0.632867', '0.571556', '0.629340', '0.568103', '0.626335', '0.601747', '0.568458', '0.725906', '0.580812', '0.549518']
         : correct/total = [(682, 1140), (756, 1158), (636, 1127), (743, 1158), (658, 1134), (733, 1145), (661, 1145), (664, 1127), (749, 1136), (718, 1128), (724, 1144), (643, 1125), (725, 1152), (659, 1160), (704, 1124), (689, 1145), (656, 1154), (821, 1131), (672, 1157), (627, 1141)]
         : compromised: 0.6218, honest: 0.5915
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: directed_deviation, 60.0% compromised
Final accuracy - Compromised: 0.6218, Honest: 0.5915
Overall test accuracy: mean=0.6097 ± 0.0422

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Sketching time: 0.048s (5.9%)
  - Filtering time: 0.008s (1.0%)
  - Aggregation time: 0.754s (93.1%)
  - Total time: 0.809s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 30,758
  - Sketch size: 1000
  - Compression ratio: 12.1x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
