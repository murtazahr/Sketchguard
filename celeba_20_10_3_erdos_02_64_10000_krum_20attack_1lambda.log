Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6963 ± 0.0698 | min=0.4865 max=0.7729
         : test loss mean=4430.2253 ± 14200.8915
         : individual accs = ['0.698246', '0.661485', '0.711624', '0.699482', '0.693122', '0.486463', '0.772926', '0.710736', '0.749120', '0.720745', '0.722028', '0.728889', '0.712674', '0.732759', '0.511566', '0.752838', '0.709705', '0.731211', '0.713051', '0.708151']
         : correct/total = [(796, 1140), (766, 1158), (802, 1127), (810, 1158), (786, 1134), (557, 1145), (885, 1145), (801, 1127), (851, 1136), (813, 1128), (826, 1144), (820, 1125), (821, 1152), (850, 1160), (575, 1124), (862, 1145), (819, 1154), (827, 1131), (825, 1157), (808, 1141)]
         : compromised: 0.6658, honest: 0.7040
Round 002: test acc mean=0.7387 ± 0.1323 | min=0.5069 max=0.8622
         : test loss mean=nan ± nan
         : individual accs = ['0.789474', '0.810881', '0.777285', '0.850604', '0.800705', '0.514410', '0.860262', '0.821650', '0.786972', '0.838652', '0.818182', '0.862222', '0.522569', '0.506897', '0.517794', '0.813974', '0.754766', '0.508400', '0.796889', '0.821209']
         : correct/total = [(900, 1140), (939, 1158), (876, 1127), (985, 1158), (908, 1134), (589, 1145), (985, 1145), (926, 1127), (894, 1136), (946, 1128), (936, 1144), (970, 1125), (602, 1152), (588, 1160), (582, 1124), (932, 1145), (871, 1154), (575, 1131), (922, 1157), (937, 1141)]
         : compromised: 0.5131, honest: 0.7951
Round 003: test acc mean=0.7664 ± 0.1474 | min=0.5069 max=0.8821
         : test loss mean=nan ± nan
         : individual accs = ['0.793860', '0.857513', '0.840284', '0.857513', '0.846561', '0.514410', '0.873362', '0.839397', '0.800176', '0.864362', '0.881119', '0.861333', '0.522569', '0.506897', '0.517794', '0.867249', '0.882149', '0.508400', '0.829732', '0.862401']
         : correct/total = [(905, 1140), (993, 1158), (947, 1127), (993, 1158), (960, 1134), (589, 1145), (1000, 1145), (946, 1127), (909, 1136), (975, 1128), (1008, 1144), (969, 1125), (602, 1152), (588, 1160), (582, 1124), (993, 1145), (1018, 1154), (575, 1131), (960, 1157), (984, 1141)]
         : compromised: 0.5131, honest: 0.8297
Round 004: test acc mean=0.7853 ± 0.1570 | min=0.5069 max=0.8938
         : test loss mean=nan ± nan
         : individual accs = ['0.882456', '0.893782', '0.876664', '0.889465', '0.865961', '0.514410', '0.876856', '0.881100', '0.883803', '0.887411', '0.875874', '0.878222', '0.522569', '0.506897', '0.517794', '0.847162', '0.857019', '0.508400', '0.857390', '0.882559']
         : correct/total = [(1006, 1140), (1035, 1158), (988, 1127), (1030, 1158), (982, 1134), (589, 1145), (1004, 1145), (993, 1127), (1004, 1136), (1001, 1128), (1002, 1144), (988, 1125), (602, 1152), (588, 1160), (582, 1124), (970, 1145), (989, 1154), (575, 1131), (992, 1157), (1007, 1141)]
         : compromised: 0.5131, honest: 0.8533
Round 005: test acc mean=0.7888 ± 0.1592 | min=0.5069 max=0.9050
         : test loss mean=nan ± nan
         : individual accs = ['0.887719', '0.875648', '0.860692', '0.905009', '0.884480', '0.514410', '0.886463', '0.845608', '0.874120', '0.900709', '0.884615', '0.899556', '0.522569', '0.506897', '0.517794', '0.870742', '0.884749', '0.508400', '0.864304', '0.880806']
         : correct/total = [(1012, 1140), (1014, 1158), (970, 1127), (1048, 1158), (1003, 1134), (589, 1145), (1015, 1145), (953, 1127), (993, 1136), (1016, 1128), (1012, 1144), (1012, 1125), (602, 1152), (588, 1160), (582, 1124), (997, 1145), (1021, 1154), (575, 1131), (1000, 1157), (1005, 1141)]
         : compromised: 0.5131, honest: 0.8577
Round 006: test acc mean=0.7938 ± 0.1619 | min=0.5069 max=0.9076
         : test loss mean=nan ± nan
         : individual accs = ['0.886842', '0.899827', '0.879326', '0.907599', '0.872134', '0.514410', '0.889083', '0.880213', '0.889085', '0.893617', '0.888112', '0.901333', '0.522569', '0.506897', '0.517794', '0.868122', '0.886482', '0.508400', '0.873812', '0.891323']
         : correct/total = [(1011, 1140), (1042, 1158), (991, 1127), (1051, 1158), (989, 1134), (589, 1145), (1018, 1145), (992, 1127), (1010, 1136), (1008, 1128), (1016, 1144), (1014, 1125), (602, 1152), (588, 1160), (582, 1124), (994, 1145), (1023, 1154), (575, 1131), (1011, 1157), (1017, 1141)]
         : compromised: 0.5131, honest: 0.8640
Round 007: test acc mean=0.7994 ± 0.1650 | min=0.5069 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.901754', '0.905009', '0.890861', '0.906736', '0.886243', '0.514410', '0.891703', '0.899734', '0.888204', '0.888298', '0.893357', '0.910222', '0.522569', '0.506897', '0.517794', '0.877729', '0.903813', '0.508400', '0.877269', '0.897458']
         : correct/total = [(1028, 1140), (1048, 1158), (1004, 1127), (1050, 1158), (1005, 1134), (589, 1145), (1021, 1145), (1014, 1127), (1009, 1136), (1002, 1128), (1022, 1144), (1024, 1125), (602, 1152), (588, 1160), (582, 1124), (1005, 1145), (1043, 1154), (575, 1131), (1015, 1157), (1024, 1141)]
         : compromised: 0.5131, honest: 0.8710
Round 008: test acc mean=0.7996 ± 0.1651 | min=0.5069 max=0.9111
         : test loss mean=nan ± nan
         : individual accs = ['0.902632', '0.903282', '0.885537', '0.903282', '0.899471', '0.514410', '0.894323', '0.898846', '0.877641', '0.896277', '0.895979', '0.911111', '0.522569', '0.506897', '0.517794', '0.882096', '0.894281', '0.508400', '0.885048', '0.891323']
         : correct/total = [(1029, 1140), (1046, 1158), (998, 1127), (1046, 1158), (1020, 1134), (589, 1145), (1024, 1145), (1013, 1127), (997, 1136), (1011, 1128), (1025, 1144), (1025, 1125), (602, 1152), (588, 1160), (582, 1124), (1010, 1145), (1032, 1154), (575, 1131), (1024, 1157), (1017, 1141)]
         : compromised: 0.5131, honest: 0.8712
Round 009: test acc mean=0.7992 ± 0.1652 | min=0.5069 max=0.9120
         : test loss mean=nan ± nan
         : individual accs = ['0.909649', '0.874784', '0.889973', '0.907599', '0.899471', '0.514410', '0.896943', '0.908607', '0.875000', '0.901596', '0.894231', '0.912000', '0.522569', '0.506897', '0.517794', '0.882096', '0.901213', '0.508400', '0.860847', '0.900088']
         : correct/total = [(1037, 1140), (1013, 1158), (1003, 1127), (1051, 1158), (1020, 1134), (589, 1145), (1027, 1145), (1024, 1127), (994, 1136), (1017, 1128), (1023, 1144), (1026, 1125), (602, 1152), (588, 1160), (582, 1124), (1010, 1145), (1040, 1154), (575, 1131), (996, 1157), (1027, 1141)]
         : compromised: 0.5131, honest: 0.8707
Round 010: test acc mean=0.8015 ± 0.1663 | min=0.5069 max=0.9136
         : test loss mean=nan ± nan
         : individual accs = ['0.903509', '0.903282', '0.886424', '0.913644', '0.902116', '0.514410', '0.896070', '0.904170', '0.891725', '0.905142', '0.892483', '0.908444', '0.522569', '0.506897', '0.517794', '0.865502', '0.901213', '0.508400', '0.887640', '0.898335']
         : correct/total = [(1030, 1140), (1046, 1158), (999, 1127), (1058, 1158), (1023, 1134), (589, 1145), (1026, 1145), (1019, 1127), (1013, 1136), (1021, 1128), (1021, 1144), (1022, 1125), (602, 1152), (588, 1160), (582, 1124), (991, 1145), (1040, 1154), (575, 1131), (1027, 1157), (1025, 1141)]
         : compromised: 0.5131, honest: 0.8736

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: krum
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.5131, Honest: 0.8736
Overall test accuracy: mean=0.8015 ± 0.1663
