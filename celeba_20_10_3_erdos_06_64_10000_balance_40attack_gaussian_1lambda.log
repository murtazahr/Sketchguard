Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8443 ± 0.0769
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7767 ± 0.0465
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 004: test acc mean=0.4978 ± 0.0281 | min=0.4517 max=0.5625
         : test loss mean=956.1490 ± 2465.9157
         : individual accs = ['0.529825', '0.530225', '0.503993', '0.471503', '0.483245', '0.506550', '0.521397', '0.485359', '0.562500', '0.491135', '0.458042', '0.492444', '0.477431', '0.451724', '0.485765', '0.517031', '0.483536', '0.544651', '0.477960', '0.482033']
         : correct/total = [(604, 1140), (614, 1158), (568, 1127), (546, 1158), (548, 1134), (580, 1145), (597, 1145), (547, 1127), (639, 1136), (554, 1128), (524, 1144), (554, 1125), (550, 1152), (524, 1160), (546, 1124), (592, 1145), (558, 1154), (616, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4958, honest: 0.4991
Round 005: test acc mean=0.5095 ± 0.0211 | min=0.4758 max=0.5563
         : test loss mean=213.9897 ± 256.7961
         : individual accs = ['0.476316', '0.491364', '0.492458', '0.475820', '0.515873', '0.529258', '0.503930', '0.503106', '0.556338', '0.487589', '0.521853', '0.523556', '0.522569', '0.493103', '0.542705', '0.522271', '0.484402', '0.508400', '0.522040', '0.517090']
         : correct/total = [(543, 1140), (569, 1158), (555, 1127), (551, 1158), (585, 1134), (606, 1145), (577, 1145), (567, 1127), (632, 1136), (550, 1128), (597, 1144), (589, 1125), (602, 1152), (572, 1160), (610, 1124), (598, 1145), (559, 1154), (575, 1131), (604, 1157), (590, 1141)]
         : compromised: 0.5166, honest: 0.5048
Round 006: test acc mean=0.5020 ± 0.0230 | min=0.4715 max=0.5572
         : test loss mean=3194.4776 ± 5726.9377
         : individual accs = ['0.479825', '0.473230', '0.493345', '0.471503', '0.477954', '0.497817', '0.525764', '0.534161', '0.557218', '0.491135', '0.525350', '0.498667', '0.522569', '0.523276', '0.482206', '0.482969', '0.519064', '0.491600', '0.484875', '0.508326']
         : correct/total = [(547, 1140), (548, 1158), (556, 1127), (546, 1158), (542, 1134), (570, 1145), (602, 1145), (602, 1127), (633, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (607, 1160), (542, 1124), (553, 1145), (599, 1154), (556, 1131), (561, 1157), (580, 1141)]
         : compromised: 0.4968, honest: 0.5056
Round 007: test acc mean=0.5063 ± 0.0209 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.471503', '0.522046', '0.514410', '0.489083', '0.503993', '0.562500', '0.508865', '0.525350', '0.501333', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.491600', '0.477960', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (589, 1145), (560, 1145), (568, 1127), (639, 1136), (574, 1128), (601, 1144), (564, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (556, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.5034, honest: 0.5082
Round 008: test acc mean=0.5055 ± 0.0215 | min=0.4711 max=0.5625
         : test loss mean=0.7731 ± 0.2547
         : individual accs = ['0.471053', '0.508636', '0.493345', '0.471503', '0.522046', '0.485590', '0.478603', '0.503993', '0.562500', '0.508865', '0.474650', '0.501333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (556, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (543, 1144), (564, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5092, honest: 0.5031
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7070 ± 0.0388
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5190
Round 010: test acc mean=0.5212 ± 0.0183 | min=0.4911 max=0.5634
         : test loss mean=0.6966 ± 0.0134
         : individual accs = ['0.528947', '0.508636', '0.563443', '0.528497', '0.548501', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (635, 1127), (612, 1158), (622, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5124, honest: 0.5270

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5124, Honest: 0.5270
Overall test accuracy: mean=0.5212 ± 0.0183

=== BALANCE SUMMARY ===
Node 0: acceptance=0.644
Node 1: acceptance=0.727
Node 2: acceptance=0.658
Node 3: acceptance=0.713
Node 4: acceptance=0.673
Node 5: acceptance=0.627
Node 6: acceptance=0.636
Node 7: acceptance=0.486
Node 8: acceptance=0.670
Node 9: acceptance=0.700
Node 10: acceptance=0.656
Node 11: acceptance=0.650
Node 12: acceptance=0.700
Node 13: acceptance=0.723
Node 14: acceptance=0.667
Node 15: acceptance=0.673
Node 16: acceptance=0.662
Node 17: acceptance=0.733
Node 18: acceptance=0.706
Node 19: acceptance=0.619

Performance Summary:
  - Distance computation time: 1.956s (43.9%)
  - Filtering time: 2.093s (47.0%)
  - Aggregation time: 0.402s (9.0%)
  - Total time: 4.451s
  - Mean acceptance rate: 0.666

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
