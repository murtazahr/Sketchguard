Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Degree statistics: avg=9.90, min=7, max=14
Model variant: baseline
Model parameters: 2,219,692
COARSE Node 0:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 2,219,692 → Sketch size: 1000
  Compression ratio: 2219.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 2,219,692 parameters
  - Config: COARSEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1, sketch_size=1000, network_seed=987654321, attack_detection_window=5)
  - Sketch size: 1000
  - Compression ratio: 2219.7x
  - Complexity: O(d + N×k) = O(2,219,692 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.8x
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6833 ± 0.0430 | min=0.5520 max=0.7315
         : test loss mean=0.6808 ± 0.0036
         : individual accs = ['0.708772', '0.660622', '0.621118', '0.719344', '0.552028', '0.671616', '0.676856', '0.621118', '0.731514', '0.711879', '0.678322', '0.723556', '0.700521', '0.714655', '0.675267', '0.702183', '0.706239', '0.702918', '0.722558', '0.664330']
         : correct/total = [(808, 1140), (765, 1158), (700, 1127), (833, 1158), (626, 1134), (769, 1145), (775, 1145), (700, 1127), (831, 1136), (803, 1128), (776, 1144), (814, 1125), (807, 1152), (829, 1160), (759, 1124), (804, 1145), (815, 1154), (795, 1131), (836, 1157), (758, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 002: test acc mean=0.6444 ± 0.0503 | min=0.5238 max=0.7118
         : test loss mean=0.6765 ± 0.0061
         : individual accs = ['0.650877', '0.670121', '0.652174', '0.624352', '0.523810', '0.527511', '0.623581', '0.664596', '0.644366', '0.641844', '0.680944', '0.690667', '0.711806', '0.651724', '0.568505', '0.695197', '0.668977', '0.630416', '0.691443', '0.674847']
         : correct/total = [(742, 1140), (776, 1158), (735, 1127), (723, 1158), (594, 1134), (604, 1145), (714, 1145), (749, 1127), (732, 1136), (724, 1128), (779, 1144), (777, 1125), (820, 1152), (756, 1160), (639, 1124), (796, 1145), (772, 1154), (713, 1131), (800, 1157), (770, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 003: test acc mean=0.6385 ± 0.0526 | min=0.5196 max=0.7044
         : test loss mean=0.6653 ± 0.0101
         : individual accs = ['0.591228', '0.664940', '0.662822', '0.686528', '0.539683', '0.571179', '0.592140', '0.613132', '0.677817', '0.677305', '0.666958', '0.674667', '0.656250', '0.696552', '0.519573', '0.666376', '0.666378', '0.582670', '0.704408', '0.659947']
         : correct/total = [(674, 1140), (770, 1158), (747, 1127), (795, 1158), (612, 1134), (654, 1145), (678, 1145), (691, 1127), (770, 1136), (764, 1128), (763, 1144), (759, 1125), (756, 1152), (808, 1160), (584, 1124), (763, 1145), (769, 1154), (659, 1131), (815, 1157), (753, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 004: test acc mean=0.6803 ± 0.0328 | min=0.6094 max=0.7218
         : test loss mean=0.6313 ± 0.0148
         : individual accs = ['0.673684', '0.685665', '0.673469', '0.721071', '0.643739', '0.661135', '0.651528', '0.629104', '0.702465', '0.688830', '0.713287', '0.719111', '0.703993', '0.693103', '0.609431', '0.700437', '0.721837', '0.667551', '0.713915', '0.632778']
         : correct/total = [(768, 1140), (794, 1158), (759, 1127), (835, 1158), (730, 1134), (757, 1145), (746, 1145), (709, 1127), (798, 1136), (777, 1128), (816, 1144), (809, 1125), (811, 1152), (804, 1160), (685, 1124), (802, 1145), (833, 1154), (755, 1131), (826, 1157), (722, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 005: test acc mean=0.7442 ± 0.0193 | min=0.6957 max=0.7753
         : test loss mean=0.5601 ± 0.0193
         : individual accs = ['0.735965', '0.753022', '0.695652', '0.765112', '0.727513', '0.758079', '0.762445', '0.735581', '0.758803', '0.734043', '0.775350', '0.756444', '0.732639', '0.759483', '0.710854', '0.764192', '0.745234', '0.744474', '0.740709', '0.727432']
         : correct/total = [(839, 1140), (872, 1158), (784, 1127), (886, 1158), (825, 1134), (868, 1145), (873, 1145), (829, 1127), (862, 1136), (828, 1128), (887, 1144), (851, 1125), (844, 1152), (881, 1160), (799, 1124), (875, 1145), (860, 1154), (842, 1131), (857, 1157), (830, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 006: test acc mean=0.7812 ± 0.0201 | min=0.7339 max=0.8100
         : test loss mean=0.4828 ± 0.0201
         : individual accs = ['0.758772', '0.795337', '0.781721', '0.810017', '0.768078', '0.805240', '0.782533', '0.747116', '0.809859', '0.771277', '0.800699', '0.783111', '0.788194', '0.787069', '0.768683', '0.787773', '0.802426', '0.733864', '0.780467', '0.761613']
         : correct/total = [(865, 1140), (921, 1158), (881, 1127), (938, 1158), (871, 1134), (922, 1145), (896, 1145), (842, 1127), (920, 1136), (870, 1128), (916, 1144), (881, 1125), (908, 1152), (913, 1160), (864, 1124), (902, 1145), (926, 1154), (830, 1131), (903, 1157), (869, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 007: test acc mean=0.8284 ± 0.0134 | min=0.8042 max=0.8507
         : test loss mean=0.3984 ± 0.0152
         : individual accs = ['0.812281', '0.845423', '0.833185', '0.835060', '0.804233', '0.850655', '0.837555', '0.820763', '0.830986', '0.839539', '0.843531', '0.849778', '0.819444', '0.837069', '0.816726', '0.818341', '0.815425', '0.813439', '0.816768', '0.827344']
         : correct/total = [(926, 1140), (979, 1158), (939, 1127), (967, 1158), (912, 1134), (974, 1145), (959, 1145), (925, 1127), (944, 1136), (947, 1128), (965, 1144), (956, 1125), (944, 1152), (971, 1160), (918, 1124), (937, 1145), (941, 1154), (920, 1131), (945, 1157), (944, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 008: test acc mean=0.8568 ± 0.0101 | min=0.8332 max=0.8742
         : test loss mean=0.3362 ± 0.0103
         : individual accs = ['0.852632', '0.870466', '0.852706', '0.863558', '0.839506', '0.874236', '0.859389', '0.854481', '0.858275', '0.860816', '0.868881', '0.863111', '0.850694', '0.859483', '0.864769', '0.848908', '0.861352', '0.842617', '0.833189', '0.857143']
         : correct/total = [(972, 1140), (1008, 1158), (961, 1127), (1000, 1158), (952, 1134), (1001, 1145), (984, 1145), (963, 1127), (975, 1136), (971, 1128), (994, 1144), (971, 1125), (980, 1152), (997, 1160), (972, 1124), (972, 1145), (994, 1154), (953, 1131), (964, 1157), (978, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 009: test acc mean=0.8702 ± 0.0136 | min=0.8410 max=0.8921
         : test loss mean=0.3080 ± 0.0226
         : individual accs = ['0.871930', '0.892055', '0.849157', '0.878238', '0.860670', '0.888210', '0.879476', '0.873114', '0.872359', '0.879433', '0.881119', '0.883556', '0.867188', '0.875000', '0.863879', '0.850655', '0.868284', '0.849691', '0.840968', '0.878177']
         : correct/total = [(994, 1140), (1033, 1158), (957, 1127), (1017, 1158), (976, 1134), (1017, 1145), (1007, 1145), (984, 1127), (991, 1136), (992, 1128), (1008, 1144), (994, 1125), (999, 1152), (1015, 1160), (971, 1124), (974, 1145), (1002, 1154), (961, 1131), (973, 1157), (1002, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...
Round 010: test acc mean=0.8821 ± 0.0090 | min=0.8617 max=0.8954
         : test loss mean=0.2853 ± 0.0152
         : individual accs = ['0.892105', '0.886010', '0.872227', '0.889465', '0.871252', '0.885590', '0.882969', '0.885537', '0.883803', '0.895390', '0.888986', '0.887111', '0.875868', '0.888793', '0.889680', '0.866376', '0.883882', '0.870027', '0.861711', '0.885188']
         : correct/total = [(1017, 1140), (1026, 1158), (983, 1127), (1030, 1158), (988, 1134), (1014, 1145), (1011, 1145), (998, 1127), (1004, 1136), (1010, 1128), (1017, 1144), (998, 1125), (1009, 1152), (1031, 1160), (1000, 1124), (992, 1145), (1020, 1154), (984, 1131), (997, 1157), (1010, 1141)]
         : coarse stats = ['Node 0: acc_rate=1.000', 'Node 1: acc_rate=1.000', 'Node 2: acc_rate=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: coarse
Overall test accuracy: mean=0.8821 ± 0.0090

=== COARSE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Sketch transfer: 0.000s (0.0%)
    - Model fetch (accepted): 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Sketching: 0.203s (90.1%)
    - Filtering: 0.001s (0.5%)
    - Aggregation: 0.021s (9.4%)
  TOTALS:
    - Total computation: 0.225s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.225s

=== PER-NODE AVERAGE TIME ===
  - Sketching: 0.179s
  - Filtering: 0.001s
  - Aggregation: 0.012s
  - Sketch transfer: 0.000s
  - Model fetch: 0.000s
  - Total per node: 0.192s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total sketching: 3.589s
  - Total filtering: 0.012s
  - Total aggregation: 0.242s
  - Total sketch transfer: 0.000s
  - Total model fetch: 0.000s
  - Grand total: 3.843s
  - Mean acceptance rate: 1.000

COARSE Algorithm Properties:
  - Original dimension: 2,219,692
  - Sketch size: 1000
  - Compression ratio: 19.8x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
