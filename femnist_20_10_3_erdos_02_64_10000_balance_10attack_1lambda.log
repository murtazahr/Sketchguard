Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 2/20 nodes: [5, 13]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4521 ± 0.0566 | min=0.3529 max=0.5346
         : test loss mean=3.7665 ± 0.0376
         : individual accs = ['0.521560', '0.478706', '0.499387', '0.419109', '0.386458', '0.534640', '0.465776', '0.433433', '0.387258', '0.417816', '0.423847', '0.508228', '0.442218', '0.352871', '0.520977', '0.519980', '0.463280', '0.508487', '0.356268', '0.402132']
         : correct/total = [(2153, 4128), (2012, 4203), (2038, 4081), (1816, 4333), (1581, 4091), (2292, 4287), (1953, 4193), (1885, 4349), (1623, 4191), (1787, 4277), (1756, 4143), (2131, 4193), (1810, 4093), (1481, 4197), (2111, 4052), (2095, 4029), (1924, 4153), (2127, 4183), (1455, 4084), (1660, 4128)]
         : compromised: 0.4438, honest: 0.4531
Round 002: test acc mean=0.6842 ± 0.0209 | min=0.6350 max=0.7129
         : test loss mean=3.1285 ± 0.1582
         : individual accs = ['0.697674', '0.699262', '0.682676', '0.695361', '0.685407', '0.686961', '0.662533', '0.688894', '0.658315', '0.692542', '0.703596', '0.712855', '0.702907', '0.634977', '0.700148', '0.695954', '0.670359', '0.685632', '0.691724', '0.636143']
         : correct/total = [(2880, 4128), (2939, 4203), (2786, 4081), (3013, 4333), (2804, 4091), (2945, 4287), (2778, 4193), (2996, 4349), (2759, 4191), (2962, 4277), (2915, 4143), (2989, 4193), (2877, 4093), (2665, 4197), (2837, 4052), (2804, 4029), (2784, 4153), (2868, 4183), (2825, 4084), (2626, 4128)]
         : compromised: 0.6610, honest: 0.6868
Round 003: test acc mean=0.7233 ± 0.0256 | min=0.6368 max=0.7553
         : test loss mean=2.5307 ± 0.3210
         : individual accs = ['0.750242', '0.725910', '0.715266', '0.742442', '0.716451', '0.636809', '0.737658', '0.718096', '0.707468', '0.725742', '0.734492', '0.747198', '0.747862', '0.686919', '0.727789', '0.728965', '0.714905', '0.730337', '0.715475', '0.755329']
         : correct/total = [(3097, 4128), (3051, 4203), (2919, 4081), (3217, 4333), (2931, 4091), (2730, 4287), (3093, 4193), (3123, 4349), (2965, 4191), (3104, 4277), (3043, 4143), (3133, 4193), (3061, 4093), (2883, 4197), (2949, 4052), (2937, 4029), (2969, 4153), (3055, 4183), (2922, 4084), (3118, 4128)]
         : compromised: 0.6619, honest: 0.7301
Round 004: test acc mean=0.7519 ± 0.0204 | min=0.6765 max=0.7757
         : test loss mean=1.9173 ± 0.3447
         : individual accs = ['0.754845', '0.762075', '0.751041', '0.764136', '0.756539', '0.676464', '0.760076', '0.746608', '0.763302', '0.754033', '0.746078', '0.753399', '0.756902', '0.723374', '0.761106', '0.771159', '0.745967', '0.751136', '0.764447', '0.775678']
         : correct/total = [(3116, 4128), (3203, 4203), (3065, 4081), (3311, 4333), (3095, 4091), (2900, 4287), (3187, 4193), (3247, 4349), (3199, 4191), (3225, 4277), (3091, 4143), (3159, 4193), (3098, 4093), (3036, 4197), (3084, 4052), (3107, 4029), (3098, 4153), (3142, 4183), (3122, 4084), (3202, 4128)]
         : compromised: 0.6999, honest: 0.7577
Round 005: test acc mean=0.7669 ± 0.0224 | min=0.7031 max=0.8036
         : test loss mean=1.4411 ± 0.2840
         : individual accs = ['0.771318', '0.745896', '0.738054', '0.781906', '0.766805', '0.738279', '0.761269', '0.757645', '0.803627', '0.787935', '0.767318', '0.769139', '0.784510', '0.703121', '0.760612', '0.773889', '0.774380', '0.771217', '0.782321', '0.798934']
         : correct/total = [(3184, 4128), (3135, 4203), (3012, 4081), (3388, 4333), (3137, 4091), (3165, 4287), (3192, 4193), (3295, 4349), (3368, 4191), (3370, 4277), (3179, 4143), (3225, 4193), (3211, 4093), (2951, 4197), (3082, 4052), (3118, 4029), (3216, 4153), (3226, 4183), (3195, 4084), (3298, 4128)]
         : compromised: 0.7207, honest: 0.7720
Round 006: test acc mean=0.7911 ± 0.0129 | min=0.7668 max=0.8120
         : test loss mean=1.0578 ± 0.1794
         : individual accs = ['0.779070', '0.766833', '0.774075', '0.807293', '0.774627', '0.770236', '0.795373', '0.795125', '0.811978', '0.806640', '0.785904', '0.788695', '0.798925', '0.780081', '0.796397', '0.806652', '0.798218', '0.792015', '0.795054', '0.798450']
         : correct/total = [(3216, 4128), (3223, 4203), (3159, 4081), (3498, 4333), (3169, 4091), (3302, 4287), (3335, 4193), (3458, 4349), (3403, 4191), (3450, 4277), (3256, 4143), (3307, 4193), (3270, 4093), (3274, 4197), (3227, 4052), (3250, 4029), (3315, 4153), (3313, 4183), (3247, 4084), (3296, 4128)]
         : compromised: 0.7752, honest: 0.7929
Round 007: test acc mean=0.8051 ± 0.0114 | min=0.7773 max=0.8225
         : test loss mean=0.8317 ± 0.1178
         : individual accs = ['0.805233', '0.797288', '0.777260', '0.819986', '0.791494', '0.804292', '0.813260', '0.809841', '0.818898', '0.822539', '0.792421', '0.806821', '0.805277', '0.793186', '0.808983', '0.819062', '0.814110', '0.793211', '0.809500', '0.799661']
         : correct/total = [(3324, 4128), (3351, 4203), (3172, 4081), (3553, 4333), (3238, 4091), (3448, 4287), (3410, 4193), (3522, 4349), (3432, 4191), (3518, 4277), (3283, 4143), (3383, 4193), (3296, 4093), (3329, 4197), (3278, 4052), (3300, 4029), (3381, 4153), (3318, 4183), (3306, 4084), (3301, 4128)]
         : compromised: 0.7987, honest: 0.8058
Round 008: test acc mean=0.8155 ± 0.0099 | min=0.7977 max=0.8305
         : test loss mean=0.6894 ± 0.0780
         : individual accs = ['0.809109', '0.811563', '0.797844', '0.824371', '0.799071', '0.822720', '0.824708', '0.819039', '0.820091', '0.826982', '0.802076', '0.821607', '0.818226', '0.813676', '0.825765', '0.830479', '0.819167', '0.808750', '0.817336', '0.797723']
         : correct/total = [(3340, 4128), (3411, 4203), (3256, 4081), (3572, 4333), (3269, 4091), (3527, 4287), (3458, 4193), (3562, 4349), (3437, 4191), (3537, 4277), (3323, 4143), (3445, 4193), (3349, 4093), (3415, 4197), (3346, 4052), (3346, 4029), (3402, 4153), (3383, 4183), (3338, 4084), (3293, 4128)]
         : compromised: 0.8182, honest: 0.8152
Round 009: test acc mean=0.8265 ± 0.0079 | min=0.8067 max=0.8394
         : test loss mean=0.6014 ± 0.0494
         : individual accs = ['0.819525', '0.826315', '0.806665', '0.832679', '0.821071', '0.830184', '0.833532', '0.830076', '0.839418', '0.836100', '0.814868', '0.823992', '0.831908', '0.827019', '0.832182', '0.836188', '0.826391', '0.819508', '0.822723', '0.819767']
         : correct/total = [(3383, 4128), (3473, 4203), (3292, 4081), (3608, 4333), (3359, 4091), (3559, 4287), (3495, 4193), (3610, 4349), (3518, 4191), (3576, 4277), (3376, 4143), (3455, 4193), (3405, 4093), (3471, 4197), (3372, 4052), (3369, 4029), (3432, 4153), (3428, 4183), (3360, 4084), (3384, 4128)]
         : compromised: 0.8286, honest: 0.8263
Round 010: test acc mean=0.8343 ± 0.0058 | min=0.8245 max=0.8438
         : test loss mean=0.5450 ± 0.0315
         : individual accs = ['0.828973', '0.838449', '0.829699', '0.833833', '0.824493', '0.831117', '0.837825', '0.835135', '0.839418', '0.842413', '0.824523', '0.828285', '0.838260', '0.837026', '0.843781', '0.843385', '0.836985', '0.833612', '0.829824', '0.828004']
         : correct/total = [(3422, 4128), (3524, 4203), (3386, 4081), (3613, 4333), (3373, 4091), (3563, 4287), (3513, 4193), (3632, 4349), (3518, 4191), (3603, 4277), (3416, 4143), (3473, 4193), (3431, 4093), (3513, 4197), (3419, 4052), (3398, 4029), (3476, 4153), (3487, 4183), (3389, 4084), (3418, 4128)]
         : compromised: 0.8341, honest: 0.8343

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 10.0% compromised
Final accuracy - Compromised: 0.8341, Honest: 0.8343
Overall test accuracy: mean=0.8343 ± 0.0058

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=0.750
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=0.800
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=0.714
Node 12: acceptance=0.857
Node 13: acceptance=1.000
Node 14: acceptance=0.714
Node 15: acceptance=0.833
Node 16: acceptance=1.000
Node 17: acceptance=0.800
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 2.270s (43.4%)
  - Filtering time: 2.769s (52.9%)
  - Aggregation time: 0.191s (3.6%)
  - Total time: 5.229s
  - Mean acceptance rate: 0.923

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
