Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 12/20 nodes: [1, 2, 3, 5, 8, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.529361', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (613, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5168, honest: 0.5158
Round 002: test acc mean=0.6801 ± 0.1935 | min=0.4703 max=0.9152
         : test loss mean=nan ± nan
         : individual accs = ['0.914035', '0.881693', '0.470275', '0.528497', '0.477954', '0.549345', '0.913537', '0.911269', '0.562500', '0.914894', '0.915210', '0.768000', '0.482639', '0.495690', '0.482206', '0.517031', '0.516464', '0.508400', '0.879862', '0.912358']
         : correct/total = [(1042, 1140), (1021, 1158), (530, 1127), (612, 1158), (542, 1134), (629, 1145), (1046, 1145), (1027, 1127), (639, 1136), (1032, 1128), (1047, 1144), (864, 1125), (556, 1152), (575, 1160), (542, 1124), (592, 1145), (596, 1154), (575, 1131), (1018, 1157), (1041, 1141)]
         : compromised: 0.5938, honest: 0.8095
Round 003: test acc mean=0.5316 ± 0.0882 | min=0.4600 max=0.9031
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.502218', '0.528497', '0.518519', '0.903057', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.478299', '0.508621', '0.459964', '0.517031', '0.549393', '0.486295', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (566, 1127), (612, 1158), (588, 1134), (1034, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (551, 1152), (590, 1160), (517, 1124), (592, 1145), (634, 1154), (550, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5397, honest: 0.5196
Round 004: test acc mean=0.4937 ± 0.0231 | min=0.4393 max=0.5373
         : test loss mean=2418.6857 ± 3530.1241
         : individual accs = ['0.485088', '0.507772', '0.506655', '0.481002', '0.477954', '0.517031', '0.503057', '0.496894', '0.439261', '0.508865', '0.474650', '0.534222', '0.519965', '0.483621', '0.483986', '0.482969', '0.537262', '0.491600', '0.477096', '0.465381']
         : correct/total = [(553, 1140), (588, 1158), (571, 1127), (557, 1158), (542, 1134), (592, 1145), (576, 1145), (560, 1127), (499, 1136), (574, 1128), (543, 1144), (601, 1125), (599, 1152), (561, 1160), (544, 1124), (553, 1145), (620, 1154), (556, 1131), (552, 1157), (531, 1141)]
         : compromised: 0.4938, honest: 0.4936
Round 005: test acc mean=0.4951 ± 0.0235 | min=0.4375 max=0.5253
         : test loss mean=32234.2704 ± 103167.8950
         : individual accs = ['0.510526', '0.511226', '0.506655', '0.500000', '0.461199', '0.485590', '0.478603', '0.519077', '0.437500', '0.462766', '0.525350', '0.502222', '0.466146', '0.494828', '0.483096', '0.505677', '0.519064', '0.491600', '0.522040', '0.517967']
         : correct/total = [(582, 1140), (592, 1158), (571, 1127), (579, 1158), (523, 1134), (556, 1145), (548, 1145), (585, 1127), (497, 1136), (522, 1128), (601, 1144), (565, 1125), (537, 1152), (574, 1160), (543, 1124), (579, 1145), (599, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.4922, honest: 0.4993
Round 006: test acc mean=0.5006 ± 0.0227 | min=0.4375 max=0.5297
         : test loss mean=1659.7920 ± 3403.7948
         : individual accs = ['0.517544', '0.498273', '0.529725', '0.481002', '0.520282', '0.485590', '0.521397', '0.495120', '0.437500', '0.491135', '0.527972', '0.465778', '0.506076', '0.480172', '0.517794', '0.517031', '0.487868', '0.508400', '0.522040', '0.501315']
         : correct/total = [(590, 1140), (577, 1158), (597, 1127), (557, 1158), (590, 1134), (556, 1145), (597, 1145), (558, 1127), (497, 1136), (554, 1128), (604, 1144), (524, 1125), (583, 1152), (557, 1160), (582, 1124), (592, 1145), (563, 1154), (575, 1131), (604, 1157), (572, 1141)]
         : compromised: 0.4958, honest: 0.5078
Round 007: test acc mean=0.4849 ± 0.0179 | min=0.4375 max=0.5156
         : test loss mean=56597.7857 ± 90396.1424
         : individual accs = ['0.486842', '0.482729', '0.505768', '0.471503', '0.470899', '0.466376', '0.478603', '0.496007', '0.437500', '0.508865', '0.474650', '0.501333', '0.486111', '0.472414', '0.487544', '0.482969', '0.515598', '0.511936', '0.477960', '0.482910']
         : correct/total = [(555, 1140), (559, 1158), (570, 1127), (546, 1158), (534, 1134), (534, 1145), (548, 1145), (559, 1127), (497, 1136), (574, 1128), (543, 1144), (564, 1125), (560, 1152), (548, 1160), (548, 1124), (553, 1145), (595, 1154), (579, 1131), (553, 1157), (551, 1141)]
         : compromised: 0.4820, honest: 0.4893
Round 008: test acc mean=0.5052 ± 0.0218 | min=0.4715 max=0.5625
         : test loss mean=36929.5432 ± 150687.6438
         : individual accs = ['0.502632', '0.491364', '0.491571', '0.471503', '0.521164', '0.550218', '0.518777', '0.504880', '0.562500', '0.489362', '0.523601', '0.498667', '0.502604', '0.478448', '0.508897', '0.482969', '0.503466', '0.491600', '0.495246', '0.513585']
         : correct/total = [(573, 1140), (569, 1158), (554, 1127), (546, 1158), (591, 1134), (630, 1145), (594, 1145), (569, 1127), (639, 1136), (552, 1128), (599, 1144), (561, 1125), (579, 1152), (555, 1160), (572, 1124), (553, 1145), (581, 1154), (556, 1131), (573, 1157), (586, 1141)]
         : compromised: 0.5021, honest: 0.5097
Round 009: test acc mean=0.5095 ± 0.0177 | min=0.4780 max=0.5625
         : test loss mean=16996.2314 ± 37659.1427
         : individual accs = ['0.527193', '0.491364', '0.512866', '0.497409', '0.506173', '0.514410', '0.492576', '0.512866', '0.562500', '0.489362', '0.523601', '0.498667', '0.522569', '0.493103', '0.517794', '0.509170', '0.515598', '0.509284', '0.477960', '0.516214']
         : correct/total = [(601, 1140), (569, 1158), (578, 1127), (576, 1158), (574, 1134), (589, 1145), (564, 1145), (578, 1127), (639, 1136), (552, 1128), (599, 1144), (561, 1125), (602, 1152), (572, 1160), (582, 1124), (583, 1145), (595, 1154), (576, 1131), (553, 1157), (589, 1141)]
         : compromised: 0.5089, honest: 0.5104
Round 010: test acc mean=0.5169 ± 0.0210 | min=0.4780 max=0.5625
         : test loss mean=109618.9755 ± 458928.2950
         : individual accs = ['0.517544', '0.493092', '0.499556', '0.528497', '0.515873', '0.543231', '0.535371', '0.553682', '0.562500', '0.490248', '0.524476', '0.498667', '0.504340', '0.499138', '0.517794', '0.524017', '0.515598', '0.509284', '0.477960', '0.527607']
         : correct/total = [(590, 1140), (571, 1158), (563, 1127), (612, 1158), (585, 1134), (622, 1145), (613, 1145), (624, 1127), (639, 1136), (553, 1128), (600, 1144), (561, 1125), (581, 1152), (579, 1160), (582, 1124), (600, 1145), (595, 1154), (576, 1131), (553, 1157), (602, 1141)]
         : compromised: 0.5132, honest: 0.5225

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 60.0% compromised
Final accuracy - Compromised: 0.5132, Honest: 0.5225
Overall test accuracy: mean=0.5169 ± 0.0210

=== BALANCE SUMMARY ===
Node 0: acceptance=0.700
Node 1: acceptance=0.550
Node 2: acceptance=0.500
Node 3: acceptance=0.450
Node 4: acceptance=0.500
Node 5: acceptance=0.300
Node 6: acceptance=0.700
Node 7: acceptance=0.700
Node 8: acceptance=0.300
Node 9: acceptance=0.700
Node 10: acceptance=0.700
Node 11: acceptance=0.700
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=0.450
Node 16: acceptance=0.500
Node 17: acceptance=0.450
Node 18: acceptance=0.600
Node 19: acceptance=0.700

Performance Summary:
  - Distance computation time: 0.323s (32.3%)
  - Filtering time: 0.454s (45.4%)
  - Aggregation time: 0.223s (22.3%)
  - Total time: 1.000s
  - Mean acceptance rate: 0.550

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
