Device: cpu
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
Initial test acc across nodes: mean=0.4978 ± 0.0207
Round 001: test acc mean=0.5336 ± 0.0856 | min=0.4287 max=0.7546
         : test loss mean=11093336.4042 ± 11035964.6431
         : individual accs = ['0.698246', '0.726252', '0.491571', '0.470639', '0.488536', '0.496943', '0.556332', '0.535049', '0.428697', '0.497340', '0.508741', '0.487111', '0.473958', '0.534483', '0.477758', '0.754585', '0.510399', '0.508400', '0.508211', '0.517967']
         : correct/total = [(796, 1140), (841, 1158), (554, 1127), (545, 1158), (554, 1134), (569, 1145), (637, 1145), (603, 1127), (487, 1136), (561, 1128), (582, 1144), (548, 1125), (546, 1152), (620, 1160), (537, 1124), (864, 1145), (589, 1154), (575, 1131), (588, 1157), (591, 1141)]
         : compromised: 0.5266, honest: 0.5382
Round 002: test acc mean=0.5447 ± 0.0889 | min=0.4911 max=0.8148
         : test loss mean=nan ± nan
         : individual accs = ['0.800000', '0.491364', '0.507542', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.814847', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(912, 1140), (569, 1158), (572, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (933, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5103, honest: 0.5676
Round 003: test acc mean=0.5496 ± 0.1027 | min=0.4911 max=0.8672
         : test loss mean=nan ± nan
         : individual accs = ['0.841228', '0.511226', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.867249', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(959, 1140), (592, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (993, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5128, honest: 0.5742
Round 004: test acc mean=0.5498 ± 0.1058 | min=0.4911 max=0.8807
         : test loss mean=nan ± nan
         : individual accs = ['0.880702', '0.496546', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.846288', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1004, 1140), (575, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (969, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5109, honest: 0.5757
Round 005: test acc mean=0.5472 ± 0.1013 | min=0.4801 max=0.8725
         : test loss mean=nan ± nan
         : individual accs = ['0.819298', '0.480138', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.872489', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(934, 1140), (556, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (999, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5089, honest: 0.5728
Round 006: test acc mean=0.5512 ± 0.1107 | min=0.4911 max=0.8904
         : test loss mean=nan ± nan
         : individual accs = ['0.890351', '0.491364', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.868996', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1015, 1140), (569, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (995, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5103, honest: 0.5784
Round 007: test acc mean=0.5516 ± 0.1116 | min=0.4911 max=0.8904
         : test loss mean=nan ± nan
         : individual accs = ['0.890351', '0.493955', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.875983', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1015, 1140), (572, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (1003, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5106, honest: 0.5790
Round 008: test acc mean=0.5524 ± 0.1132 | min=0.4911 max=0.8939
         : test loss mean=nan ± nan
         : individual accs = ['0.893860', '0.498273', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.883843', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1019, 1140), (577, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (1012, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5111, honest: 0.5800
Round 009: test acc mean=0.5527 ± 0.1115 | min=0.4911 max=0.8868
         : test loss mean=nan ± nan
         : individual accs = ['0.886842', '0.512953', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.882096', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1011, 1140), (594, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (1010, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5130, honest: 0.5792
Round 010: test acc mean=0.5516 ± 0.1102 | min=0.4911 max=0.8886
         : test loss mean=nan ± nan
         : individual accs = ['0.888596', '0.500864', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.868996', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(1013, 1140), (580, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (995, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5115, honest: 0.5783

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: krum
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5115, Honest: 0.5783
Overall test accuracy: mean=0.5516 ± 0.1102
