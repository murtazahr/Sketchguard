Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5680 ± 0.1250 | min=0.4911 max=0.8943
         : test loss mean=nan ± nan
         : individual accs = ['0.835088', '0.858377', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.894323', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(952, 1140), (994, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (1024, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5561, honest: 0.5759
Round 002: test acc mean=0.5462 ± 0.1191 | min=0.4445 max=0.9074
         : test loss mean=nan ± nan
         : individual accs = ['0.886842', '0.508636', '0.507542', '0.544041', '0.522046', '0.484716', '0.506550', '0.503106', '0.444542', '0.489362', '0.525350', '0.508444', '0.477431', '0.543103', '0.497331', '0.907424', '0.526863', '0.500442', '0.522040', '0.517967']
         : correct/total = [(1011, 1140), (589, 1158), (572, 1127), (630, 1158), (592, 1134), (555, 1145), (580, 1145), (567, 1127), (505, 1136), (552, 1128), (601, 1144), (572, 1125), (550, 1152), (630, 1160), (559, 1124), (1039, 1145), (608, 1154), (566, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5053, honest: 0.5735
Round 003: test acc mean=0.5245 ± 0.0861 | min=0.4428 max=0.8877
         : test loss mean=nan ± nan
         : individual accs = ['0.560526', '0.887737', '0.506655', '0.508636', '0.486772', '0.510044', '0.521397', '0.496007', '0.442782', '0.508865', '0.518357', '0.501333', '0.497396', '0.492241', '0.510676', '0.517031', '0.515598', '0.503095', '0.522040', '0.482033']
         : correct/total = [(639, 1140), (1028, 1158), (571, 1127), (589, 1158), (552, 1134), (584, 1145), (597, 1145), (559, 1127), (503, 1136), (574, 1128), (593, 1144), (564, 1125), (573, 1152), (571, 1160), (574, 1124), (592, 1145), (595, 1154), (569, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5531, honest: 0.5054
Round 004: test acc mean=0.5085 ± 0.0192 | min=0.4788 max=0.5616
         : test loss mean=nan ± nan
         : individual accs = ['0.526316', '0.494819', '0.503106', '0.518135', '0.521164', '0.513537', '0.521397', '0.503993', '0.561620', '0.514184', '0.483392', '0.508444', '0.522569', '0.506897', '0.517794', '0.517031', '0.482669', '0.491600', '0.478825', '0.482033']
         : correct/total = [(600, 1140), (573, 1158), (567, 1127), (600, 1158), (591, 1134), (588, 1145), (597, 1145), (568, 1127), (638, 1136), (580, 1128), (553, 1144), (572, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (557, 1154), (556, 1131), (554, 1157), (550, 1141)]
         : compromised: 0.5043, honest: 0.5113
Round 005: test acc mean=0.5055 ± 0.0189 | min=0.4774 max=0.5390
         : test loss mean=nan ± nan
         : individual accs = ['0.536842', '0.508636', '0.536823', '0.509499', '0.510582', '0.510044', '0.478603', '0.503993', '0.516725', '0.487589', '0.486014', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.538995', '0.508400', '0.477960', '0.482033']
         : correct/total = [(612, 1140), (589, 1158), (605, 1127), (590, 1158), (579, 1134), (584, 1145), (548, 1145), (568, 1127), (587, 1136), (550, 1128), (556, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (622, 1154), (575, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.5007, honest: 0.5087
Round 006: test acc mean=0.5018 ± 0.0254 | min=0.4456 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.504386', '0.508636', '0.462289', '0.445596', '0.522046', '0.508297', '0.521397', '0.503993', '0.562500', '0.490248', '0.518357', '0.477333', '0.522569', '0.478448', '0.517794', '0.517031', '0.514731', '0.501326', '0.477960', '0.482033']
         : correct/total = [(575, 1140), (589, 1158), (521, 1127), (516, 1158), (592, 1134), (582, 1145), (597, 1145), (568, 1127), (639, 1136), (553, 1128), (593, 1144), (537, 1125), (602, 1152), (555, 1160), (582, 1124), (592, 1145), (594, 1154), (567, 1131), (553, 1157), (550, 1141)]
         : compromised: 0.4990, honest: 0.5037
Round 007: test acc mean=0.4977 ± 0.0219 | min=0.4375 max=0.5226
         : test loss mean=nan ± nan
         : individual accs = ['0.508772', '0.508636', '0.493345', '0.493092', '0.522046', '0.451528', '0.521397', '0.503993', '0.437500', '0.492021', '0.493881', '0.498667', '0.522569', '0.493103', '0.482206', '0.517031', '0.510399', '0.507515', '0.477960', '0.517967']
         : correct/total = [(580, 1140), (589, 1158), (556, 1127), (571, 1158), (592, 1134), (517, 1145), (597, 1145), (568, 1127), (497, 1136), (555, 1128), (565, 1144), (561, 1125), (602, 1152), (572, 1160), (542, 1124), (592, 1145), (589, 1154), (574, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4928, honest: 0.5010
Round 008: test acc mean=0.5113 ± 0.0203 | min=0.4774 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.533333', '0.508636', '0.493345', '0.531088', '0.537037', '0.486463', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.496889', '0.477431', '0.493103', '0.517794', '0.517031', '0.514731', '0.508400', '0.488332', '0.517967']
         : correct/total = [(608, 1140), (589, 1158), (556, 1127), (615, 1158), (609, 1134), (557, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (559, 1125), (550, 1152), (572, 1160), (582, 1124), (592, 1145), (594, 1154), (575, 1131), (565, 1157), (591, 1141)]
         : compromised: 0.4971, honest: 0.5207
Round 009: test acc mean=0.5027 ± 0.0226 | min=0.4375 max=0.5228
         : test loss mean=nan ± nan
         : individual accs = ['0.522807', '0.500864', '0.519965', '0.521589', '0.521164', '0.510917', '0.521397', '0.503993', '0.437500', '0.516844', '0.462413', '0.498667', '0.477431', '0.506897', '0.482206', '0.517031', '0.483536', '0.508400', '0.522040', '0.517967']
         : correct/total = [(596, 1140), (580, 1158), (586, 1127), (604, 1158), (591, 1134), (585, 1145), (597, 1145), (568, 1127), (497, 1136), (583, 1128), (529, 1144), (561, 1125), (550, 1152), (588, 1160), (542, 1124), (592, 1145), (558, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5009, honest: 0.5039
Round 010: test acc mean=0.5051 ± 0.0223 | min=0.4437 max=0.5412
         : test loss mean=nan ± nan
         : individual accs = ['0.541228', '0.508636', '0.511979', '0.530225', '0.526455', '0.485590', '0.521397', '0.503993', '0.443662', '0.491135', '0.472028', '0.498667', '0.477431', '0.511207', '0.517794', '0.517031', '0.506932', '0.494253', '0.524633', '0.517967']
         : correct/total = [(617, 1140), (589, 1158), (577, 1127), (614, 1158), (597, 1134), (556, 1145), (597, 1145), (568, 1127), (504, 1136), (554, 1128), (540, 1144), (561, 1125), (550, 1152), (593, 1160), (582, 1124), (592, 1145), (585, 1154), (559, 1131), (607, 1157), (591, 1141)]
         : compromised: 0.5023, honest: 0.5070

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: krum
Attack: gaussian, 40.0% compromised
Final accuracy - Compromised: 0.5023, Honest: 0.5070
Overall test accuracy: mean=0.5051 ± 0.0223
