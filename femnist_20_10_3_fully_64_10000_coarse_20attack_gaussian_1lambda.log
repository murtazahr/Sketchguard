Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: fully, nodes: 20, edges: 190
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.5043 ± 0.0333 | min=0.4489 max=0.5564
         : test loss mean=3.7419 ± 0.0230
         : individual accs = ['0.556444', '0.513205', '0.523891', '0.509347', '0.468590', '0.549802', '0.491057', '0.497816', '0.542353', '0.462941', '0.475259', '0.535655', '0.475446', '0.462473', '0.513080', '0.537106', '0.462798', '0.547215', '0.512488', '0.448886']
         : correct/total = [(2297, 4128), (2157, 4203), (2138, 4081), (2207, 4333), (1917, 4091), (2357, 4287), (2059, 4193), (2165, 4349), (2273, 4191), (1980, 4277), (1969, 4143), (2246, 4193), (1946, 4093), (1941, 4197), (2079, 4052), (2164, 4029), (1922, 4153), (2289, 4183), (2093, 4084), (1853, 4128)]
         : compromised: 0.5087, honest: 0.5032
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 002: test acc mean=0.6808 ± 0.0196 | min=0.6311 max=0.7100
         : test loss mean=3.4368 ± 0.0479
         : individual accs = ['0.676599', '0.683084', '0.672139', '0.698361', '0.685407', '0.702822', '0.631052', '0.689124', '0.666428', '0.706336', '0.678735', '0.699261', '0.691913', '0.664284', '0.710020', '0.691735', '0.650855', '0.660292', '0.692214', '0.665213']
         : correct/total = [(2793, 4128), (2871, 4203), (2743, 4081), (3026, 4333), (2804, 4091), (3013, 4287), (2646, 4193), (2997, 4349), (2793, 4191), (3021, 4277), (2812, 4143), (2932, 4193), (2832, 4093), (2788, 4197), (2877, 4052), (2787, 4029), (2703, 4153), (2762, 4183), (2827, 4084), (2746, 4128)]
         : compromised: 0.6798, honest: 0.6810
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 003: test acc mean=0.7019 ± 0.0235 | min=0.6286 max=0.7304
         : test loss mean=3.1724 ± 0.0876
         : individual accs = ['0.730378', '0.704259', '0.686841', '0.727671', '0.699340', '0.628645', '0.712616', '0.725684', '0.727273', '0.684826', '0.702148', '0.716909', '0.717078', '0.684537', '0.727542', '0.699677', '0.689622', '0.676787', '0.690744', '0.705911']
         : correct/total = [(3015, 4128), (2960, 4203), (2803, 4081), (3153, 4333), (2861, 4091), (2695, 4287), (2988, 4193), (3156, 4349), (3048, 4191), (2929, 4277), (2909, 4143), (3006, 4193), (2935, 4093), (2873, 4197), (2948, 4052), (2819, 4029), (2864, 4153), (2831, 4183), (2821, 4084), (2914, 4128)]
         : compromised: 0.6768, honest: 0.7082
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 004: test acc mean=0.6835 ± 0.0354 | min=0.5834 max=0.7280
         : test loss mean=2.6798 ± 0.1403
         : individual accs = ['0.682413', '0.706400', '0.654006', '0.699285', '0.722317', '0.627245', '0.715478', '0.710048', '0.724887', '0.678045', '0.652667', '0.702123', '0.583435', '0.678580', '0.728036', '0.691487', '0.702143', '0.645231', '0.690255', '0.675388']
         : correct/total = [(2817, 4128), (2969, 4203), (2669, 4081), (3030, 4333), (2955, 4091), (2689, 4287), (3000, 4193), (3088, 4349), (3038, 4191), (2900, 4277), (2704, 4143), (2944, 4193), (2388, 4093), (2848, 4197), (2950, 4052), (2786, 4029), (2916, 4153), (2699, 4183), (2819, 4084), (2788, 4128)]
         : compromised: 0.6336, honest: 0.6959
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 005: test acc mean=0.6464 ± 0.0394 | min=0.5656 max=0.6973
         : test loss mean=2.0202 ± 0.1521
         : individual accs = ['0.670543', '0.650250', '0.586621', '0.640203', '0.684674', '0.615115', '0.664441', '0.687744', '0.681222', '0.669628', '0.625392', '0.670165', '0.573907', '0.598761', '0.660415', '0.627947', '0.697327', '0.565623', '0.690744', '0.666667']
         : correct/total = [(2768, 4128), (2733, 4203), (2394, 4081), (2774, 4333), (2801, 4091), (2637, 4287), (2786, 4193), (2991, 4349), (2855, 4191), (2864, 4277), (2591, 4143), (2810, 4193), (2349, 4093), (2513, 4197), (2676, 4052), (2530, 4029), (2896, 4153), (2366, 4183), (2821, 4084), (2752, 4128)]
         : compromised: 0.5884, honest: 0.6609
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 006: test acc mean=0.7196 ± 0.0222 | min=0.6699 max=0.7451
         : test loss mean=1.2439 ± 0.0957
         : individual accs = ['0.686047', '0.721152', '0.721147', '0.728364', '0.742117', '0.669932', '0.738612', '0.732122', '0.726796', '0.716858', '0.740768', '0.742189', '0.682629', '0.712175', '0.745064', '0.717796', '0.730797', '0.678939', '0.735553', '0.722626']
         : correct/total = [(2832, 4128), (3031, 4203), (2943, 4081), (3156, 4333), (3036, 4091), (2872, 4287), (3097, 4193), (3184, 4349), (3046, 4191), (3066, 4277), (3069, 4143), (3112, 4193), (2794, 4093), (2989, 4197), (3019, 4052), (2892, 4029), (3035, 4153), (2840, 4183), (3004, 4084), (2983, 4128)]
         : compromised: 0.6859, honest: 0.7280
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 007: test acc mean=0.7956 ± 0.0083 | min=0.7774 max=0.8106
         : test loss mean=0.7408 ± 0.0384
         : individual accs = ['0.789971', '0.801570', '0.785102', '0.796677', '0.784649', '0.796828', '0.810637', '0.804783', '0.803865', '0.801263', '0.791938', '0.796566', '0.777425', '0.787944', '0.806022', '0.792753', '0.799422', '0.791298', '0.803869', '0.788760']
         : correct/total = [(3261, 4128), (3369, 4203), (3204, 4081), (3452, 4333), (3210, 4091), (3416, 4287), (3399, 4193), (3500, 4349), (3369, 4191), (3427, 4277), (3281, 4143), (3340, 4193), (3182, 4093), (3307, 4197), (3266, 4052), (3194, 4029), (3320, 4153), (3310, 4183), (3283, 4084), (3256, 4128)]
         : compromised: 0.7884, honest: 0.7974
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 008: test acc mean=0.8207 ± 0.0070 | min=0.8062 max=0.8288
         : test loss mean=0.5718 ± 0.0209
         : individual accs = ['0.807897', '0.824411', '0.817692', '0.828756', '0.809826', '0.828551', '0.828524', '0.824327', '0.825340', '0.824877', '0.811248', '0.824708', '0.816027', '0.820586', '0.826505', '0.827501', '0.816759', '0.822854', '0.820764', '0.806202']
         : correct/total = [(3335, 4128), (3465, 4203), (3337, 4081), (3591, 4333), (3313, 4091), (3552, 4287), (3474, 4193), (3585, 4349), (3459, 4191), (3528, 4277), (3361, 4143), (3458, 4193), (3340, 4093), (3444, 4197), (3349, 4052), (3334, 4029), (3392, 4153), (3442, 4183), (3352, 4084), (3328, 4128)]
         : compromised: 0.8220, honest: 0.8203
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 009: test acc mean=0.8343 ± 0.0051 | min=0.8261 max=0.8459
         : test loss mean=0.5135 ± 0.0188
         : individual accs = ['0.826066', '0.837259', '0.831659', '0.839372', '0.827426', '0.835083', '0.840210', '0.836054', '0.845860', '0.840542', '0.829109', '0.832578', '0.831175', '0.834644', '0.839092', '0.836932', '0.830725', '0.829309', '0.835700', '0.827762']
         : correct/total = [(3410, 4128), (3519, 4203), (3394, 4081), (3637, 4333), (3385, 4091), (3580, 4287), (3523, 4193), (3636, 4349), (3545, 4191), (3595, 4277), (3435, 4143), (3491, 4193), (3402, 4093), (3503, 4197), (3400, 4052), (3372, 4029), (3450, 4153), (3469, 4183), (3413, 4084), (3417, 4128)]
         : compromised: 0.8326, honest: 0.8348
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...
Round 010: test acc mean=0.8421 ± 0.0053 | min=0.8311 max=0.8493
         : test loss mean=0.4864 ± 0.0188
         : individual accs = ['0.835271', '0.848680', '0.838030', '0.843296', '0.831093', '0.838348', '0.843787', '0.849161', '0.848723', '0.846388', '0.834661', '0.835917', '0.840459', '0.844651', '0.846249', '0.849342', '0.842764', '0.845087', '0.842801', '0.836967']
         : correct/total = [(3448, 4128), (3567, 4203), (3420, 4081), (3654, 4333), (3400, 4091), (3594, 4287), (3538, 4193), (3693, 4349), (3557, 4191), (3620, 4277), (3458, 4143), (3505, 4193), (3440, 4093), (3545, 4197), (3429, 4052), (3422, 4029), (3500, 4153), (3535, 4183), (3442, 4084), (3455, 4128)]
         : compromised: 0.8421, honest: 0.8421
         : coarse stats = ['Node 0: acc_rate=0.789', 'Node 1: acc_rate=0.789', 'Node 2: acc_rate=0.789']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: fully, Aggregation: coarse
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.8421, Honest: 0.8421
Overall test accuracy: mean=0.8421 ± 0.0053

=== COARSE SUMMARY ===
Node 0: acceptance=0.789
Node 1: acceptance=0.789
Node 2: acceptance=0.789
Node 3: acceptance=0.789
Node 4: acceptance=0.789
Node 5: acceptance=0.842
Node 6: acceptance=0.789
Node 7: acceptance=0.789
Node 8: acceptance=0.789
Node 9: acceptance=0.789
Node 10: acceptance=0.789
Node 11: acceptance=0.789
Node 12: acceptance=0.842
Node 13: acceptance=0.842
Node 14: acceptance=0.789
Node 15: acceptance=0.789
Node 16: acceptance=0.789
Node 17: acceptance=0.842
Node 18: acceptance=0.789
Node 19: acceptance=0.789

Performance Summary:
  - Sketching time: 14.874s (96.4%)
  - Filtering time: 0.029s (0.2%)
  - Aggregation time: 0.528s (3.4%)
  - Total time: 15.431s
  - Mean acceptance rate: 0.800

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
