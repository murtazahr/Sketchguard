Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 6,603,710 parameters
  - Complexity: O(N×d) = O(20×6,603,710)
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4348 ± 0.0591 | min=0.2925 max=0.5321
         : test loss mean=3.7768 ± 0.0342
         : individual accs = ['0.510901', '0.449441', '0.484440', '0.450265', '0.436079', '0.532074', '0.370856', '0.441481', '0.376283', '0.399579', '0.292542', '0.517768', '0.348400', '0.446509', '0.431885', '0.448002', '0.441608', '0.510638', '0.392262', '0.415940']
         : correct/total = [(2109, 4128), (1889, 4203), (1977, 4081), (1951, 4333), (1784, 4091), (2281, 4287), (1555, 4193), (1920, 4349), (1577, 4191), (1709, 4277), (1212, 4143), (2171, 4193), (1426, 4093), (1874, 4197), (1750, 4052), (1805, 4029), (1834, 4153), (2136, 4183), (1602, 4084), (1717, 4128)]
         : compromised: 0.4411, honest: 0.4204
Round 002: test acc mean=0.6635 ± 0.0260 | min=0.6046 max=0.6953
         : test loss mean=3.1805 ± 0.2164
         : individual accs = ['0.695252', '0.682132', '0.626562', '0.684053', '0.683940', '0.693492', '0.604579', '0.648885', '0.660702', '0.689034', '0.641081', '0.692583', '0.677498', '0.649512', '0.687562', '0.644577', '0.669396', '0.653120', '0.665034', '0.620397']
         : correct/total = [(2870, 4128), (2867, 4203), (2557, 4081), (2964, 4333), (2798, 4091), (2973, 4287), (2535, 4193), (2822, 4349), (2769, 4191), (2947, 4277), (2656, 4143), (2904, 4193), (2773, 4093), (2726, 4197), (2786, 4052), (2597, 4029), (2780, 4153), (2732, 4183), (2716, 4084), (2561, 4128)]
         : compromised: 0.6601, honest: 0.6713
Round 003: test acc mean=0.6736 ± 0.0455 | min=0.5741 max=0.7373
         : test loss mean=2.2050 ± 0.4133
         : individual accs = ['0.708576', '0.649774', '0.596422', '0.732979', '0.717917', '0.603919', '0.656332', '0.699011', '0.737294', '0.703063', '0.696597', '0.574052', '0.682385', '0.709554', '0.675962', '0.646066', '0.728148', '0.665312', '0.642752', '0.645349']
         : correct/total = [(2925, 4128), (2731, 4203), (2434, 4081), (3176, 4333), (2937, 4091), (2589, 4287), (2752, 4193), (3040, 4349), (3090, 4191), (3007, 4277), (2886, 4143), (2407, 4193), (2793, 4093), (2978, 4197), (2739, 4052), (2603, 4029), (3024, 4153), (2783, 4183), (2625, 4084), (2664, 4128)]
         : compromised: 0.6584, honest: 0.7089
Round 004: test acc mean=0.7639 ± 0.0198 | min=0.7098 max=0.7903
         : test loss mean=1.0958 ± 0.2055
         : individual accs = ['0.773983', '0.754937', '0.761578', '0.769905', '0.777805', '0.742477', '0.762700', '0.781329', '0.790265', '0.780454', '0.770939', '0.730980', '0.746885', '0.787467', '0.761352', '0.770414', '0.788587', '0.762132', '0.753428', '0.709787']
         : correct/total = [(3195, 4128), (3173, 4203), (3108, 4081), (3336, 4333), (3182, 4091), (3183, 4287), (3198, 4193), (3398, 4349), (3312, 4191), (3338, 4277), (3194, 4143), (3065, 4193), (3057, 4093), (3305, 4197), (3085, 4052), (3104, 4029), (3275, 4153), (3188, 4183), (3077, 4084), (2930, 4128)]
         : compromised: 0.7575, honest: 0.7788
Round 005: test acc mean=0.8044 ± 0.0076 | min=0.7896 max=0.8175
         : test loss mean=0.6735 ± 0.0424
         : individual accs = ['0.801599', '0.798477', '0.807645', '0.801985', '0.795405', '0.807091', '0.795850', '0.815130', '0.817466', '0.810849', '0.799903', '0.792988', '0.802834', '0.814629', '0.810958', '0.804418', '0.809776', '0.789625', '0.810725', '0.801114']
         : correct/total = [(3309, 4128), (3356, 4203), (3296, 4081), (3475, 4333), (3254, 4091), (3460, 4287), (3337, 4193), (3545, 4349), (3426, 4191), (3468, 4277), (3314, 4143), (3325, 4193), (3286, 4093), (3419, 4197), (3286, 4052), (3241, 4029), (3363, 4153), (3303, 4183), (3311, 4084), (3307, 4128)]
         : compromised: 0.8040, honest: 0.8054
Round 006: test acc mean=0.8235 ± 0.0057 | min=0.8120 max=0.8325
         : test loss mean=0.5623 ± 0.0196
         : individual accs = ['0.813227', '0.827028', '0.817937', '0.826448', '0.817893', '0.821087', '0.820892', '0.830536', '0.829874', '0.824877', '0.811972', '0.821369', '0.822135', '0.832499', '0.830701', '0.826756', '0.828076', '0.826201', '0.821988', '0.817829']
         : correct/total = [(3357, 4128), (3476, 4203), (3338, 4081), (3581, 4333), (3346, 4091), (3520, 4287), (3442, 4193), (3612, 4349), (3478, 4191), (3528, 4277), (3364, 4143), (3444, 4193), (3365, 4093), (3494, 4197), (3366, 4052), (3331, 4029), (3439, 4153), (3456, 4183), (3357, 4084), (3376, 4128)]
         : compromised: 0.8245, honest: 0.8211
Round 007: test acc mean=0.8349 ± 0.0056 | min=0.8211 max=0.8446
         : test loss mean=0.5138 ± 0.0193
         : individual accs = ['0.825581', '0.844635', '0.836315', '0.838680', '0.826448', '0.834150', '0.840210', '0.842033', '0.836316', '0.837971', '0.821144', '0.836632', '0.832397', '0.837265', '0.835390', '0.832961', '0.835300', '0.837437', '0.838883', '0.828731']
         : correct/total = [(3408, 4128), (3550, 4203), (3413, 4081), (3634, 4333), (3381, 4091), (3576, 4287), (3523, 4193), (3662, 4349), (3505, 4191), (3584, 4277), (3402, 4143), (3508, 4193), (3407, 4093), (3514, 4197), (3385, 4052), (3356, 4029), (3469, 4153), (3503, 4183), (3426, 4084), (3421, 4128)]
         : compromised: 0.8364, honest: 0.8314
Round 008: test acc mean=0.8382 ± 0.0069 | min=0.8205 max=0.8465
         : test loss mean=0.4905 ± 0.0207
         : individual accs = ['0.828488', '0.840352', '0.834844', '0.844450', '0.834270', '0.843947', '0.846411', '0.845022', '0.841327', '0.846154', '0.827178', '0.840925', '0.832885', '0.838694', '0.846496', '0.839166', '0.839152', '0.834568', '0.839128', '0.820494']
         : correct/total = [(3420, 4128), (3532, 4203), (3407, 4081), (3659, 4333), (3413, 4091), (3618, 4287), (3549, 4193), (3675, 4349), (3526, 4191), (3619, 4277), (3427, 4143), (3526, 4193), (3409, 4093), (3520, 4197), (3430, 4052), (3381, 4029), (3485, 4153), (3491, 4183), (3427, 4084), (3387, 4128)]
         : compromised: 0.8388, honest: 0.8367
Round 009: test acc mean=0.8461 ± 0.0062 | min=0.8340 max=0.8560
         : test loss mean=0.4684 ± 0.0181
         : individual accs = ['0.837936', '0.851535', '0.845381', '0.851373', '0.834026', '0.847213', '0.854519', '0.853070', '0.853018', '0.855974', '0.835868', '0.841879', '0.841925', '0.845127', '0.849951', '0.849094', '0.838671', '0.847956', '0.843536', '0.844477']
         : correct/total = [(3459, 4128), (3579, 4203), (3450, 4081), (3689, 4333), (3412, 4091), (3632, 4287), (3583, 4193), (3710, 4349), (3575, 4191), (3661, 4277), (3463, 4143), (3530, 4193), (3446, 4093), (3547, 4197), (3444, 4052), (3421, 4029), (3483, 4153), (3547, 4183), (3445, 4084), (3486, 4128)]
         : compromised: 0.8476, honest: 0.8426
Round 010: test acc mean=0.8505 ± 0.0056 | min=0.8405 max=0.8608
         : test loss mean=0.4554 ± 0.0185
         : individual accs = ['0.841328', '0.860814', '0.843911', '0.853912', '0.841359', '0.847213', '0.857381', '0.853759', '0.855404', '0.852467', '0.840454', '0.847603', '0.848522', '0.856802', '0.852912', '0.855299', '0.850470', '0.852498', '0.849657', '0.847868']
         : correct/total = [(3473, 4128), (3618, 4203), (3444, 4081), (3700, 4333), (3442, 4091), (3632, 4287), (3595, 4193), (3713, 4349), (3585, 4191), (3646, 4277), (3482, 4143), (3554, 4193), (3473, 4093), (3596, 4197), (3456, 4052), (3446, 4029), (3532, 4153), (3566, 4183), (3470, 4084), (3500, 4128)]
         : compromised: 0.8521, honest: 0.8466

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.8521, Honest: 0.8466
Overall test accuracy: mean=0.8505 ± 0.0056

=== BALANCE SUMMARY ===
Node 0: acceptance=0.312
Node 1: acceptance=0.364
Node 2: acceptance=0.333
Node 3: acceptance=0.375
Node 4: acceptance=0.364
Node 5: acceptance=0.267
Node 6: acceptance=0.286
Node 7: acceptance=0.286
Node 8: acceptance=0.200
Node 9: acceptance=0.308
Node 10: acceptance=0.222
Node 11: acceptance=0.357
Node 12: acceptance=0.333
Node 13: acceptance=0.231
Node 14: acceptance=0.267
Node 15: acceptance=0.273
Node 16: acceptance=0.231
Node 17: acceptance=0.444
Node 18: acceptance=0.312
Node 19: acceptance=0.312

Performance Summary:
  - Distance computation time: 1.157s (45.2%)
  - Filtering time: 1.254s (49.0%)
  - Aggregation time: 0.151s (5.9%)
  - Total time: 2.562s
  - Mean acceptance rate: 0.304

BALANCE Algorithm Properties:
  - Model dimension: 6,603,710
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
