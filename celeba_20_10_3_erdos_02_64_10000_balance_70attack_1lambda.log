Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5142 ± 0.0170 | min=0.4783 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.478299', '0.506897', '0.517794', '0.517031', '0.515598', '0.509284', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (551, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (576, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5141, honest: 0.5145
Round 002: test acc mean=0.4950 ± 0.0170 | min=0.4668 max=0.5371
         : test loss mean=8.2155 ± 4.8447
         : individual accs = ['0.524561', '0.515544', '0.482697', '0.491364', '0.481481', '0.487336', '0.537118', '0.494232', '0.500880', '0.482270', '0.499126', '0.495111', '0.477431', '0.500000', '0.481317', '0.485590', '0.493068', '0.466844', '0.519447', '0.485539']
         : correct/total = [(598, 1140), (597, 1158), (544, 1127), (569, 1158), (546, 1134), (558, 1145), (615, 1145), (557, 1127), (569, 1136), (544, 1128), (571, 1144), (557, 1125), (550, 1152), (580, 1160), (541, 1124), (556, 1145), (569, 1154), (528, 1131), (601, 1157), (554, 1141)]
         : compromised: 0.4947, honest: 0.4958
Round 003: test acc mean=0.5157 ± 0.0157 | min=0.4911 max=0.5625
         : test loss mean=1.1185 ± 0.5247
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.493966', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (573, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5162, honest: 0.5145
Round 004: test acc mean=0.5144 ± 0.0176 | min=0.4851 max=0.5625
         : test loss mean=19.4180 ± 11.0409
         : individual accs = ['0.528947', '0.509499', '0.493345', '0.528497', '0.525573', '0.506550', '0.521397', '0.526176', '0.562500', '0.491135', '0.485140', '0.498667', '0.522569', '0.501724', '0.517794', '0.502183', '0.515598', '0.512821', '0.502161', '0.535495']
         : correct/total = [(603, 1140), (590, 1158), (556, 1127), (612, 1158), (596, 1134), (580, 1145), (597, 1145), (593, 1127), (639, 1136), (554, 1128), (555, 1144), (561, 1125), (602, 1152), (582, 1160), (582, 1124), (575, 1145), (595, 1154), (580, 1131), (581, 1157), (611, 1141)]
         : compromised: 0.5154, honest: 0.5121
Round 005: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7939 ± 0.0988
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 006: test acc mean=0.5426 ± 0.0506 | min=0.4951 max=0.7055
         : test loss mean=14.4681 ± 11.4457
         : individual accs = ['0.564912', '0.507772', '0.495120', '0.528497', '0.543210', '0.503057', '0.527511', '0.580302', '0.628521', '0.509752', '0.520105', '0.498667', '0.522569', '0.506897', '0.522242', '0.507424', '0.580589', '0.576481', '0.522040', '0.705521']
         : correct/total = [(644, 1140), (588, 1158), (558, 1127), (612, 1158), (616, 1134), (576, 1145), (604, 1145), (654, 1127), (714, 1136), (575, 1128), (595, 1144), (561, 1125), (602, 1152), (588, 1160), (587, 1124), (581, 1145), (670, 1154), (652, 1131), (604, 1157), (805, 1141)]
         : compromised: 0.5395, honest: 0.5498
Round 007: test acc mean=0.5249 ± 0.0364 | min=0.4911 max=0.6646
         : test loss mean=0.7231 ± 0.0396
         : individual accs = ['0.529825', '0.508636', '0.493345', '0.539724', '0.522046', '0.514410', '0.521397', '0.503993', '0.573063', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.664591', '0.517031', '0.517331', '0.508400', '0.522040', '0.517967']
         : correct/total = [(604, 1140), (589, 1158), (556, 1127), (625, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (651, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (747, 1124), (592, 1145), (597, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5292, honest: 0.5149
Round 008: test acc mean=0.5422 ± 0.0473 | min=0.4942 max=0.6976
         : test loss mean=14.3581 ± 8.6447
         : individual accs = ['0.536842', '0.508636', '0.494232', '0.540587', '0.571429', '0.525764', '0.534498', '0.622893', '0.570423', '0.501773', '0.524476', '0.498667', '0.524306', '0.502586', '0.517794', '0.528384', '0.519064', '0.580902', '0.542783', '0.697634']
         : correct/total = [(612, 1140), (589, 1158), (557, 1127), (626, 1158), (648, 1134), (602, 1145), (612, 1145), (702, 1127), (648, 1136), (566, 1128), (600, 1144), (561, 1125), (604, 1152), (583, 1160), (582, 1124), (605, 1145), (599, 1154), (657, 1131), (628, 1157), (796, 1141)]
         : compromised: 0.5405, honest: 0.5461
Round 009: test acc mean=0.5191 ± 0.0186 | min=0.4933 max=0.5783
         : test loss mean=0.7390 ± 0.0669
         : individual accs = ['0.529825', '0.508636', '0.493345', '0.544041', '0.522046', '0.514410', '0.523144', '0.503993', '0.578345', '0.494681', '0.525350', '0.498667', '0.522569', '0.506897', '0.534698', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(604, 1140), (589, 1158), (556, 1127), (630, 1158), (592, 1134), (589, 1145), (599, 1145), (568, 1127), (657, 1136), (558, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (601, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5207, honest: 0.5152
Round 010: test acc mean=0.5496 ± 0.0462 | min=0.4987 max=0.6819
         : test loss mean=12.8666 ± 8.9084
         : individual accs = ['0.557018', '0.508636', '0.509317', '0.547496', '0.574956', '0.530131', '0.531004', '0.647737', '0.594190', '0.521277', '0.536713', '0.498667', '0.526910', '0.506897', '0.520463', '0.536245', '0.524263', '0.584439', '0.554019', '0.681858']
         : correct/total = [(635, 1140), (589, 1158), (574, 1127), (634, 1158), (652, 1134), (607, 1145), (608, 1145), (730, 1127), (675, 1136), (588, 1128), (614, 1144), (561, 1125), (607, 1152), (588, 1160), (585, 1124), (614, 1145), (605, 1154), (661, 1131), (641, 1157), (778, 1141)]
         : compromised: 0.5450, honest: 0.5603

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 70.0% compromised
Final accuracy - Compromised: 0.5450, Honest: 0.5603
Overall test accuracy: mean=0.5496 ± 0.0462

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.754s (38.3%)
  - Filtering time: 0.891s (45.3%)
  - Aggregation time: 0.322s (16.4%)
  - Total time: 1.967s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
