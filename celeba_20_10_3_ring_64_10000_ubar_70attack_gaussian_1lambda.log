Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
UBAR ALGORITHM (Two-Stage Byzantine-resilient)
  - Model dimension: 2,219,692 parameters
  - Rho parameter: 0.30000000000000004
  - Stage 1: Distance-based filtering (select 30% closest neighbors)
  - Stage 2: Performance-based selection (loss comparison)
  - Complexity: O(deg(i)×d + deg(i)×inference)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.5760 ± 0.0786 | min=0.4746 max=0.7185
         : test loss mean=46349792.5328 ± 57865465.3340
         : individual accs = ['0.474561', '0.670121', '0.500444', '0.643351', '0.519400', '0.601747', '0.555459', '0.500444', '0.685739', '0.676418', '0.718531', '0.670222', '0.486111', '0.534483', '0.483096', '0.632314', '0.485269', '0.583554', '0.522040', '0.577564']
         : correct/total = [(541, 1140), (776, 1158), (564, 1127), (745, 1158), (589, 1134), (689, 1145), (636, 1145), (564, 1127), (779, 1136), (763, 1128), (822, 1144), (754, 1125), (560, 1152), (620, 1160), (543, 1124), (724, 1145), (560, 1154), (660, 1131), (604, 1157), (659, 1141)]
         : compromised: 0.5819, honest: 0.5624
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 002: test acc mean=0.5544 ± 0.0925 | min=0.4931 max=0.7858
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.517271', '0.522046', '0.514410', '0.524017', '0.503993', '0.562500', '0.776596', '0.785839', '0.752000', '0.522569', '0.493103', '0.517794', '0.500437', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (599, 1158), (592, 1134), (589, 1145), (600, 1145), (568, 1127), (639, 1136), (876, 1128), (899, 1144), (846, 1125), (602, 1152), (572, 1160), (582, 1124), (573, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5325, honest: 0.6055
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 003: test acc mean=0.5697 ± 0.1250 | min=0.4931 max=0.8776
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.865248', '0.877622', '0.853333', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (976, 1128), (1004, 1144), (960, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5415, honest: 0.6356
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 004: test acc mean=0.5720 ± 0.1304 | min=0.4931 max=0.8830
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.882979', '0.882867', '0.876444', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (996, 1128), (1010, 1144), (986, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5432, honest: 0.6394
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 005: test acc mean=0.5745 ± 0.1364 | min=0.4931 max=0.9012
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.895390', '0.901224', '0.896000', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (1010, 1128), (1031, 1144), (1008, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5445, honest: 0.6445
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 006: test acc mean=0.5736 ± 0.1342 | min=0.4931 max=0.8960
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.886525', '0.891608', '0.896000', '0.522569', '0.493103', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (1000, 1128), (1020, 1144), (1008, 1125), (602, 1152), (572, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5445, honest: 0.6415
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 007: test acc mean=0.5766 ± 0.1392 | min=0.4933 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.906028', '0.902972', '0.910222', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (1022, 1128), (1033, 1144), (1024, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5466, honest: 0.6466
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 008: test acc mean=0.5757 ± 0.1372 | min=0.4933 max=0.9111
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.895390', '0.895979', '0.911111', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (1010, 1128), (1025, 1144), (1025, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5466, honest: 0.6437
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 009: test acc mean=0.5759 ± 0.1377 | min=0.4933 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.897163', '0.899476', '0.910222', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (1012, 1128), (1029, 1144), (1024, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5466, honest: 0.6445
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...
Round 010: test acc mean=0.5764 ± 0.1388 | min=0.4933 max=0.9093
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.899823', '0.906469', '0.909333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (1015, 1128), (1037, 1144), (1023, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5465, honest: 0.6461
         : ubar stats = ['Node 0: s1=0.500, s2=1.000', 'Node 1: s1=0.500, s2=1.000', 'Node 2: s1=0.500, s2=1.000']...

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: ubar
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.5465, Honest: 0.6461
Overall test accuracy: mean=0.5764 ± 0.1388

=== UBAR SUMMARY ===
Node 0: stage1=0.500, stage2=1.000, overall=0.500
Node 1: stage1=0.500, stage2=1.000, overall=0.500
Node 2: stage1=0.500, stage2=1.000, overall=0.500
Node 3: stage1=0.500, stage2=1.000, overall=0.500
Node 4: stage1=0.500, stage2=1.000, overall=0.500
Node 5: stage1=0.500, stage2=1.000, overall=0.500
Node 6: stage1=0.500, stage2=1.000, overall=0.500
Node 7: stage1=0.500, stage2=1.000, overall=0.500
Node 8: stage1=0.500, stage2=1.000, overall=0.500
Node 9: stage1=0.500, stage2=1.000, overall=0.500
Node 10: stage1=0.500, stage2=1.000, overall=0.500
Node 11: stage1=0.500, stage2=1.000, overall=0.500
Node 12: stage1=0.500, stage2=1.000, overall=0.500
Node 13: stage1=0.500, stage2=1.000, overall=0.500
Node 14: stage1=0.500, stage2=1.000, overall=0.500
Node 15: stage1=0.500, stage2=1.000, overall=0.500
Node 16: stage1=0.500, stage2=1.000, overall=0.500
Node 17: stage1=0.500, stage2=1.000, overall=0.500
Node 18: stage1=0.500, stage2=1.000, overall=0.500
Node 19: stage1=0.500, stage2=1.000, overall=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Distance computation: 0.041s (15.9%)
    - Loss computation: 0.203s (79.3%)
    - Aggregation: 0.012s (4.8%)
  TOTALS:
    - Total computation: 0.256s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.256s

=== PER-NODE AVERAGE TIME ===
  - Distance computation: 0.008s
  - Loss computation: 0.169s
  - Aggregation: 0.005s
  - Model transfer: 0.000s
  - Total per node: 0.182s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total distance computation: 0.159s
  - Total loss computation: 3.378s
  - Total aggregation: 0.107s
  - Total model transfer: 0.000s
  - Grand total: 3.645s
  - Mean Stage 1 acceptance rate: 0.500
  - Mean Stage 2 acceptance rate: 1.000
  - Overall acceptance rate: 0.500

UBAR Algorithm Properties:
  - Model dimension: 2,219,692
  - Rho parameter: 0.30000000000000004
  - Two-stage approach: Distance filtering + loss evaluation
  - Stage 1 selects: 30% of neighbors
  - Stage 2 uses: Training sample loss comparison
  - Theoretical complexity: O(deg(i)×d + deg(i)×inference)
  - Approach: UBAR paper implementation
