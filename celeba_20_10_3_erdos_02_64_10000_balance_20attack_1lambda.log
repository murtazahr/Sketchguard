Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: directed_deviation, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5144 ± 0.0152 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.504318', '0.527337', '0.510917', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.507556', '0.504340', '0.506897', '0.517794', '0.517031', '0.515598', '0.500442', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (584, 1158), (598, 1134), (585, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (571, 1125), (581, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (566, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5056, honest: 0.5166
Round 002: test acc mean=0.5116 ± 0.0186 | min=0.4856 max=0.5625
         : test loss mean=2.8161 ± 4.2390
         : individual accs = ['0.513158', '0.508636', '0.493345', '0.508636', '0.508818', '0.485590', '0.549345', '0.496007', '0.562500', '0.491135', '0.512238', '0.513778', '0.522569', '0.506897', '0.493772', '0.490830', '0.510399', '0.525199', '0.522040', '0.517967']
         : correct/total = [(585, 1140), (589, 1158), (556, 1127), (589, 1158), (577, 1134), (556, 1145), (629, 1145), (559, 1127), (639, 1136), (554, 1128), (586, 1144), (578, 1125), (602, 1152), (588, 1160), (555, 1124), (562, 1145), (589, 1154), (594, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5101, honest: 0.5120
Round 003: test acc mean=0.5149 ± 0.0204 | min=0.4822 max=0.5625
         : test loss mean=0.7679 ± 0.0534
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.482206', '0.482969', '0.556326', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (642, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5154
Round 004: test acc mean=0.5445 ± 0.0504 | min=0.4822 max=0.6775
         : test loss mean=9.9528 ± 26.9759
         : individual accs = ['0.589474', '0.508636', '0.493345', '0.556995', '0.530864', '0.529258', '0.605240', '0.523514', '0.615317', '0.494681', '0.525350', '0.535111', '0.604167', '0.506897', '0.482206', '0.524017', '0.485269', '0.580018', '0.522904', '0.677476']
         : correct/total = [(672, 1140), (589, 1158), (556, 1127), (645, 1158), (602, 1134), (606, 1145), (693, 1145), (590, 1127), (699, 1136), (558, 1128), (601, 1144), (602, 1125), (696, 1152), (588, 1160), (542, 1124), (600, 1145), (560, 1154), (656, 1131), (605, 1157), (773, 1141)]
         : compromised: 0.5551, honest: 0.5419
Round 005: test acc mean=0.5254 ± 0.0364 | min=0.4858 max=0.6303
         : test loss mean=0.7528 ± 0.0801
         : individual accs = ['0.528947', '0.515544', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.628521', '0.630319', '0.525350', '0.498667', '0.522569', '0.506897', '0.485765', '0.517031', '0.515598', '0.508400', '0.522040', '0.518843']
         : correct/total = [(603, 1140), (597, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (714, 1136), (711, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (546, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (592, 1141)]
         : compromised: 0.5131, honest: 0.5285
Round 006: test acc mean=0.6199 ± 0.0944 | min=0.5069 max=0.8592
         : test loss mean=2.4774 ± 3.2331
         : individual accs = ['0.701754', '0.556995', '0.643301', '0.581174', '0.555556', '0.517031', '0.695197', '0.524401', '0.859155', '0.606383', '0.609266', '0.689778', '0.588542', '0.506897', '0.532918', '0.645415', '0.566724', '0.510168', '0.729473', '0.777388']
         : correct/total = [(800, 1140), (645, 1158), (725, 1127), (673, 1158), (630, 1134), (592, 1145), (796, 1145), (591, 1127), (976, 1136), (684, 1128), (697, 1144), (776, 1125), (678, 1152), (588, 1160), (599, 1124), (739, 1145), (654, 1154), (577, 1131), (844, 1157), (887, 1141)]
         : compromised: 0.5307, honest: 0.6422
Round 007: test acc mean=0.5900 ± 0.1255 | min=0.4987 max=0.8829
         : test loss mean=0.6847 ± 0.1674
         : individual accs = ['0.528947', '0.745250', '0.505768', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.882923', '0.847518', '0.525350', '0.498667', '0.522569', '0.574138', '0.517794', '0.517031', '0.515598', '0.508400', '0.713051', '0.806310']
         : correct/total = [(603, 1140), (863, 1158), (570, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (1003, 1136), (956, 1128), (601, 1144), (561, 1125), (602, 1152), (666, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (825, 1157), (920, 1141)]
         : compromised: 0.5299, honest: 0.6050
Round 008: test acc mean=0.6784 ± 0.1222 | min=0.5058 max=0.8856
         : test loss mean=2.1984 ± 3.0723
         : individual accs = ['0.827193', '0.656304', '0.761313', '0.724525', '0.557319', '0.524891', '0.775546', '0.505768', '0.885563', '0.805851', '0.542832', '0.661333', '0.787326', '0.506897', '0.567616', '0.605240', '0.660312', '0.571176', '0.806396', '0.835232']
         : correct/total = [(943, 1140), (760, 1158), (858, 1127), (839, 1158), (632, 1134), (601, 1145), (888, 1145), (570, 1127), (1006, 1136), (909, 1128), (621, 1144), (744, 1125), (907, 1152), (588, 1160), (638, 1124), (693, 1145), (762, 1154), (646, 1131), (933, 1157), (953, 1141)]
         : compromised: 0.5976, honest: 0.6986
Round 009: test acc mean=0.6277 ± 0.1550 | min=0.4987 max=0.8856
         : test loss mean=0.6708 ± 0.2240
         : individual accs = ['0.528947', '0.859240', '0.703638', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.879401', '0.885638', '0.525350', '0.498667', '0.522569', '0.802586', '0.517794', '0.517031', '0.515598', '0.508400', '0.814175', '0.885188']
         : correct/total = [(603, 1140), (995, 1158), (793, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (999, 1136), (999, 1128), (601, 1144), (561, 1125), (602, 1152), (931, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (942, 1157), (1010, 1141)]
         : compromised: 0.5870, honest: 0.6379
Round 010: test acc mean=0.7283 ± 0.1325 | min=0.5058 max=0.9023
         : test loss mean=1.8946 ± 2.7860
         : individual accs = ['0.854386', '0.796200', '0.772848', '0.778066', '0.579365', '0.516157', '0.844541', '0.505768', '0.902289', '0.840426', '0.625000', '0.688889', '0.845486', '0.506897', '0.599644', '0.637555', '0.708839', '0.801061', '0.864304', '0.898335']
         : correct/total = [(974, 1140), (922, 1158), (871, 1127), (901, 1158), (657, 1134), (591, 1145), (967, 1145), (570, 1127), (1025, 1136), (948, 1128), (715, 1144), (775, 1125), (974, 1152), (588, 1160), (674, 1124), (730, 1145), (818, 1154), (906, 1131), (1000, 1157), (1025, 1141)]
         : compromised: 0.6674, honest: 0.7435

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: directed_deviation, 20.0% compromised
Final accuracy - Compromised: 0.6674, Honest: 0.7435
Overall test accuracy: mean=0.7283 ± 0.1325

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=1.000
Node 5: acceptance=1.000
Node 6: acceptance=1.000
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=1.000
Node 12: acceptance=1.000
Node 13: acceptance=1.000
Node 14: acceptance=1.000
Node 15: acceptance=1.000
Node 16: acceptance=1.000
Node 17: acceptance=1.000
Node 18: acceptance=1.000
Node 19: acceptance=1.000

Performance Summary:
  - Distance computation time: 0.747s (38.6%)
  - Filtering time: 0.881s (45.5%)
  - Aggregation time: 0.309s (16.0%)
  - Total time: 1.937s
  - Mean acceptance rate: 1.000

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
