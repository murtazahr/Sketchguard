Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 126
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8429 ± 0.0771
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 002: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7920 ± 0.0749
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.504880', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (569, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5218
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 004: test acc mean=0.5022 ± 0.0197 | min=0.4739 max=0.5511
         : test loss mean=254.7829 ± 224.6348
         : individual accs = ['0.523684', '0.505181', '0.491571', '0.534542', '0.478836', '0.490830', '0.483843', '0.491571', '0.551056', '0.507979', '0.525350', '0.488000', '0.505208', '0.506034', '0.517794', '0.503057', '0.500867', '0.473917', '0.480553', '0.484663']
         : correct/total = [(597, 1140), (585, 1158), (554, 1127), (619, 1158), (543, 1134), (562, 1145), (554, 1145), (554, 1127), (626, 1136), (573, 1128), (601, 1144), (549, 1125), (582, 1152), (587, 1160), (582, 1124), (576, 1145), (578, 1154), (536, 1131), (556, 1157), (553, 1141)]
         : compromised: 0.4962, honest: 0.5082
Round 005: test acc mean=0.5040 ± 0.0237 | min=0.4658 max=0.5599
         : test loss mean=203.6236 ± 227.7568
         : individual accs = ['0.478070', '0.543178', '0.503106', '0.531088', '0.477072', '0.485590', '0.508297', '0.504880', '0.559859', '0.513298', '0.513112', '0.465778', '0.485243', '0.496552', '0.478648', '0.517031', '0.509532', '0.474801', '0.515125', '0.518843']
         : correct/total = [(545, 1140), (629, 1158), (567, 1127), (615, 1158), (541, 1134), (556, 1145), (582, 1145), (569, 1127), (636, 1136), (579, 1128), (587, 1144), (524, 1125), (559, 1152), (576, 1160), (538, 1124), (592, 1145), (588, 1154), (537, 1131), (596, 1157), (592, 1141)]
         : compromised: 0.4965, honest: 0.5114
Round 006: test acc mean=0.5004 ± 0.0230 | min=0.4445 max=0.5523
         : test loss mean=180.2467 ± 145.5342
         : individual accs = ['0.528070', '0.505181', '0.493345', '0.522453', '0.487654', '0.502183', '0.521397', '0.496007', '0.444542', '0.535461', '0.476399', '0.494222', '0.488715', '0.506897', '0.499110', '0.482969', '0.484402', '0.501326', '0.552290', '0.484663']
         : correct/total = [(602, 1140), (585, 1158), (556, 1127), (605, 1158), (553, 1134), (575, 1145), (597, 1145), (559, 1127), (505, 1136), (604, 1128), (545, 1144), (556, 1125), (563, 1152), (588, 1160), (561, 1124), (553, 1145), (559, 1154), (567, 1131), (639, 1157), (553, 1141)]
         : compromised: 0.5026, honest: 0.4981
Round 007: test acc mean=0.5011 ± 0.0222 | min=0.4747 max=0.5625
         : test loss mean=0.8184 ± 0.1570
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.477954', '0.485590', '0.521397', '0.496007', '0.562500', '0.491135', '0.474650', '0.501333', '0.477431', '0.506897', '0.482206', '0.482969', '0.515598', '0.491600', '0.477960', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (542, 1134), (556, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (543, 1144), (564, 1125), (550, 1152), (588, 1160), (542, 1124), (553, 1145), (595, 1154), (556, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.4908, honest: 0.5115
Round 008: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7085 ± 0.0261
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 009: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.6926 ± 0.0013
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 010: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.6928 ± 0.0010
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.5110, Honest: 0.5217
Overall test accuracy: mean=0.5164 ± 0.0150

=== BALANCE SUMMARY ===
Node 0: acceptance=0.644
Node 1: acceptance=0.691
Node 2: acceptance=0.642
Node 3: acceptance=0.738
Node 4: acceptance=0.664
Node 5: acceptance=0.620
Node 6: acceptance=0.629
Node 7: acceptance=0.607
Node 8: acceptance=0.640
Node 9: acceptance=0.677
Node 10: acceptance=0.722
Node 11: acceptance=0.636
Node 12: acceptance=0.708
Node 13: acceptance=0.677
Node 14: acceptance=0.620
Node 15: acceptance=0.655
Node 16: acceptance=0.600
Node 17: acceptance=0.744
Node 18: acceptance=0.650
Node 19: acceptance=0.600

Performance Summary:
  - Distance computation time: 1.988s (44.0%)
  - Filtering time: 2.126s (47.0%)
  - Aggregation time: 0.408s (9.0%)
  - Total time: 4.522s
  - Mean acceptance rate: 0.658

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
