Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.5968 ± 0.0806 | min=0.4531 max=0.7177
         : test loss mean=32158194.7934 ± 73044902.0683
         : individual accs = ['0.578070', '0.670121', '0.669033', '0.641623', '0.640212', '0.551092', '0.555459', '0.540373', '0.712148', '0.658688', '0.717657', '0.672889', '0.453125', '0.456034', '0.488434', '0.631441', '0.482669', '0.583554', '0.656007', '0.576687']
         : correct/total = [(659, 1140), (776, 1158), (754, 1127), (743, 1158), (726, 1134), (631, 1145), (636, 1145), (609, 1127), (809, 1136), (743, 1128), (821, 1144), (757, 1125), (522, 1152), (529, 1160), (549, 1124), (723, 1145), (557, 1154), (660, 1131), (759, 1157), (658, 1141)]
         : compromised: 0.5832, honest: 0.6104
Round 002: test acc mean=0.6629 ± 0.1009 | min=0.5069 max=0.7719
         : test loss mean=nan ± nan
         : individual accs = ['0.742105', '0.734024', '0.714286', '0.709845', '0.704586', '0.650655', '0.727511', '0.689441', '0.745599', '0.726064', '0.771853', '0.753778', '0.522569', '0.506897', '0.517794', '0.511790', '0.515598', '0.508400', '0.743302', '0.761613']
         : correct/total = [(846, 1140), (850, 1158), (805, 1127), (822, 1158), (799, 1134), (745, 1145), (833, 1145), (777, 1127), (847, 1136), (819, 1128), (883, 1144), (848, 1125), (602, 1152), (588, 1160), (582, 1124), (586, 1145), (595, 1154), (575, 1131), (860, 1157), (869, 1141)]
         : compromised: 0.6163, honest: 0.7094
Round 003: test acc mean=0.7203 ± 0.1374 | min=0.5069 max=0.8619
         : test loss mean=nan ± nan
         : individual accs = ['0.835088', '0.816926', '0.793256', '0.785838', '0.794533', '0.730131', '0.799127', '0.777285', '0.801937', '0.836879', '0.861888', '0.855111', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.798617', '0.830850']
         : correct/total = [(952, 1140), (946, 1158), (894, 1127), (910, 1158), (901, 1134), (836, 1145), (915, 1145), (876, 1127), (911, 1136), (944, 1128), (986, 1144), (962, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (924, 1157), (948, 1141)]
         : compromised: 0.6567, honest: 0.7839
Round 004: test acc mean=0.7540 ± 0.1572 | min=0.5069 max=0.8782
         : test loss mean=nan ± nan
         : individual accs = ['0.864912', '0.878238', '0.860692', '0.865285', '0.841270', '0.821834', '0.855895', '0.840284', '0.846831', '0.872340', '0.868007', '0.864889', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.843561', '0.867660']
         : correct/total = [(986, 1140), (1017, 1158), (970, 1127), (1002, 1158), (954, 1134), (941, 1145), (980, 1145), (947, 1127), (962, 1136), (984, 1128), (993, 1144), (973, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (976, 1157), (990, 1141)]
         : compromised: 0.6842, honest: 0.8238
Round 005: test acc mean=0.7571 ± 0.1594 | min=0.5069 max=0.8907
         : test loss mean=nan ± nan
         : individual accs = ['0.837719', '0.855786', '0.863354', '0.884283', '0.865079', '0.849782', '0.869869', '0.866903', '0.834507', '0.852837', '0.890734', '0.884444', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.835782', '0.862401']
         : correct/total = [(955, 1140), (991, 1158), (973, 1127), (1024, 1158), (981, 1134), (973, 1145), (996, 1145), (977, 1127), (948, 1136), (962, 1128), (1019, 1144), (995, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (967, 1157), (984, 1141)]
         : compromised: 0.6862, honest: 0.8280
Round 006: test acc mean=0.7727 ± 0.1690 | min=0.5069 max=0.8907
         : test loss mean=nan ± nan
         : individual accs = ['0.890351', '0.890328', '0.885537', '0.886874', '0.883598', '0.880349', '0.882096', '0.880213', '0.882042', '0.867021', '0.890734', '0.890667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.872947', '0.883436']
         : correct/total = [(1015, 1140), (1031, 1158), (998, 1127), (1027, 1158), (1002, 1134), (1008, 1145), (1010, 1145), (992, 1127), (1002, 1136), (978, 1128), (1019, 1144), (1002, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (1010, 1157), (1008, 1141)]
         : compromised: 0.6993, honest: 0.8462
Round 007: test acc mean=0.7786 ± 0.1729 | min=0.5069 max=0.9031
         : test loss mean=nan ± nan
         : individual accs = ['0.895614', '0.897237', '0.890861', '0.893782', '0.881834', '0.891703', '0.888210', '0.888199', '0.882042', '0.895390', '0.896853', '0.903111', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.882455', '0.896582']
         : correct/total = [(1021, 1140), (1039, 1158), (1004, 1127), (1035, 1158), (1000, 1134), (1021, 1145), (1017, 1145), (1001, 1127), (1002, 1136), (1010, 1128), (1026, 1144), (1016, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (1021, 1157), (1023, 1141)]
         : compromised: 0.7038, honest: 0.8534
Round 008: test acc mean=0.7776 ± 0.1723 | min=0.5069 max=0.9093
         : test loss mean=nan ± nan
         : individual accs = ['0.892105', '0.896373', '0.887311', '0.891192', '0.897707', '0.900437', '0.889956', '0.888199', '0.869718', '0.877660', '0.895979', '0.909333', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.879862', '0.886941']
         : correct/total = [(1017, 1140), (1038, 1158), (1000, 1127), (1032, 1158), (1018, 1134), (1031, 1145), (1019, 1145), (1001, 1127), (988, 1136), (990, 1128), (1025, 1144), (1023, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (1018, 1157), (1012, 1141)]
         : compromised: 0.7046, honest: 0.8505
Round 009: test acc mean=0.7818 ± 0.1751 | min=0.5069 max=0.9136
         : test loss mean=nan ± nan
         : individual accs = ['0.900877', '0.888601', '0.895297', '0.913644', '0.902116', '0.903057', '0.896070', '0.900621', '0.883803', '0.891844', '0.897727', '0.906667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.872083', '0.894829']
         : correct/total = [(1027, 1140), (1029, 1158), (1009, 1127), (1058, 1158), (1023, 1134), (1034, 1145), (1026, 1145), (1015, 1127), (1004, 1136), (1006, 1128), (1027, 1144), (1020, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (1009, 1157), (1021, 1141)]
         : compromised: 0.7038, honest: 0.8597
Round 010: test acc mean=0.7844 ± 0.1766 | min=0.5069 max=0.9102
         : test loss mean=nan ± nan
         : individual accs = ['0.899123', '0.907599', '0.892635', '0.907599', '0.902116', '0.905677', '0.884716', '0.901508', '0.897887', '0.900709', '0.898601', '0.910222', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.889369', '0.900964']
         : correct/total = [(1025, 1140), (1051, 1158), (1006, 1127), (1051, 1158), (1023, 1134), (1037, 1145), (1013, 1145), (1016, 1127), (1020, 1136), (1016, 1128), (1028, 1144), (1024, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (1029, 1157), (1028, 1141)]
         : compromised: 0.7078, honest: 0.8609

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.7078, Honest: 0.8609
Overall test accuracy: mean=0.7844 ± 0.1766

=== BALANCE SUMMARY ===
Node 0: acceptance=0.500
Node 1: acceptance=0.500
Node 2: acceptance=0.500
Node 3: acceptance=0.500
Node 4: acceptance=0.500
Node 5: acceptance=0.800
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=0.500
Node 11: acceptance=0.500
Node 12: acceptance=0.000
Node 13: acceptance=0.000
Node 14: acceptance=0.000
Node 15: acceptance=0.050
Node 16: acceptance=0.000
Node 17: acceptance=0.050
Node 18: acceptance=0.500
Node 19: acceptance=0.500

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.0%)
  COMPUTATION (max across nodes):
    - Filtering: 0.014s (52.6%)
    - Aggregation: 0.013s (47.4%)
  TOTALS:
    - Total computation: 0.027s (100.0%)
    - Total communication: 0.000s (0.0%)
    - Total parallel time: 0.027s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.007s
  - Aggregation: 0.005s
  - Model transfer: 0.000s
  - Total per node: 0.012s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.139s
  - Total aggregation: 0.093s
  - Total model transfer: 0.000s
  - Grand total: 0.232s
  - Mean acceptance rate: 0.445

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
