Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5160, honest: 0.5176
Round 002: test acc mean=0.5028 ± 0.0218 | min=0.4507 max=0.5528
         : test loss mean=nan ± nan
         : individual accs = ['0.475439', '0.505181', '0.494232', '0.481002', '0.523810', '0.514410', '0.552838', '0.502218', '0.450704', '0.508865', '0.522727', '0.498667', '0.522569', '0.497414', '0.488434', '0.486463', '0.492201', '0.527851', '0.493518', '0.517967']
         : correct/total = [(542, 1140), (585, 1158), (557, 1127), (557, 1158), (594, 1134), (589, 1145), (633, 1145), (566, 1127), (512, 1136), (574, 1128), (598, 1144), (561, 1125), (602, 1152), (577, 1160), (549, 1124), (557, 1145), (568, 1154), (597, 1131), (571, 1157), (591, 1141)]
         : compromised: 0.5039, honest: 0.4984
Round 003: test acc mean=0.5073 ± 0.0174 | min=0.4645 max=0.5440
         : test loss mean=nan ± nan
         : individual accs = ['0.484211', '0.503454', '0.506655', '0.529361', '0.514109', '0.510044', '0.521397', '0.505768', '0.544014', '0.464539', '0.525350', '0.501333', '0.493056', '0.493103', '0.508007', '0.512664', '0.483536', '0.508400', '0.519447', '0.517967']
         : correct/total = [(552, 1140), (583, 1158), (571, 1127), (613, 1158), (583, 1134), (584, 1145), (597, 1145), (570, 1127), (618, 1136), (524, 1128), (601, 1144), (564, 1125), (568, 1152), (572, 1160), (571, 1124), (587, 1145), (558, 1154), (575, 1131), (601, 1157), (591, 1141)]
         : compromised: 0.5099, honest: 0.4969
Round 004: test acc mean=0.4975 ± 0.0240 | min=0.4384 max=0.5421
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.497409', '0.506655', '0.537133', '0.508818', '0.489956', '0.510044', '0.542147', '0.438380', '0.484929', '0.473776', '0.499556', '0.477431', '0.506897', '0.480427', '0.482969', '0.488735', '0.506631', '0.529818', '0.517967']
         : correct/total = [(537, 1140), (576, 1158), (571, 1127), (622, 1158), (577, 1134), (561, 1145), (584, 1145), (611, 1127), (498, 1136), (547, 1128), (542, 1144), (562, 1125), (550, 1152), (588, 1160), (540, 1124), (553, 1145), (564, 1154), (573, 1131), (613, 1157), (591, 1141)]
         : compromised: 0.4962, honest: 0.5027
Round 005: test acc mean=0.5085 ± 0.0231 | min=0.4685 max=0.5643
         : test loss mean=nan ± nan
         : individual accs = ['0.529825', '0.508636', '0.468500', '0.537997', '0.525573', '0.506550', '0.520524', '0.496894', '0.564261', '0.491135', '0.527098', '0.498667', '0.477431', '0.505172', '0.482206', '0.517031', '0.512132', '0.511936', '0.470182', '0.517967']
         : correct/total = [(604, 1140), (589, 1158), (528, 1127), (623, 1158), (596, 1134), (580, 1145), (596, 1145), (560, 1127), (641, 1136), (554, 1128), (603, 1144), (561, 1125), (550, 1152), (586, 1160), (542, 1124), (592, 1145), (591, 1154), (579, 1131), (544, 1157), (591, 1141)]
         : compromised: 0.5066, honest: 0.5161
Round 006: test acc mean=0.5050 ± 0.0271 | min=0.4313 max=0.5747
         : test loss mean=nan ± nan
         : individual accs = ['0.499123', '0.491364', '0.506655', '0.535406', '0.522046', '0.484716', '0.494323', '0.503993', '0.431338', '0.522163', '0.474650', '0.497778', '0.522569', '0.493966', '0.574733', '0.517031', '0.491334', '0.498674', '0.520311', '0.517967']
         : correct/total = [(569, 1140), (569, 1158), (571, 1127), (620, 1158), (592, 1134), (555, 1145), (566, 1145), (568, 1127), (490, 1136), (589, 1128), (543, 1144), (560, 1125), (602, 1152), (573, 1160), (646, 1124), (592, 1145), (567, 1154), (564, 1131), (602, 1157), (591, 1141)]
         : compromised: 0.5052, honest: 0.5041
Round 007: test acc mean=0.4982 ± 0.0230 | min=0.4524 max=0.5395
         : test loss mean=nan ± nan
         : individual accs = ['0.539474', '0.471503', '0.492458', '0.500864', '0.522046', '0.452402', '0.521397', '0.503993', '0.461268', '0.484929', '0.508741', '0.493333', '0.456597', '0.506897', '0.519573', '0.507424', '0.515598', '0.502210', '0.485739', '0.517967']
         : correct/total = [(615, 1140), (546, 1158), (555, 1127), (580, 1158), (592, 1134), (518, 1145), (597, 1145), (568, 1127), (524, 1136), (547, 1128), (582, 1144), (555, 1125), (526, 1152), (588, 1160), (584, 1124), (581, 1145), (595, 1154), (568, 1131), (562, 1157), (591, 1141)]
         : compromised: 0.4927, honest: 0.5203
Round 008: test acc mean=0.4969 ± 0.0267 | min=0.4277 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.515789', '0.491364', '0.427684', '0.469775', '0.507055', '0.491703', '0.521397', '0.496007', '0.562500', '0.507979', '0.525350', '0.501333', '0.501736', '0.493103', '0.468861', '0.486463', '0.484402', '0.468612', '0.499568', '0.517967']
         : correct/total = [(588, 1140), (569, 1158), (482, 1127), (544, 1158), (575, 1134), (563, 1145), (597, 1145), (559, 1127), (639, 1136), (573, 1128), (601, 1144), (564, 1125), (578, 1152), (572, 1160), (527, 1124), (557, 1145), (559, 1154), (530, 1131), (578, 1157), (591, 1141)]
         : compromised: 0.4960, honest: 0.5008
Round 009: test acc mean=0.5094 ± 0.0237 | min=0.4537 max=0.5581
         : test loss mean=nan ± nan
         : individual accs = ['0.529825', '0.505181', '0.493345', '0.517271', '0.477954', '0.479476', '0.525764', '0.527063', '0.558099', '0.527482', '0.527972', '0.498667', '0.520833', '0.493103', '0.453737', '0.514410', '0.478336', '0.519010', '0.522040', '0.517967']
         : correct/total = [(604, 1140), (585, 1158), (556, 1127), (599, 1158), (542, 1134), (549, 1145), (602, 1145), (594, 1127), (634, 1136), (595, 1128), (604, 1144), (561, 1125), (600, 1152), (572, 1160), (510, 1124), (589, 1145), (552, 1154), (587, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5109, honest: 0.5033
Round 010: test acc mean=0.4983 ± 0.0256 | min=0.4331 max=0.5430
         : test loss mean=nan ± nan
         : individual accs = ['0.542982', '0.491364', '0.494232', '0.520725', '0.476190', '0.489083', '0.477729', '0.543035', '0.433099', '0.508865', '0.519231', '0.498667', '0.473958', '0.517241', '0.482206', '0.482969', '0.500867', '0.519010', '0.477096', '0.517967']
         : correct/total = [(619, 1140), (569, 1158), (557, 1127), (603, 1158), (540, 1134), (560, 1145), (547, 1145), (612, 1127), (492, 1136), (574, 1128), (594, 1144), (561, 1125), (546, 1152), (600, 1160), (542, 1124), (553, 1145), (578, 1154), (587, 1131), (552, 1157), (591, 1141)]
         : compromised: 0.4940, honest: 0.5158

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: d-fedavg
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.4940, Honest: 0.5158
Overall test accuracy: mean=0.4983 ± 0.0256
