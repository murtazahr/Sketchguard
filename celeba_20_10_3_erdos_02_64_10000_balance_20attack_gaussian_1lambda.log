Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8685 ± 0.1005
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172
Round 002: test acc mean=0.5202 ± 0.0151 | min=0.4911 max=0.5625
         : test loss mean=0.7417 ± 0.0836
         : individual accs = ['0.528947', '0.508636', '0.506655', '0.529361', '0.523810', '0.514410', '0.521397', '0.540373', '0.562500', '0.491135', '0.527098', '0.500444', '0.522569', '0.506897', '0.534698', '0.518777', '0.515598', '0.508400', '0.522904', '0.519720']
         : correct/total = [(603, 1140), (589, 1158), (571, 1127), (613, 1158), (594, 1134), (589, 1145), (597, 1145), (609, 1127), (639, 1136), (554, 1128), (603, 1144), (563, 1125), (602, 1152), (588, 1160), (601, 1124), (594, 1145), (595, 1154), (575, 1131), (605, 1157), (593, 1141)]
         : compromised: 0.5131, honest: 0.5220
Round 003: test acc mean=0.5321 ± 0.0354 | min=0.4987 max=0.6486
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.545769', '0.573203', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.594190', '0.500000', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.548833', '0.648554']
         : correct/total = [(603, 1140), (632, 1158), (646, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (675, 1136), (564, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (635, 1157), (740, 1141)]
         : compromised: 0.5131, honest: 0.5369
Round 004: test acc mean=0.5366 ± 0.0872 | min=0.4755 max=0.8265
         : test loss mean=288894.0359 ± 1206116.4510
         : individual accs = ['0.490351', '0.700345', '0.493345', '0.528497', '0.487654', '0.502183', '0.482096', '0.507542', '0.562500', '0.491135', '0.475524', '0.501333', '0.477431', '0.492241', '0.516904', '0.516157', '0.514731', '0.508400', '0.657736', '0.826468']
         : correct/total = [(559, 1140), (811, 1158), (556, 1127), (612, 1158), (553, 1134), (575, 1145), (552, 1145), (572, 1127), (639, 1136), (554, 1128), (544, 1144), (564, 1125), (550, 1152), (571, 1160), (581, 1124), (591, 1145), (594, 1154), (575, 1131), (761, 1157), (943, 1141)]
         : compromised: 0.4951, honest: 0.5470
Round 005: test acc mean=0.5237 ± 0.0453 | min=0.4747 max=0.6389
         : test loss mean=498.6932 ± 1474.5966
         : individual accs = ['0.539474', '0.622625', '0.638864', '0.530225', '0.477954', '0.484716', '0.531878', '0.503993', '0.578345', '0.491135', '0.474650', '0.501333', '0.522569', '0.493103', '0.481317', '0.484716', '0.515598', '0.508400', '0.523768', '0.569676']
         : correct/total = [(615, 1140), (721, 1158), (720, 1127), (614, 1158), (542, 1134), (555, 1145), (609, 1145), (568, 1127), (657, 1136), (554, 1128), (543, 1144), (564, 1125), (602, 1152), (572, 1160), (541, 1124), (555, 1145), (595, 1154), (575, 1131), (606, 1157), (650, 1141)]
         : compromised: 0.5022, honest: 0.5291
Round 006: test acc mean=0.5961 ± 0.1658 | min=0.4789 max=0.9010
         : test loss mean=273.1009 ± 623.7577
         : individual accs = ['0.478947', '0.886874', '0.897072', '0.536269', '0.522928', '0.493450', '0.484716', '0.509317', '0.866197', '0.491135', '0.496503', '0.501333', '0.491319', '0.506897', '0.516014', '0.483843', '0.500000', '0.498674', '0.859118', '0.900964']
         : correct/total = [(546, 1140), (1027, 1158), (1011, 1127), (621, 1158), (593, 1134), (565, 1145), (555, 1145), (574, 1127), (984, 1136), (554, 1128), (568, 1144), (564, 1125), (566, 1152), (588, 1160), (580, 1124), (554, 1145), (577, 1154), (564, 1131), (994, 1157), (1028, 1141)]
         : compromised: 0.4976, honest: 0.6207
Round 007: test acc mean=0.6008 ± 0.1728 | min=0.4747 max=0.9129
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.894646', '0.900621', '0.528497', '0.522046', '0.485590', '0.478603', '0.496007', '0.912852', '0.491135', '0.474650', '0.498667', '0.522569', '0.506897', '0.482206', '0.482969', '0.515598', '0.508400', '0.882455', '0.902717']
         : correct/total = [(603, 1140), (1036, 1158), (1015, 1127), (612, 1158), (592, 1134), (556, 1145), (548, 1145), (559, 1127), (1037, 1136), (554, 1128), (543, 1144), (561, 1125), (602, 1152), (588, 1160), (542, 1124), (553, 1145), (595, 1154), (575, 1131), (1021, 1157), (1030, 1141)]
         : compromised: 0.5059, honest: 0.6245
Round 008: test acc mean=0.5060 ± 0.0214 | min=0.4747 max=0.5625
         : test loss mean=0.8383 ± 0.1648
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.485590', '0.521397', '0.496007', '0.562500', '0.491135', '0.474650', '0.498667', '0.522569', '0.493103', '0.482206', '0.482969', '0.515598', '0.508400', '0.522040', '0.482033']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (556, 1145), (597, 1145), (559, 1127), (639, 1136), (554, 1128), (543, 1144), (561, 1125), (602, 1152), (572, 1160), (542, 1124), (553, 1145), (595, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5024, honest: 0.5069
Round 009: test acc mean=0.5088 ± 0.0202 | min=0.4747 max=0.5625
         : test loss mean=0.7448 ± 0.0663
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.485590', '0.521397', '0.503993', '0.562500', '0.491135', '0.474650', '0.498667', '0.522569', '0.493103', '0.491103', '0.482969', '0.515598', '0.508400', '0.522040', '0.520596']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (556, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (543, 1144), (561, 1125), (602, 1152), (572, 1160), (552, 1124), (553, 1145), (595, 1154), (575, 1131), (604, 1157), (594, 1141)]
         : compromised: 0.5024, honest: 0.5104
Round 010: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.7225 ± 0.0338
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5131, honest: 0.5172

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.5131, Honest: 0.5172
Overall test accuracy: mean=0.5164 ± 0.0150

=== BALANCE SUMMARY ===
Node 0: acceptance=0.783
Node 1: acceptance=0.633
Node 2: acceptance=0.840
Node 3: acceptance=0.825
Node 4: acceptance=0.800
Node 5: acceptance=0.720
Node 6: acceptance=0.800
Node 7: acceptance=0.760
Node 8: acceptance=0.850
Node 9: acceptance=0.633
Node 10: acceptance=0.775
Node 11: acceptance=0.786
Node 12: acceptance=0.729
Node 13: acceptance=0.600
Node 14: acceptance=0.614
Node 15: acceptance=0.650
Node 16: acceptance=0.720
Node 17: acceptance=0.500
Node 18: acceptance=0.800
Node 19: acceptance=0.800

Performance Summary:
  - Distance computation time: 0.761s (39.4%)
  - Filtering time: 0.893s (46.2%)
  - Aggregation time: 0.279s (14.4%)
  - Total time: 1.934s
  - Mean acceptance rate: 0.731

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
