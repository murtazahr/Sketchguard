Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Projects/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Degree statistics: avg=2.00, min=2, max=2
Attack: Compromised 4/20 nodes: [5, 12, 13, 17]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
BALANCE algorithm:
Balance Config: BALANCEConfig(gamma=2, kappa=1, alpha=0.5, min_neighbors=1)
  - Model dimension: 2,219,692 parameters
  - Complexity: O(N×d) = O(20×2,219,692)
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.6377 ± 0.0482 | min=0.5368 max=0.7144
         : test loss mean=0.6780 ± 0.0067
         : individual accs = ['0.606140', '0.677029', '0.661934', '0.607945', '0.640212', '0.550218', '0.555459', '0.536823', '0.711268', '0.658688', '0.680070', '0.670222', '0.714410', '0.656897', '0.631673', '0.645415', '0.630849', '0.665782', '0.655143', '0.597721']
         : correct/total = [(691, 1140), (784, 1158), (746, 1127), (704, 1158), (726, 1134), (630, 1145), (636, 1145), (605, 1127), (808, 1136), (743, 1128), (778, 1144), (754, 1125), (823, 1152), (762, 1160), (710, 1124), (739, 1145), (728, 1154), (753, 1131), (758, 1157), (682, 1141)]
         : compromised: 0.6468, honest: 0.6354
Round 002: test acc mean=0.7220 ± 0.0340 | min=0.6507 max=0.7682
         : test loss mean=0.6028 ± 0.0439
         : individual accs = ['0.692982', '0.680484', '0.691216', '0.692573', '0.700176', '0.650655', '0.728384', '0.686779', '0.746479', '0.701241', '0.756119', '0.754667', '0.768229', '0.762069', '0.762456', '0.745852', '0.766898', '0.708223', '0.738980', '0.706398']
         : correct/total = [(790, 1140), (788, 1158), (779, 1127), (802, 1158), (794, 1134), (745, 1145), (834, 1145), (774, 1127), (848, 1136), (791, 1128), (865, 1144), (849, 1125), (885, 1152), (884, 1160), (857, 1124), (854, 1145), (885, 1154), (801, 1131), (855, 1157), (806, 1141)]
         : compromised: 0.7223, honest: 0.7220
Round 003: test acc mean=0.7883 ± 0.0387 | min=0.7171 max=0.8458
         : test loss mean=0.4840 ± 0.0804
         : individual accs = ['0.744737', '0.740069', '0.747116', '0.757340', '0.776896', '0.728384', '0.799127', '0.777285', '0.798415', '0.809397', '0.845280', '0.835556', '0.835938', '0.766379', '0.809609', '0.814847', '0.845754', '0.717065', '0.806396', '0.810692']
         : correct/total = [(849, 1140), (857, 1158), (842, 1127), (877, 1158), (881, 1134), (834, 1145), (915, 1145), (876, 1127), (907, 1136), (913, 1128), (967, 1144), (940, 1125), (963, 1152), (889, 1160), (910, 1124), (933, 1145), (976, 1154), (811, 1131), (933, 1157), (925, 1141)]
         : compromised: 0.7619, honest: 0.7949
Round 004: test acc mean=0.8358 ± 0.0328 | min=0.7453 max=0.8733
         : test loss mean=0.3915 ± 0.0785
         : individual accs = ['0.811404', '0.809154', '0.745342', '0.814335', '0.825397', '0.823581', '0.855022', '0.839397', '0.848592', '0.861702', '0.873252', '0.868444', '0.862847', '0.853448', '0.866548', '0.851528', '0.854419', '0.766578', '0.835782', '0.850131']
         : correct/total = [(925, 1140), (937, 1158), (840, 1127), (943, 1158), (936, 1134), (943, 1145), (979, 1145), (946, 1127), (964, 1136), (972, 1128), (999, 1144), (977, 1125), (994, 1152), (990, 1160), (974, 1124), (975, 1145), (986, 1154), (867, 1131), (967, 1157), (970, 1141)]
         : compromised: 0.8266, honest: 0.8382
Round 005: test acc mean=0.8535 ± 0.0252 | min=0.7950 max=0.8925
         : test loss mean=0.3493 ± 0.0616
         : individual accs = ['0.821930', '0.854059', '0.795031', '0.854922', '0.850970', '0.837555', '0.869869', '0.868678', '0.832746', '0.842199', '0.892483', '0.869333', '0.877604', '0.873276', '0.876335', '0.863755', '0.889948', '0.827586', '0.814175', '0.857143']
         : correct/total = [(937, 1140), (989, 1158), (896, 1127), (990, 1158), (965, 1134), (959, 1145), (996, 1145), (979, 1127), (946, 1136), (950, 1128), (1021, 1144), (978, 1125), (1011, 1152), (1013, 1160), (985, 1124), (989, 1145), (1027, 1154), (936, 1131), (942, 1157), (978, 1141)]
         : compromised: 0.8540, honest: 0.8533
Round 006: test acc mean=0.8761 ± 0.0157 | min=0.8214 max=0.8943
         : test loss mean=0.3095 ± 0.0489
         : individual accs = ['0.864912', '0.878238', '0.865129', '0.881693', '0.873898', '0.878603', '0.882096', '0.880213', '0.882923', '0.866135', '0.890734', '0.890667', '0.883681', '0.887069', '0.892349', '0.870742', '0.894281', '0.821397', '0.861711', '0.876424']
         : correct/total = [(986, 1140), (1017, 1158), (975, 1127), (1021, 1158), (991, 1134), (1006, 1145), (1010, 1145), (992, 1127), (1003, 1136), (977, 1128), (1019, 1144), (1002, 1125), (1018, 1152), (1029, 1160), (1003, 1124), (997, 1145), (1032, 1154), (929, 1131), (997, 1157), (1000, 1141)]
         : compromised: 0.8677, honest: 0.8783
Round 007: test acc mean=0.8849 ± 0.0117 | min=0.8532 max=0.9111
         : test loss mean=0.2882 ± 0.0348
         : individual accs = ['0.871930', '0.886874', '0.874002', '0.892055', '0.873898', '0.882096', '0.888210', '0.887311', '0.885563', '0.890957', '0.896853', '0.911111', '0.889757', '0.887931', '0.895018', '0.879476', '0.892548', '0.853227', '0.872083', '0.887818']
         : correct/total = [(994, 1140), (1027, 1158), (985, 1127), (1033, 1158), (991, 1134), (1010, 1145), (1017, 1145), (1000, 1127), (1006, 1136), (1005, 1128), (1026, 1144), (1025, 1125), (1025, 1152), (1030, 1160), (1006, 1124), (1007, 1145), (1030, 1154), (965, 1131), (1009, 1157), (1013, 1141)]
         : compromised: 0.8783, honest: 0.8866
Round 008: test acc mean=0.8873 ± 0.0104 | min=0.8697 max=0.9058
         : test loss mean=0.2731 ± 0.0206
         : individual accs = ['0.885965', '0.887737', '0.879326', '0.879965', '0.879189', '0.898690', '0.889083', '0.889973', '0.870599', '0.869681', '0.894231', '0.905778', '0.889757', '0.895690', '0.903025', '0.886463', '0.902946', '0.882405', '0.872083', '0.882559']
         : correct/total = [(1010, 1140), (1028, 1158), (991, 1127), (1019, 1158), (997, 1134), (1029, 1145), (1018, 1145), (1003, 1127), (989, 1136), (981, 1128), (1023, 1144), (1019, 1125), (1025, 1152), (1039, 1160), (1015, 1124), (1015, 1145), (1042, 1154), (998, 1131), (1009, 1157), (1007, 1141)]
         : compromised: 0.8916, honest: 0.8862
Round 009: test acc mean=0.8931 ± 0.0106 | min=0.8638 max=0.9057
         : test loss mean=0.2619 ± 0.0210
         : individual accs = ['0.891228', '0.898964', '0.889086', '0.900691', '0.889771', '0.905677', '0.896070', '0.900621', '0.888204', '0.893617', '0.895105', '0.903111', '0.897569', '0.899138', '0.904804', '0.890830', '0.896880', '0.863837', '0.866897', '0.889571']
         : correct/total = [(1016, 1140), (1041, 1158), (1002, 1127), (1043, 1158), (1009, 1134), (1037, 1145), (1026, 1145), (1015, 1127), (1009, 1136), (1008, 1128), (1024, 1144), (1016, 1125), (1034, 1152), (1043, 1160), (1017, 1124), (1020, 1145), (1035, 1154), (977, 1131), (1003, 1157), (1015, 1141)]
         : compromised: 0.8916, honest: 0.8935
Round 010: test acc mean=0.8973 ± 0.0083 | min=0.8846 max=0.9128
         : test loss mean=0.2548 ± 0.0175
         : individual accs = ['0.897368', '0.890328', '0.884650', '0.912781', '0.894180', '0.904803', '0.886463', '0.902396', '0.898768', '0.898936', '0.902098', '0.912000', '0.900174', '0.896552', '0.906584', '0.888210', '0.903813', '0.885942', '0.885912', '0.894829']
         : correct/total = [(1023, 1140), (1031, 1158), (997, 1127), (1057, 1158), (1014, 1134), (1036, 1145), (1015, 1145), (1017, 1127), (1021, 1136), (1014, 1128), (1032, 1144), (1026, 1125), (1037, 1152), (1040, 1160), (1019, 1124), (1017, 1145), (1043, 1154), (1002, 1131), (1025, 1157), (1021, 1141)]
         : compromised: 0.8969, honest: 0.8975

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: balance
Attack: gaussian, 20.0% compromised
Final accuracy - Compromised: 0.8969, Honest: 0.8975
Overall test accuracy: mean=0.8973 ± 0.0083

=== BALANCE SUMMARY ===
Node 0: acceptance=1.000
Node 1: acceptance=1.000
Node 2: acceptance=1.000
Node 3: acceptance=1.000
Node 4: acceptance=0.500
Node 5: acceptance=0.800
Node 6: acceptance=0.500
Node 7: acceptance=1.000
Node 8: acceptance=1.000
Node 9: acceptance=1.000
Node 10: acceptance=1.000
Node 11: acceptance=0.500
Node 12: acceptance=0.500
Node 13: acceptance=0.500
Node 14: acceptance=0.500
Node 15: acceptance=1.000
Node 16: acceptance=0.500
Node 17: acceptance=0.800
Node 18: acceptance=0.500
Node 19: acceptance=1.000

=== PARALLEL EXECUTION TIME (realistic for distributed system) ===
  COMMUNICATION (max across nodes):
    - Full model transfer: 0.000s (0.1%)
  COMPUTATION (max across nodes):
    - Filtering: 0.036s (63.6%)
    - Aggregation: 0.020s (36.3%)
  TOTALS:
    - Total computation: 0.056s (99.9%)
    - Total communication: 0.000s (0.1%)
    - Total parallel time: 0.056s

=== PER-NODE AVERAGE TIME ===
  - Filtering: 0.017s
  - Aggregation: 0.010s
  - Model transfer: 0.000s
  - Total per node: 0.027s

=== TOTAL COMPUTATIONAL WORK (sum across all nodes) ===
  - Total filtering: 0.332s
  - Total aggregation: 0.206s
  - Total model transfer: 0.000s
  - Grand total: 0.538s
  - Mean acceptance rate: 0.780

BALANCE Algorithm Properties:
  - Model dimension: 2,219,692
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
