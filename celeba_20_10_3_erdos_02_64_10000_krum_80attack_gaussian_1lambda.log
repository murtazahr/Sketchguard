Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 4500 samples per client per epoch
Graph: erdos, nodes: 20, edges: 48
Degree statistics: avg=4.80, min=2, max=7
Attack: Compromised 16/20 nodes: [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
Model variant: baseline
Model parameters: 2,219,692
Initial test acc across nodes: mean=0.4978 ± 0.0208
Round 001: test acc mean=0.5027 ± 0.0231 | min=0.4619 max=0.5581
         : test loss mean=33474016.4363 ± 25973545.3511
         : individual accs = ['0.529825', '0.486183', '0.478261', '0.482729', '0.462963', '0.485590', '0.508297', '0.501331', '0.558099', '0.461879', '0.513986', '0.521778', '0.496528', '0.506034', '0.524021', '0.528384', '0.513865', '0.495137', '0.507347', '0.490798']
         : correct/total = [(604, 1140), (563, 1158), (539, 1127), (559, 1158), (525, 1134), (556, 1145), (582, 1145), (565, 1127), (634, 1136), (521, 1128), (588, 1144), (587, 1125), (572, 1152), (587, 1160), (589, 1124), (605, 1145), (593, 1154), (560, 1131), (587, 1157), (560, 1141)]
         : compromised: 0.5028, honest: 0.5020
Round 002: test acc mean=0.5132 ± 0.0174 | min=0.4784 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.478411', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.488000', '0.522569', '0.509483', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.512708']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (554, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (549, 1125), (602, 1152), (591, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (585, 1141)]
         : compromised: 0.5121, honest: 0.5176
Round 003: test acc mean=0.5139 ± 0.0198 | min=0.4667 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.481002', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.466667', '0.522569', '0.530172', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.524978']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (557, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (525, 1125), (602, 1152), (615, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (599, 1141)]
         : compromised: 0.5130, honest: 0.5176
Round 004: test acc mean=0.5133 ± 0.0163 | min=0.4889 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.496546', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.488889', '0.522569', '0.505172', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.499562']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (575, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (550, 1125), (602, 1152), (586, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (570, 1141)]
         : compromised: 0.5122, honest: 0.5176
Round 005: test acc mean=0.5169 ± 0.0153 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.492228', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.521778', '0.522569', '0.522414', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.526731']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (570, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (587, 1125), (602, 1152), (606, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (601, 1141)]
         : compromised: 0.5167, honest: 0.5176
Round 006: test acc mean=0.5123 ± 0.0202 | min=0.4681 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.471503', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.506667', '0.522569', '0.468103', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.524978']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (570, 1125), (602, 1152), (543, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (599, 1141)]
         : compromised: 0.5110, honest: 0.5176
Round 007: test acc mean=0.5154 ± 0.0193 | min=0.4715 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.471503', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.517333', '0.522569', '0.494828', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.548642']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (582, 1125), (602, 1152), (574, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (626, 1141)]
         : compromised: 0.5148, honest: 0.5176
Round 008: test acc mean=0.5150 ± 0.0163 | min=0.4838 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.506667', '0.522569', '0.506034', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.483786']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (570, 1125), (602, 1152), (587, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (552, 1141)]
         : compromised: 0.5143, honest: 0.5176
Round 009: test acc mean=0.5157 ± 0.0145 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.516408', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.508444', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.506573']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (598, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (572, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (578, 1141)]
         : compromised: 0.5152, honest: 0.5176
Round 010: test acc mean=0.5116 ± 0.0188 | min=0.4715 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.471503', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.504889', '0.522569', '0.493966', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.486415']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (546, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (568, 1125), (602, 1152), (573, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (555, 1141)]
         : compromised: 0.5101, honest: 0.5176

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: krum
Attack: gaussian, 80.0% compromised
Final accuracy - Compromised: 0.5101, Honest: 0.5176
Overall test accuracy: mean=0.5116 ± 0.0188
