Device: cuda
Seed: 987654321
Loading 36 LEAF FEMNIST train files...
LEAF FEMNIST train: 3597 users, 734463 samples
Loading 36 LEAF FEMNIST test files...
LEAF FEMNIST test: 3597 users, 83388 samples
Found 3597 train users, 3597 test users, 3597 common users
User sample counts range: 525 (max) to 17 (min)
Distributed ALL 3597 users across 20 clients
Users per client: 179 (with 17 clients getting +1 user)
Train partition sizes: [36360, 37070, 35957, 38262, 36024, 37732, 36921, 38328, 36867, 37683, 36507, 36915, 36007, 37001, 35681, 35453, 36585, 36801, 35964, 36345]
Test partition sizes: [4128, 4203, 4081, 4333, 4091, 4287, 4193, 4349, 4191, 4277, 4143, 4193, 4093, 4197, 4052, 4029, 4153, 4183, 4084, 4128]
  Client 0: 36360 train samples, 62 unique classes
  Client 1: 37070 train samples, 62 unique classes
  Client 2: 35957 train samples, 62 unique classes
  Client 3: 38262 train samples, 62 unique classes
  Client 4: 36024 train samples, 62 unique classes
  Client 5: 37732 train samples, 62 unique classes
  Client 6: 36921 train samples, 62 unique classes
  Client 7: 38328 train samples, 62 unique classes
  Client 8: 36867 train samples, 62 unique classes
  Client 9: 37683 train samples, 62 unique classes
  Client 10: 36507 train samples, 62 unique classes
  Client 11: 36915 train samples, 62 unique classes
  Client 12: 36007 train samples, 62 unique classes
  Client 13: 37001 train samples, 62 unique classes
  Client 14: 35681 train samples, 62 unique classes
  Client 15: 35453 train samples, 62 unique classes
  Client 16: 36585 train samples, 62 unique classes
  Client 17: 36801 train samples, 62 unique classes
  Client 18: 35964 train samples, 62 unique classes
  Client 19: 36345 train samples, 62 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 8/20 nodes: [1, 5, 11, 12, 13, 14, 17, 18]
Attack type: directed_deviation, lambda: 1.0
COARSE Node 0:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 1:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 2:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 3:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 4:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 5:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 6:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 7:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 8:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 9:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 10:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 11:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 12:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 13:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 14:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 15:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 16:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 17:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 18:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE Node 19:
  Model dim: 6,603,710 → Sketch size: 1000
  Compression ratio: 6603.7x
  Using model parameters for aggregation, sketches for filtering
COARSE ALGORITHM (Sketch-based Filtering + State Aggregation)
  - Model dimension: 6,603,710 parameters
  - Sketch size: 1000
  - Compression ratio: 6603.7x
  - Complexity: O(d + N×k) = O(6,603,710 + 20×1000)
  - Theoretical speedup vs BALANCE: 19.9x
Initial test acc across nodes: mean=0.0162 ± 0.0138
Round 001: test acc mean=0.4708 ± 0.0354 | min=0.4193 max=0.5409
         : test loss mean=3.7593 ± 0.0285
         : individual accs = ['0.538275', '0.481799', '0.484685', '0.451881', '0.430213', '0.540938', '0.461245', '0.437802', '0.460988', '0.448913', '0.419261', '0.511805', '0.457855', '0.436502', '0.492103', '0.492926', '0.434385', '0.525221', '0.462782', '0.446463']
         : correct/total = [(2222, 4128), (2025, 4203), (1978, 4081), (1958, 4333), (1760, 4091), (2319, 4287), (1934, 4193), (1904, 4349), (1932, 4191), (1920, 4277), (1737, 4143), (2146, 4193), (1874, 4093), (1832, 4197), (1994, 4052), (1986, 4029), (1804, 4153), (2197, 4183), (1890, 4084), (1843, 4128)]
         : compromised: 0.4886, honest: 0.4589
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 002: test acc mean=0.6785 ± 0.0177 | min=0.6353 max=0.7061
         : test loss mean=3.2711 ± 0.1645
         : individual accs = ['0.701793', '0.679277', '0.671159', '0.700438', '0.685407', '0.706088', '0.635345', '0.688434', '0.675257', '0.700491', '0.678735', '0.654901', '0.687271', '0.669764', '0.691757', '0.681807', '0.659523', '0.654076', '0.676298', '0.672481']
         : correct/total = [(2897, 4128), (2855, 4203), (2739, 4081), (3035, 4333), (2804, 4091), (3027, 4287), (2664, 4193), (2994, 4349), (2830, 4191), (2996, 4277), (2812, 4143), (2746, 4193), (2813, 4093), (2811, 4197), (2803, 4052), (2747, 4029), (2739, 4153), (2736, 4183), (2762, 4084), (2776, 4128)]
         : compromised: 0.6774, honest: 0.6792
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 003: test acc mean=0.6993 ± 0.0213 | min=0.6576 max=0.7406
         : test loss mean=2.7547 ± 0.3531
         : individual accs = ['0.731347', '0.680466', '0.683411', '0.740595', '0.691029', '0.657569', '0.728834', '0.712118', '0.718921', '0.703063', '0.705769', '0.675888', '0.693135', '0.684298', '0.711500', '0.694217', '0.691067', '0.668659', '0.693683', '0.719961']
         : correct/total = [(3019, 4128), (2860, 4203), (2789, 4081), (3209, 4333), (2827, 4091), (2819, 4287), (3056, 4193), (3097, 4349), (3013, 4191), (3007, 4277), (2924, 4143), (2834, 4193), (2837, 4093), (2872, 4197), (2883, 4052), (2797, 4029), (2870, 4153), (2797, 4183), (2833, 4084), (2972, 4128)]
         : compromised: 0.6831, honest: 0.7100
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 004: test acc mean=0.7112 ± 0.0373 | min=0.6296 max=0.7683
         : test loss mean=2.0590 ± 0.4262
         : individual accs = ['0.738614', '0.631692', '0.721392', '0.745673', '0.748228', '0.686494', '0.739089', '0.738791', '0.768313', '0.732990', '0.688631', '0.680420', '0.629612', '0.711461', '0.670780', '0.746587', '0.731038', '0.699259', '0.689765', '0.724806']
         : correct/total = [(3049, 4128), (2655, 4203), (2944, 4081), (3231, 4333), (3061, 4091), (2943, 4287), (3099, 4193), (3213, 4349), (3220, 4191), (3135, 4277), (2853, 4143), (2853, 4193), (2577, 4093), (2986, 4197), (2718, 4052), (3008, 4029), (3036, 4153), (2925, 4183), (2817, 4084), (2992, 4128)]
         : compromised: 0.6749, honest: 0.7353
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 005: test acc mean=0.7314 ± 0.0442 | min=0.6043 max=0.7948
         : test loss mean=1.4113 ± 0.3198
         : individual accs = ['0.734254', '0.604330', '0.754717', '0.758597', '0.750917', '0.758572', '0.737896', '0.764774', '0.794798', '0.771803', '0.729906', '0.702123', '0.696311', '0.699786', '0.668806', '0.769173', '0.777992', '0.685632', '0.712047', '0.754845']
         : correct/total = [(3031, 4128), (2540, 4203), (3080, 4081), (3287, 4333), (3072, 4091), (3252, 4287), (3094, 4193), (3326, 4349), (3331, 4191), (3301, 4277), (3024, 4143), (2944, 4193), (2850, 4093), (2937, 4197), (2710, 4052), (3099, 4029), (3231, 4153), (2868, 4183), (2908, 4084), (3116, 4128)]
         : compromised: 0.6910, honest: 0.7583
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 006: test acc mean=0.7841 ± 0.0174 | min=0.7430 max=0.8063
         : test loss mean=0.8925 ± 0.1316
         : individual accs = ['0.772529', '0.743041', '0.793923', '0.806139', '0.786360', '0.788897', '0.783687', '0.805473', '0.806251', '0.797054', '0.788318', '0.780348', '0.755192', '0.774363', '0.770977', '0.801440', '0.805442', '0.766914', '0.766161', '0.788517']
         : correct/total = [(3189, 4128), (3123, 4203), (3240, 4081), (3493, 4333), (3217, 4091), (3382, 4287), (3286, 4193), (3503, 4349), (3379, 4191), (3409, 4277), (3266, 4143), (3272, 4193), (3091, 4093), (3250, 4197), (3124, 4052), (3229, 4029), (3345, 4153), (3208, 4183), (3129, 4084), (3255, 4128)]
         : compromised: 0.7682, honest: 0.7946
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 007: test acc mean=0.8134 ± 0.0089 | min=0.7935 max=0.8301
         : test loss mean=0.6551 ± 0.0492
         : individual accs = ['0.805475', '0.813942', '0.813771', '0.823679', '0.809582', '0.814789', '0.817553', '0.822948', '0.830112', '0.820669', '0.806420', '0.813499', '0.793550', '0.811294', '0.814659', '0.823033', '0.823501', '0.798948', '0.807052', '0.804506']
         : correct/total = [(3325, 4128), (3421, 4203), (3321, 4081), (3569, 4333), (3312, 4091), (3493, 4287), (3428, 4193), (3579, 4349), (3479, 4191), (3510, 4277), (3341, 4143), (3411, 4193), (3248, 4093), (3405, 4197), (3301, 4052), (3316, 4029), (3420, 4153), (3342, 4183), (3296, 4084), (3321, 4128)]
         : compromised: 0.8085, honest: 0.8168
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 008: test acc mean=0.8237 ± 0.0075 | min=0.8067 max=0.8369
         : test loss mean=0.5625 ± 0.0256
         : individual accs = ['0.814922', '0.823697', '0.819897', '0.832449', '0.819848', '0.828785', '0.825900', '0.833525', '0.824863', '0.832593', '0.815110', '0.832340', '0.815539', '0.823207', '0.836871', '0.825019', '0.817963', '0.824528', '0.821009', '0.806686']
         : correct/total = [(3364, 4128), (3462, 4203), (3346, 4081), (3607, 4333), (3354, 4091), (3553, 4287), (3463, 4193), (3625, 4349), (3457, 4191), (3561, 4277), (3377, 4143), (3490, 4193), (3338, 4093), (3455, 4197), (3391, 4052), (3324, 4029), (3397, 4153), (3449, 4183), (3353, 4084), (3330, 4128)]
         : compromised: 0.8257, honest: 0.8224
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 009: test acc mean=0.8369 ± 0.0047 | min=0.8292 max=0.8468
         : test loss mean=0.5080 ± 0.0167
         : individual accs = ['0.829215', '0.840590', '0.833864', '0.841911', '0.830848', '0.835783', '0.840448', '0.840883', '0.846815', '0.843582', '0.834661', '0.833532', '0.832397', '0.835835', '0.842794', '0.840159', '0.832892', '0.833612', '0.835211', '0.833333']
         : correct/total = [(3423, 4128), (3533, 4203), (3403, 4081), (3648, 4333), (3399, 4091), (3583, 4287), (3524, 4193), (3657, 4349), (3549, 4191), (3608, 4277), (3458, 4143), (3495, 4193), (3407, 4093), (3508, 4197), (3415, 4052), (3385, 4029), (3459, 4153), (3487, 4183), (3411, 4084), (3440, 4128)]
         : compromised: 0.8362, honest: 0.8374
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...
Round 010: test acc mean=0.8436 ± 0.0052 | min=0.8330 max=0.8508
         : test loss mean=0.4821 ± 0.0179
         : individual accs = ['0.836967', '0.850821', '0.839990', '0.849527', '0.835981', '0.843714', '0.846411', '0.846401', '0.845622', '0.847557', '0.832971', '0.840687', '0.839238', '0.847272', '0.848717', '0.849839', '0.841079', '0.849390', '0.844025', '0.836725']
         : correct/total = [(3455, 4128), (3576, 4203), (3428, 4081), (3681, 4333), (3420, 4091), (3617, 4287), (3549, 4193), (3681, 4349), (3544, 4191), (3625, 4277), (3451, 4143), (3525, 4193), (3435, 4093), (3556, 4197), (3439, 4052), (3424, 4029), (3493, 4153), (3553, 4183), (3447, 4084), (3454, 4128)]
         : compromised: 0.8455, honest: 0.8424
         : coarse stats = ['Node 0: acc_rate=0.583', 'Node 1: acc_rate=0.700', 'Node 2: acc_rate=0.500']...

=== FINAL RESULTS ===
Dataset: femnist, Nodes: 20, Graph: erdos, Aggregation: coarse
Attack: directed_deviation, 40.0% compromised
Final accuracy - Compromised: 0.8455, Honest: 0.8424
Overall test accuracy: mean=0.8436 ± 0.0052

=== COARSE SUMMARY ===
Node 0: acceptance=0.583
Node 1: acceptance=0.700
Node 2: acceptance=0.500
Node 3: acceptance=0.571
Node 4: acceptance=0.444
Node 5: acceptance=0.500
Node 6: acceptance=0.500
Node 7: acceptance=0.455
Node 8: acceptance=0.286
Node 9: acceptance=0.818
Node 10: acceptance=0.625
Node 11: acceptance=0.500
Node 12: acceptance=0.667
Node 13: acceptance=0.667
Node 14: acceptance=0.571
Node 15: acceptance=0.444
Node 16: acceptance=0.429
Node 17: acceptance=0.625
Node 18: acceptance=0.667
Node 19: acceptance=0.500

Performance Summary:
  - Sketching time: 15.955s (98.0%)
  - Filtering time: 0.020s (0.1%)
  - Aggregation time: 0.299s (1.8%)
  - Total time: 16.274s
  - Mean acceptance rate: 0.553

COARSE Algorithm Properties:
  - Original dimension: 6,603,710
  - Sketch size: 1000
  - Compression ratio: 19.9x
  - Single repetition: No repetitions needed
  - Theoretical complexity: O(d + N×k)
  - Approach: Sketch filtering + state aggregation
