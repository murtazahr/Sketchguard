Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: erdos, nodes: 20, edges: 99
Attack: Compromised 14/20 nodes: [1, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 17, 18, 19]
Attack type: gaussian, lambda: 1.0
BALANCE algorithm:
  - Model dimension: 30,758 parameters
  - Complexity: O(N×d) = O(20×30,758)
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=0.8693 ± 0.0890
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.507759', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (589, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 002: test acc mean=0.5501 ± 0.1049 | min=0.4911 max=0.8836
         : test loss mean=0.7495 ± 0.1600
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.522626', '0.841549', '0.491135', '0.525350', '0.498667', '0.522569', '0.883621', '0.517794', '0.517031', '0.515598', '0.508400', '0.522904', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (589, 1127), (956, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (1025, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (605, 1157), (591, 1141)]
         : compromised: 0.5641, honest: 0.5176
Round 003: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5172, honest: 0.5145
Round 004: test acc mean=0.5043 ± 0.0191 | min=0.4707 max=0.5328
         : test loss mean=2725.4000 ± 5306.9605
         : individual accs = ['0.528947', '0.483592', '0.514641', '0.482729', '0.477954', '0.470742', '0.512664', '0.489796', '0.532570', '0.497340', '0.493007', '0.512889', '0.520833', '0.493103', '0.482206', '0.532751', '0.515598', '0.499558', '0.522040', '0.523225']
         : correct/total = [(603, 1140), (560, 1158), (580, 1127), (559, 1158), (542, 1134), (539, 1145), (587, 1145), (552, 1127), (605, 1136), (561, 1128), (564, 1144), (577, 1125), (600, 1152), (572, 1160), (542, 1124), (610, 1145), (595, 1154), (565, 1131), (604, 1157), (597, 1141)]
         : compromised: 0.5060, honest: 0.5004
Round 005: test acc mean=0.5110 ± 0.0314 | min=0.4375 max=0.5951
         : test loss mean=708.7956 ± 757.8468
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.464594', '0.498236', '0.503930', '0.517031', '0.519965', '0.437500', '0.510638', '0.518357', '0.558222', '0.519097', '0.506897', '0.540036', '0.496943', '0.484402', '0.508400', '0.509075', '0.595092']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (538, 1158), (565, 1134), (577, 1145), (592, 1145), (586, 1127), (497, 1136), (576, 1128), (593, 1144), (628, 1125), (598, 1152), (588, 1160), (607, 1124), (569, 1145), (559, 1154), (575, 1131), (589, 1157), (679, 1141)]
         : compromised: 0.5113, honest: 0.5101
Round 006: test acc mean=0.5005 ± 0.0238 | min=0.4401 max=0.5358
         : test loss mean=1648.4555 ± 3628.2389
         : individual accs = ['0.528947', '0.506908', '0.524401', '0.521589', '0.480600', '0.485590', '0.525764', '0.518190', '0.440141', '0.496454', '0.535839', '0.488000', '0.512153', '0.516379', '0.509786', '0.482096', '0.487868', '0.508400', '0.471046', '0.470640']
         : correct/total = [(603, 1140), (587, 1158), (591, 1127), (604, 1158), (545, 1134), (556, 1145), (602, 1145), (584, 1127), (500, 1136), (560, 1128), (613, 1144), (549, 1125), (590, 1152), (599, 1160), (573, 1124), (552, 1145), (563, 1154), (575, 1131), (545, 1157), (537, 1141)]
         : compromised: 0.4973, honest: 0.5080
Round 007: test acc mean=0.5081 ± 0.0207 | min=0.4711 max=0.5625
         : test loss mean=1.3378 ± 0.7446
         : individual accs = ['0.471053', '0.508636', '0.506655', '0.471503', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.508865', '0.525350', '0.501333', '0.522569', '0.506897', '0.482206', '0.517031', '0.484402', '0.491600', '0.522040', '0.517967']
         : correct/total = [(537, 1140), (589, 1158), (571, 1127), (546, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (574, 1128), (601, 1144), (564, 1125), (602, 1152), (588, 1160), (542, 1124), (592, 1145), (559, 1154), (556, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5105, honest: 0.5026
Round 008: test acc mean=0.4989 ± 0.0216 | min=0.4375 max=0.5276
         : test loss mean=0.8657 ± 0.2948
         : individual accs = ['0.471053', '0.508636', '0.506655', '0.527634', '0.498236', '0.514410', '0.478603', '0.503993', '0.437500', '0.490248', '0.525350', '0.498667', '0.477431', '0.506897', '0.517794', '0.517031', '0.484402', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (589, 1158), (571, 1127), (611, 1158), (565, 1134), (589, 1145), (548, 1145), (568, 1127), (497, 1136), (553, 1128), (601, 1144), (561, 1125), (550, 1152), (588, 1160), (582, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.5003, honest: 0.4955
Round 009: test acc mean=0.5028 ± 0.0320 | min=0.4375 max=0.5847
         : test loss mean=0.7290 ± 0.1231
         : individual accs = ['0.471053', '0.491364', '0.506655', '0.528497', '0.559083', '0.514410', '0.478603', '0.584738', '0.437500', '0.523936', '0.475524', '0.498667', '0.477431', '0.512931', '0.482206', '0.517031', '0.484402', '0.508400', '0.522040', '0.482033']
         : correct/total = [(537, 1140), (569, 1158), (571, 1127), (612, 1158), (634, 1134), (589, 1145), (548, 1145), (659, 1127), (497, 1136), (591, 1128), (544, 1144), (561, 1125), (550, 1152), (595, 1160), (542, 1124), (592, 1145), (559, 1154), (575, 1131), (604, 1157), (550, 1141)]
         : compromised: 0.4970, honest: 0.5165
Round 010: test acc mean=0.5422 ± 0.0357 | min=0.4896 max=0.6300
         : test loss mean=0.6861 ± 0.0120
         : individual accs = ['0.517544', '0.519862', '0.506655', '0.607945', '0.583774', '0.554585', '0.510044', '0.629991', '0.526408', '0.576241', '0.576049', '0.528889', '0.522569', '0.559483', '0.526690', '0.513537', '0.489601', '0.522546', '0.522040', '0.550394']
         : correct/total = [(590, 1140), (602, 1158), (571, 1127), (704, 1158), (662, 1134), (635, 1145), (584, 1145), (710, 1127), (598, 1136), (650, 1128), (659, 1144), (595, 1125), (602, 1152), (649, 1160), (592, 1124), (588, 1145), (565, 1154), (591, 1131), (604, 1157), (628, 1141)]
         : compromised: 0.5337, honest: 0.5622

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: erdos, Aggregation: balance
Attack: gaussian, 70.0% compromised
Final accuracy - Compromised: 0.5337, Honest: 0.5622
Overall test accuracy: mean=0.5422 ± 0.0357

=== BALANCE SUMMARY ===
Node 0: acceptance=0.517
Node 1: acceptance=0.570
Node 2: acceptance=0.600
Node 3: acceptance=0.629
Node 4: acceptance=0.578
Node 5: acceptance=0.500
Node 6: acceptance=0.500
Node 7: acceptance=0.536
Node 8: acceptance=0.486
Node 9: acceptance=0.573
Node 10: acceptance=0.537
Node 11: acceptance=0.508
Node 12: acceptance=0.525
Node 13: acceptance=0.467
Node 14: acceptance=0.507
Node 15: acceptance=0.556
Node 16: acceptance=0.557
Node 17: acceptance=0.625
Node 18: acceptance=0.508
Node 19: acceptance=0.500

Performance Summary:
  - Distance computation time: 1.557s (43.4%)
  - Filtering time: 1.694s (47.2%)
  - Aggregation time: 0.335s (9.3%)
  - Total time: 3.586s
  - Mean acceptance rate: 0.539

BALANCE Algorithm Properties:
  - Model dimension: 30,758
  - No compression: Full parameter comparison
  - Theoretical complexity: O(deg(i)×d)
  - Approach: Full parameter filtering + averaging
