Device: cuda
Seed: 987654321
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA train files...
LEAF CelebA train: 9343 users (celebrities), 177457 samples
Looking for images in: /home/student.unimelb.edu.au/mrangwala/Trust-Monitor/leaf/data/celeba/data/raw/img_align_celeba
Loading 1 LEAF CelebA test files...
LEAF CelebA test: 9343 users (celebrities), 22831 samples
Found 9343 train users, 9343 test users, 9343 common users
User sample counts range: 31 (max) to 4 (min)
Distributed ALL 9343 users across 20 clients
Users per client: 467 (with 3 clients getting +1 user)
Train partition sizes: [8843, 8998, 8728, 9034, 8866, 8946, 8873, 8776, 8816, 8801, 8913, 8656, 9115, 8921, 8699, 8823, 8912, 8766, 9102, 8869]
Test partition sizes: [1140, 1158, 1127, 1158, 1134, 1145, 1145, 1127, 1136, 1128, 1144, 1125, 1152, 1160, 1124, 1145, 1154, 1131, 1157, 1141]
  Client 0: 8843 train samples, 2 unique classes
  Client 1: 8998 train samples, 2 unique classes
  Client 2: 8728 train samples, 2 unique classes
  Client 3: 9034 train samples, 2 unique classes
  Client 4: 8866 train samples, 2 unique classes
  Client 5: 8946 train samples, 2 unique classes
  Client 6: 8873 train samples, 2 unique classes
  Client 7: 8776 train samples, 2 unique classes
  Client 8: 8816 train samples, 2 unique classes
  Client 9: 8801 train samples, 2 unique classes
  Client 10: 8913 train samples, 2 unique classes
  Client 11: 8656 train samples, 2 unique classes
  Client 12: 9115 train samples, 2 unique classes
  Client 13: 8921 train samples, 2 unique classes
  Client 14: 8699 train samples, 2 unique classes
  Client 15: 8823 train samples, 2 unique classes
  Client 16: 8912 train samples, 2 unique classes
  Client 17: 8766 train samples, 2 unique classes
  Client 18: 9102 train samples, 2 unique classes
  Client 19: 8869 train samples, 2 unique classes
Will sample 10000 samples per client per epoch
Graph: ring, nodes: 20, edges: 20
Attack: Compromised 10/20 nodes: [1, 2, 5, 11, 12, 13, 14, 15, 17, 18]
Attack type: gaussian, lambda: 1.0
Initial test acc across nodes: mean=0.4969 ± 0.0214
Round 001: test acc mean=0.5164 ± 0.0150 | min=0.4911 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.528947', '0.508636', '0.493345', '0.528497', '0.522046', '0.514410', '0.521397', '0.503993', '0.562500', '0.491135', '0.525350', '0.498667', '0.522569', '0.506897', '0.517794', '0.517031', '0.515598', '0.508400', '0.522040', '0.517967']
         : correct/total = [(603, 1140), (589, 1158), (556, 1127), (612, 1158), (592, 1134), (589, 1145), (597, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (561, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (595, 1154), (575, 1131), (604, 1157), (591, 1141)]
         : compromised: 0.5110, honest: 0.5217
Round 002: test acc mean=0.5080 ± 0.0426 | min=0.4723 max=0.6778
         : test loss mean=nan ± nan
         : individual accs = ['0.476316', '0.509499', '0.472937', '0.477547', '0.522046', '0.518777', '0.478603', '0.496007', '0.677817', '0.508865', '0.510490', '0.502222', '0.522569', '0.506897', '0.517794', '0.499563', '0.472270', '0.493369', '0.477960', '0.517967']
         : correct/total = [(543, 1140), (590, 1158), (533, 1127), (553, 1158), (592, 1134), (594, 1145), (548, 1145), (559, 1127), (770, 1136), (574, 1128), (584, 1144), (565, 1125), (602, 1152), (588, 1160), (582, 1124), (572, 1145), (545, 1154), (558, 1131), (553, 1157), (591, 1141)]
         : compromised: 0.5022, honest: 0.5138
Round 003: test acc mean=0.5012 ± 0.0238 | min=0.4375 max=0.5473
         : test loss mean=nan ± nan
         : individual accs = ['0.471930', '0.494819', '0.498669', '0.517271', '0.523810', '0.510917', '0.486463', '0.503993', '0.437500', '0.508865', '0.473776', '0.473778', '0.522569', '0.506897', '0.517794', '0.511790', '0.488735', '0.547303', '0.524633', '0.503067']
         : correct/total = [(538, 1140), (573, 1158), (562, 1127), (599, 1158), (594, 1134), (585, 1145), (557, 1145), (568, 1127), (497, 1136), (574, 1128), (542, 1144), (533, 1125), (602, 1152), (588, 1160), (582, 1124), (586, 1145), (564, 1154), (619, 1131), (607, 1157), (574, 1141)]
         : compromised: 0.5109, honest: 0.4915
Round 004: test acc mean=0.4947 ± 0.0239 | min=0.4375 max=0.5263
         : test loss mean=nan ± nan
         : individual accs = ['0.526316', '0.508636', '0.495120', '0.507772', '0.462963', '0.475983', '0.498690', '0.496007', '0.437500', '0.508865', '0.477273', '0.506667', '0.522569', '0.506897', '0.517794', '0.482969', '0.491334', '0.508400', '0.445117', '0.517967']
         : correct/total = [(600, 1140), (589, 1158), (558, 1127), (588, 1158), (525, 1134), (545, 1145), (571, 1145), (559, 1127), (497, 1136), (574, 1128), (546, 1144), (570, 1125), (602, 1152), (588, 1160), (582, 1124), (553, 1145), (567, 1154), (575, 1131), (515, 1157), (591, 1141)]
         : compromised: 0.4970, honest: 0.4925
Round 005: test acc mean=0.4983 ± 0.0212 | min=0.4375 max=0.5226
         : test loss mean=nan ± nan
         : individual accs = ['0.496491', '0.508636', '0.490683', '0.455959', '0.519400', '0.485590', '0.521397', '0.496007', '0.437500', '0.508865', '0.498252', '0.509333', '0.522569', '0.506897', '0.517794', '0.481223', '0.507799', '0.497790', '0.485739', '0.517967']
         : correct/total = [(566, 1140), (589, 1158), (553, 1127), (528, 1158), (589, 1134), (556, 1145), (597, 1145), (559, 1127), (497, 1136), (574, 1128), (570, 1144), (573, 1125), (602, 1152), (588, 1160), (582, 1124), (551, 1145), (586, 1154), (563, 1131), (562, 1157), (591, 1141)]
         : compromised: 0.5006, honest: 0.4960
Round 006: test acc mean=0.5082 ± 0.0228 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.493955', '0.512866', '0.471503', '0.491182', '0.513537', '0.478603', '0.503993', '0.562500', '0.508865', '0.519231', '0.541333', '0.522569', '0.506897', '0.517794', '0.522271', '0.525997', '0.508400', '0.473639', '0.517967']
         : correct/total = [(537, 1140), (572, 1158), (578, 1127), (546, 1158), (557, 1134), (588, 1145), (548, 1145), (568, 1127), (639, 1136), (574, 1128), (594, 1144), (609, 1125), (602, 1152), (588, 1160), (582, 1124), (598, 1145), (607, 1154), (575, 1131), (548, 1157), (591, 1141)]
         : compromised: 0.5113, honest: 0.5051
Round 007: test acc mean=0.4952 ± 0.0227 | min=0.4375 max=0.5350
         : test loss mean=nan ± nan
         : individual accs = ['0.473684', '0.484456', '0.501331', '0.471503', '0.475309', '0.494323', '0.524891', '0.496007', '0.437500', '0.508865', '0.534965', '0.474667', '0.522569', '0.506897', '0.517794', '0.511790', '0.494801', '0.511052', '0.479689', '0.482033']
         : correct/total = [(540, 1140), (561, 1158), (565, 1127), (546, 1158), (539, 1134), (566, 1145), (601, 1145), (559, 1127), (497, 1136), (574, 1128), (612, 1144), (534, 1125), (602, 1152), (588, 1160), (582, 1124), (586, 1145), (571, 1154), (578, 1131), (555, 1157), (550, 1141)]
         : compromised: 0.5005, honest: 0.4900
Round 008: test acc mean=0.5078 ± 0.0200 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.479275', '0.493345', '0.528497', '0.487654', '0.502183', '0.521397', '0.496007', '0.562500', '0.508865', '0.524476', '0.496000', '0.522569', '0.506897', '0.517794', '0.517904', '0.515598', '0.488948', '0.497839', '0.517967']
         : correct/total = [(537, 1140), (555, 1158), (556, 1127), (612, 1158), (553, 1134), (575, 1145), (597, 1145), (559, 1127), (639, 1136), (574, 1128), (600, 1144), (558, 1125), (602, 1152), (588, 1160), (582, 1124), (593, 1145), (595, 1154), (553, 1131), (576, 1157), (591, 1141)]
         : compromised: 0.5023, honest: 0.5134
Round 009: test acc mean=0.5038 ± 0.0194 | min=0.4711 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.471053', '0.496546', '0.508429', '0.484456', '0.484127', '0.514410', '0.520524', '0.503993', '0.562500', '0.491135', '0.488636', '0.499556', '0.522569', '0.506897', '0.517794', '0.506550', '0.483536', '0.506631', '0.517718', '0.489921']
         : correct/total = [(537, 1140), (575, 1158), (573, 1127), (561, 1158), (549, 1134), (589, 1145), (596, 1145), (568, 1127), (639, 1136), (554, 1128), (559, 1144), (562, 1125), (602, 1152), (588, 1160), (582, 1124), (580, 1145), (558, 1154), (573, 1131), (599, 1157), (559, 1141)]
         : compromised: 0.5097, honest: 0.4980
Round 010: test acc mean=0.5096 ± 0.0206 | min=0.4698 max=0.5625
         : test loss mean=nan ± nan
         : individual accs = ['0.527193', '0.525043', '0.493345', '0.469775', '0.523810', '0.476856', '0.522271', '0.503993', '0.562500', '0.491135', '0.525350', '0.496889', '0.522569', '0.506897', '0.517794', '0.517031', '0.503466', '0.508400', '0.482282', '0.514461']
         : correct/total = [(601, 1140), (608, 1158), (556, 1127), (544, 1158), (594, 1134), (546, 1145), (598, 1145), (568, 1127), (639, 1136), (554, 1128), (601, 1144), (559, 1125), (602, 1152), (588, 1160), (582, 1124), (592, 1145), (581, 1154), (575, 1131), (558, 1157), (587, 1141)]
         : compromised: 0.5047, honest: 0.5144

=== FINAL RESULTS ===
Dataset: celeba, Nodes: 20, Graph: ring, Aggregation: krum
Attack: gaussian, 50.0% compromised
Final accuracy - Compromised: 0.5047, Honest: 0.5144
Overall test accuracy: mean=0.5096 ± 0.0206
